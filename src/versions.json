{
  "name": "alfresco-content-app",
  "version": "1.5.0",
  "problems": [
    "peer dep missing: @mat-datetimepicker/core@2.0.0, required by @mat-datetimepicker/moment@2.0.1",
    "peer dep missing: core-js@2.4.1, required by @alfresco/adf-core@2.6.0",
    "peer dep missing: pdfjs-dist@2.0.303, required by @alfresco/adf-core@2.6.0"
  ],
  "dependencies": {
    "@alfresco/adf-content-services": {
      "version": "2.6.0",
      "from": "@alfresco/adf-content-services@2.6.0",
      "resolved": "https://registry.npmjs.org/@alfresco/adf-content-services/-/adf-content-services-2.6.0.tgz"
    },
    "@alfresco/adf-core": {
      "version": "2.6.0",
      "from": "@alfresco/adf-core@2.6.0",
      "resolved": "https://registry.npmjs.org/@alfresco/adf-core/-/adf-core-2.6.0.tgz"
    },
    "@alfresco/adf-extensions": {
      "version": "2.6.0",
      "from": "@alfresco/adf-extensions@2.6.0",
      "resolved": "https://registry.npmjs.org/@alfresco/adf-extensions/-/adf-extensions-2.6.0.tgz"
    },
    "@angular/animations": {
      "version": "6.1.10",
      "from": "@angular/animations@6.1.10",
      "resolved": "https://registry.npmjs.org/@angular/animations/-/animations-6.1.10.tgz"
    },
    "@angular/cdk": {
      "version": "6.4.7",
      "from": "@angular/cdk@6.4.7",
      "resolved": "https://registry.npmjs.org/@angular/cdk/-/cdk-6.4.7.tgz"
    },
    "@angular/common": {
      "version": "6.1.10",
      "from": "@angular/common@6.1.10",
      "resolved": "https://registry.npmjs.org/@angular/common/-/common-6.1.10.tgz"
    },
    "@angular/compiler": {
      "version": "6.1.10",
      "from": "@angular/compiler@6.1.10",
      "resolved": "https://registry.npmjs.org/@angular/compiler/-/compiler-6.1.10.tgz"
    },
    "@angular/core": {
      "version": "6.1.10",
      "from": "@angular/core@6.1.10",
      "resolved": "https://registry.npmjs.org/@angular/core/-/core-6.1.10.tgz"
    },
    "@angular/flex-layout": {
      "version": "6.0.0-beta.18",
      "from": "@angular/flex-layout@6.0.0-beta.18",
      "resolved": "https://registry.npmjs.org/@angular/flex-layout/-/flex-layout-6.0.0-beta.18.tgz"
    },
    "@angular/forms": {
      "version": "6.1.10",
      "from": "@angular/forms@6.1.10",
      "resolved": "https://registry.npmjs.org/@angular/forms/-/forms-6.1.10.tgz"
    },
    "@angular/http": {
      "version": "6.1.10",
      "from": "@angular/http@6.1.10",
      "resolved": "https://registry.npmjs.org/@angular/http/-/http-6.1.10.tgz"
    },
    "@angular/material": {
      "version": "6.4.7",
      "from": "@angular/material@6.4.7",
      "resolved": "https://registry.npmjs.org/@angular/material/-/material-6.4.7.tgz"
    },
    "@angular/material-moment-adapter": {
      "version": "6.4.7",
      "from": "@angular/material-moment-adapter@6.4.7",
      "resolved": "https://registry.npmjs.org/@angular/material-moment-adapter/-/material-moment-adapter-6.4.7.tgz"
    },
    "@angular/platform-browser": {
      "version": "6.1.10",
      "from": "@angular/platform-browser@6.1.10",
      "resolved": "https://registry.npmjs.org/@angular/platform-browser/-/platform-browser-6.1.10.tgz"
    },
    "@angular/platform-browser-dynamic": {
      "version": "6.1.10",
      "from": "@angular/platform-browser-dynamic@6.1.10",
      "resolved": "https://registry.npmjs.org/@angular/platform-browser-dynamic/-/platform-browser-dynamic-6.1.10.tgz"
    },
    "@angular/router": {
      "version": "6.1.10",
      "from": "@angular/router@6.1.10",
      "resolved": "https://registry.npmjs.org/@angular/router/-/router-6.1.10.tgz"
    },
    "@denysvuika/aca-dev-tools": {
      "version": "0.1.5",
      "from": "@denysvuika/aca-dev-tools@0.1.5",
      "resolved": "https://registry.npmjs.org/@denysvuika/aca-dev-tools/-/aca-dev-tools-0.1.5.tgz"
    },
    "@mat-datetimepicker/core": {
      "required": {
        "_args": [
          [
            "@mat-datetimepicker/core@2.0.1",
            "/home/srikanth/Downloads/alfresco-content-app-master"
          ],
          [
            "@mat-datetimepicker/core@2.0.1",
            "/home/srikanth/Srikanth/alfresco/adf-components"
          ]
        ],
        "_from": "@mat-datetimepicker/core@2.0.1",
        "_id": "@mat-datetimepicker/core@2.0.1",
        "_integrity": "sha1-4NsdtdTPe6Vrck7AQIF8totXdfI=",
        "_location": "/@mat-datetimepicker/core",
        "_phantomChildren": {},
        "_requested": {
          "type": "version",
          "registry": true,
          "raw": "@mat-datetimepicker/core@2.0.1",
          "name": "@mat-datetimepicker/core",
          "escapedName": "@mat-datetimepicker%2fcore",
          "scope": "@mat-datetimepicker",
          "rawSpec": "2.0.1",
          "saveSpec": null,
          "fetchSpec": "2.0.1"
        },
        "_requiredBy": [
          "/"
        ],
        "_resolved": "https://registry.npmjs.org/@mat-datetimepicker/core/-/core-2.0.1.tgz",
        "_spec": "2.0.1",
        "_where": "/home/srikanth/Srikanth/alfresco/adf-components",
        "author": {
          "name": "PL",
          "email": "kuhnroyal@gmail.com"
        },
        "bugs": {
          "url": "https://github.com/kuhnroyal/mat-datetimepicker/issues"
        },
        "dependencies": {
          "tslib": {
            "_args": [
              [
                "tslib@1.9.3",
                "/home/srikanth/Downloads/alfresco-content-app-master"
              ],
              [
                "tslib@1.9.3",
                "/home/srikanth/Srikanth/alfresco/adf-components"
              ]
            ],
            "_from": "tslib@1.9.3",
            "_id": "tslib@1.9.3",
            "_integrity": "sha512-4krF8scpejhaOgqzBEcGM7yDIEfi0/8+8zDRZhNZZ2kjmHJ4hv3zCbQWxoJGz1iw5U0Jl0nma13xzHXcncMavQ==",
            "_location": "/tslib",
            "_phantomChildren": {},
            "_requested": {
              "type": "version",
              "registry": true,
              "raw": "tslib@1.9.3",
              "name": "tslib",
              "escapedName": "tslib",
              "rawSpec": "1.9.3",
              "saveSpec": "[Circular]",
              "fetchSpec": "1.9.3"
            },
            "_requiredBy": [
              "#DEV:/",
              "/@alfresco/adf-content-services",
              "/@alfresco/adf-core",
              "/@alfresco/adf-extensions",
              "/@angular-devkit/architect/rxjs",
              "/@angular-devkit/build-angular/rxjs",
              "/@angular-devkit/build-ng-packagr/rxjs",
              "/@angular-devkit/build-webpack/rxjs",
              "/@angular-devkit/core/rxjs",
              "/@angular-devkit/schematics/rxjs",
              "/@angular/animations",
              "/@angular/cdk",
              "/@angular/cli/rxjs",
              "/@angular/common",
              "/@angular/compiler",
              "/@angular/core",
              "/@angular/flex-layout",
              "/@angular/forms",
              "/@angular/http",
              "/@angular/material",
              "/@angular/material-moment-adapter",
              "/@angular/platform-browser",
              "/@angular/platform-browser-dynamic",
              "/@angular/router",
              "/@denysvuika/aca-dev-tools",
              "/@mat-datetimepicker/core",
              "/@mat-datetimepicker/moment",
              "/@ngstack/code-editor",
              "/@ngtools/webpack/rxjs",
              "/@ngx-translate/core",
              "/@schematics/angular/rxjs",
              "/@schematics/update/rxjs",
              "/chrome-trace-event",
              "/rxjs",
              "/rxjs-tslint-rules",
              "/rxjs-tslint-rules/tsutils",
              "/tslint",
              "/tsutils"
            ],
            "_resolved": "https://registry.npmjs.org/tslib/-/tslib-1.9.3.tgz",
            "_spec": "1.9.3",
            "_where": "/home/srikanth/Srikanth/alfresco/adf-components",
            "author": {
              "name": "Microsoft Corp."
            },
            "bugs": {
              "url": "https://github.com/Microsoft/TypeScript/issues"
            },
            "description": "Runtime library for TypeScript helper functions",
            "homepage": "http://typescriptlang.org/",
            "jsnext:main": "tslib.es6.js",
            "keywords": [
              "TypeScript",
              "Microsoft",
              "compiler",
              "language",
              "javascript",
              "tslib",
              "runtime"
            ],
            "license": "Apache-2.0",
            "main": "tslib.js",
            "module": "tslib.es6.js",
            "name": "tslib",
            "repository": {
              "type": "git",
              "url": "git+https://github.com/Microsoft/tslib.git"
            },
            "typings": "tslib.d.ts",
            "version": "1.9.3",
            "readme": "# tslib\r\n\r\nThis is a runtime library for [TypeScript](http://www.typescriptlang.org/) that contains all of the TypeScript helper functions.\r\n\r\nThis library is primarily used by the `--importHelpers` flag in TypeScript.\r\nWhen using `--importHelpers`, a module that uses helper functions like `__extends` and `__assign` in the following emitted file:\r\n\r\n```ts\r\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n            t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\nexports.x = {};\r\nexports.y = __assign({}, exports.x);\r\n\r\n```\r\n\r\nwill instead be emitted as something like the following:\r\n\r\n```ts\r\nvar tslib_1 = require(\"tslib\");\r\nexports.x = {};\r\nexports.y = tslib_1.__assign({}, exports.x);\r\n```\r\n\r\nBecause this can avoid duplicate declarations of things like `__extends`, `__assign`, etc., this means delivering users smaller files on average, as well as less runtime overhead.\r\nFor optimized bundles with TypeScript, you should absolutely consider using `tslib` and `--importHelpers`.\r\n\r\n# Installing\r\n\r\nFor the latest stable version, run:\r\n\r\n## npm\r\n\r\n```sh\r\n# TypeScript 2.3.3 or later\r\nnpm install --save tslib\r\n\r\n# TypeScript 2.3.2 or earlier\r\nnpm install --save tslib@1.6.1\r\n```\r\n\r\n## bower\r\n\r\n```sh\r\n# TypeScript 2.3.3 or later\r\nbower install tslib\r\n\r\n# TypeScript 2.3.2 or earlier\r\nbower install tslib@1.6.1\r\n```\r\n\r\n## JSPM\r\n\r\n```sh\r\n# TypeScript 2.3.3 or later\r\njspm install tslib\r\n\r\n# TypeScript 2.3.2 or earlier\r\njspm install tslib@1.6.1\r\n```\r\n\r\n# Usage\r\n\r\nSet the `importHelpers` compiler option on the command line:\r\n\r\n```\r\ntsc --importHelpers file.ts\r\n```\r\n\r\nor in your tsconfig.json:\r\n\r\n```json\r\n{\r\n    \"compilerOptions\": {\r\n        \"importHelpers\": true\r\n    }\r\n}\r\n```\r\n\r\n#### For bower and JSPM users\r\n\r\nYou will need to add a `paths` mapping for `tslib`, e.g. For Bower users:\r\n\r\n```json\r\n{\r\n    \"compilerOptions\": {\r\n        \"module\": \"amd\",\r\n        \"importHelpers\": true,\r\n        \"baseUrl\": \"./\",\r\n        \"paths\": {\r\n            \"tslib\" : [\"bower_components/tslib/tslib.d.ts\"]\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nFor JSPM users:\r\n\r\n```json\r\n{\r\n    \"compilerOptions\": {\r\n        \"module\": \"system\",\r\n        \"importHelpers\": true,\r\n        \"baseUrl\": \"./\",\r\n        \"paths\": {\r\n            \"tslib\" : [\"jspm_packages/npm/tslib@1.9.3/tslib.d.ts\"]\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n\r\n# Contribute\r\n\r\nThere are many ways to [contribute](https://github.com/Microsoft/TypeScript/blob/master/CONTRIBUTING.md) to TypeScript.\r\n\r\n* [Submit bugs](https://github.com/Microsoft/TypeScript/issues) and help us verify fixes as they are checked in.\r\n* Review the [source code changes](https://github.com/Microsoft/TypeScript/pulls).\r\n* Engage with other TypeScript users and developers on [StackOverflow](http://stackoverflow.com/questions/tagged/typescript).\r\n* Join the [#typescript](http://twitter.com/#!/search/realtime/%23typescript) discussion on Twitter.\r\n* [Contribute bug fixes](https://github.com/Microsoft/TypeScript/blob/master/CONTRIBUTING.md).\r\n* Read the language specification ([docx](http://go.microsoft.com/fwlink/?LinkId=267121), [pdf](http://go.microsoft.com/fwlink/?LinkId=267238)).\r\n\r\n# Documentation\r\n\r\n* [Quick tutorial](http://www.typescriptlang.org/Tutorial)\r\n* [Programming handbook](http://www.typescriptlang.org/Handbook)\r\n* [Language specification](https://github.com/Microsoft/TypeScript/blob/master/doc/spec.md)\r\n* [Homepage](http://www.typescriptlang.org/)\r\n",
            "readmeFilename": "README.md",
            "dependencies": {},
            "devDependencies": {},
            "optionalDependencies": {},
            "_dependencies": {},
            "path": "/home/srikanth/Srikanth/alfresco/adf-components/node_modules/tslib",
            "error": "[Circular]",
            "extraneous": false,
            "_deduped": "tslib"
          }
        },
        "description": "This is the main branch for @angular/material 6.x.",
        "es2015": "fesm2015/mat-datetimepicker-core.js",
        "esm2015": "esm2015/mat-datetimepicker-core.js",
        "esm5": "esm5/mat-datetimepicker-core.js",
        "fesm2015": "fesm2015/mat-datetimepicker-core.js",
        "fesm5": "fesm5/mat-datetimepicker-core.js",
        "homepage": "https://github.com/kuhnroyal/mat-datetimepicker#readme",
        "license": "MIT",
        "main": "bundles/mat-datetimepicker-core.umd.js",
        "metadata": "mat-datetimepicker-core.metadata.json",
        "module": "fesm5/mat-datetimepicker-core.js",
        "name": "@mat-datetimepicker/core",
        "peerDependencies": {
          "@angular/core": "^6.0.7",
          "@angular/material": "^6.3.3",
          "@angular/cdk": "^6.3.3"
        },
        "repository": {
          "type": "git",
          "url": "git+https://github.com/kuhnroyal/mat-datetimepicker.git"
        },
        "sideEffects": false,
        "typings": "mat-datetimepicker-core.d.ts",
        "version": "2.0.1",
        "readme": "# Material Datetimepicker for @angular/material 6.x\n\nThis is the main branch for @angular/material 6.x.\n\nYou can find the Angular 5 version on the `1.x` branch.\n\n### Description\n\nThe datetimepicker is taken from [Promact/md2](https://github.com/Promact/md2) and modified to use @angular/material as base and added theming support.\n\nLike the @angular/material datepicker it contains a native-datetime-adapter as well as a moment-datetime-adapter.\n\n[![Latest Stable Version](https://img.shields.io/npm/v/@mat-datetimepicker/core.svg)](https://www.npmjs.com/package/@mat-datetimepicker/core)\n[![License](https://img.shields.io/npm/l/@mat-datetimepicker/core.svg)](https://www.npmjs.com/package/@mat-datetimepicker/core)\n[![NPM Downloads](https://img.shields.io/npm/dm/@mat-datetimepicker/core.svg)](https://www.npmjs.com/package/@mat-datetimepicker/core)\n\n### Installation\nInstall:\n```\nyarn install @mat-datetimepicker/core\n```\nAnd for the moment adapter:\n```\nyarn install @angular/material-moment-adapter\nyarn install @mat-datetimepicker/moment\n``` \n\n### Performing a local build\n```\nyarn install\nyarn build\n``` \n\n### Using the local build in some project\n```\ncd my-project\n``` \nAdd the dependencies to your `package.json`:\n```\n\"dependencies\": {\n    \"@mat-datetimepicker/core\": \"2.0.0\",\n    \"@mat-datetimepicker/moment\": \"2.0.0\",\n}\n```\nLink the local built modules:\n```\nyarn link \"@mat-datetimepicker/core\"\nyarn link \"@mat-datetimepicker/moment\"\n``` \n\n### Import  & configuration\nBasically the same way the @angular/material datepicker is configured and imported.\n\n```\nimports: [\n  ...\n  MatDatepickerModule,\n  // use this if you want to use native javascript dates and INTL API if available\n  // MatNativeDatetimeModule,\n  MatMomentDatetimeModule,\n  MatDatetimepickerModule\n]\n```\n\n@see [src/app/app.module.ts](src/app/app.module.ts)\n\n### Usage\n```\n<form [formGroup]=\"group\">\n  <mat-form-field>\n    <mat-placeholder>Start DateTime</mat-placeholder>\n    <mat-datetimepicker-toggle [for]=\"datetimePicker\" matSuffix></mat-datetimepicker-toggle>\n    <mat-datetimepicker #datetimePicker type=\"datetime\" openOnFocus=\"true\" timeInterval=\"5\"></mat-datetimepicker>\n    <input matInput formControlName=\"start\" [matDatetimepicker]=\"datetimePicker\" required autocomplete=\"false\">\n  </mat-form-field>\n</form>\n```\n### Theming\n```\n@import '~@mat-datetimepicker/core/datetimepicker/datetimepicker-theme.scss';\n\n// Using the $theme variable from the pre-built theme you can call the theming function\n@include mat-datetimepicker-theme($theme);\n```\n@see [src/styles.scss](src/styles.scss)\n\n",
        "readmeFilename": "README.md",
        "devDependencies": {},
        "optionalDependencies": {},
        "_dependencies": {
          "tslib": "^1.9.0"
        },
        "path": "/home/srikanth/Srikanth/alfresco/adf-components/node_modules/@mat-datetimepicker/core",
        "error": "[Circular]",
        "extraneous": false,
        "peerMissing": [
          {
            "requiredBy": "@mat-datetimepicker/moment@2.0.1",
            "requires": "@mat-datetimepicker/core@2.0.0"
          }
        ]
      },
      "peerMissing": true
    },
    "@mat-datetimepicker/moment": {
      "version": "2.0.1",
      "from": "@mat-datetimepicker/moment@2.0.1",
      "resolved": "https://registry.npmjs.org/@mat-datetimepicker/moment/-/moment-2.0.1.tgz"
    },
    "@ngrx/effects": {
      "version": "6.1.0",
      "from": "@ngrx/effects@6.1.0",
      "resolved": "https://registry.npmjs.org/@ngrx/effects/-/effects-6.1.0.tgz"
    },
    "@ngrx/router-store": {
      "version": "6.1.0",
      "from": "@ngrx/router-store@6.1.0",
      "resolved": "https://registry.npmjs.org/@ngrx/router-store/-/router-store-6.1.0.tgz"
    },
    "@ngrx/store": {
      "version": "6.1.0",
      "from": "@ngrx/store@6.1.0",
      "resolved": "https://registry.npmjs.org/@ngrx/store/-/store-6.1.0.tgz"
    },
    "@ngrx/store-devtools": {
      "version": "6.1.0",
      "from": "@ngrx/store-devtools@6.1.0",
      "resolved": "https://registry.npmjs.org/@ngrx/store-devtools/-/store-devtools-6.1.0.tgz"
    },
    "@ngx-translate/core": {
      "version": "10.0.2",
      "from": "@ngx-translate/core@10.0.2",
      "resolved": "https://registry.npmjs.org/@ngx-translate/core/-/core-10.0.2.tgz"
    },
    "alfresco-js-api": {
      "version": "2.6.0",
      "from": "alfresco-js-api@2.6.0",
      "resolved": "https://registry.npmjs.org/alfresco-js-api/-/alfresco-js-api-2.6.0.tgz"
    },
    "core-js": {
      "required": {
        "_args": [
          [
            "core-js@2.5.7",
            "/home/srikanth/Downloads/alfresco-content-app-master"
          ],
          [
            "core-js@2.5.7",
            "/home/srikanth/Srikanth/alfresco/adf-components"
          ]
        ],
        "_from": "core-js@2.5.7",
        "_id": "core-js@2.5.7",
        "_integrity": "sha512-RszJCAxg/PP6uzXVXL6BsxSXx/B05oJAQ2vkJRjyjrEcNVycaqOmNb5OTxZPE3xa5gwZduqza6L9JOCenh/Ecw==",
        "_location": "/core-js",
        "_phantomChildren": {},
        "_requested": {
          "type": "version",
          "registry": true,
          "raw": "core-js@2.5.7",
          "name": "core-js",
          "escapedName": "core-js",
          "rawSpec": "2.5.7",
          "saveSpec": "[Circular]",
          "fetchSpec": "2.5.7"
        },
        "_requiredBy": [
          "/",
          "/babel-runtime",
          "/karma",
          "/wait-on"
        ],
        "_resolved": "https://registry.npmjs.org/core-js/-/core-js-2.5.7.tgz",
        "_spec": "2.5.7",
        "_where": "/home/srikanth/Srikanth/alfresco/adf-components",
        "bugs": {
          "url": "https://github.com/zloirock/core-js/issues"
        },
        "description": "Standard library",
        "devDependencies": {
          "LiveScript": "1.3.x",
          "es-observable-tests": "0.2.x",
          "eslint": "4.19.x",
          "eslint-plugin-import": "2.12.x",
          "grunt": "^1.0.2",
          "grunt-cli": "^1.2.0",
          "grunt-contrib-clean": "^1.1.0",
          "grunt-contrib-copy": "^1.0.0",
          "grunt-contrib-uglify": "3.3.x",
          "grunt-contrib-watch": "^1.0.0",
          "grunt-karma": "^2.0.0",
          "grunt-livescript": "0.6.x",
          "karma": "^2.0.0",
          "karma-chrome-launcher": "^2.2.0",
          "karma-firefox-launcher": "^1.0.1",
          "karma-ie-launcher": "^1.0.0",
          "karma-phantomjs-launcher": "1.0.x",
          "karma-qunit": "^2.1.0",
          "phantomjs-prebuilt": "2.1.x",
          "promises-aplus-tests": "^2.1.2",
          "qunit": "2.6.x",
          "temp": "^0.8.3",
          "webpack": "^3.11.0"
        },
        "homepage": "https://github.com/zloirock/core-js#readme",
        "keywords": [
          "ES3",
          "ES5",
          "ES6",
          "ES7",
          "ES2015",
          "ES2016",
          "ES2017",
          "ECMAScript 3",
          "ECMAScript 5",
          "ECMAScript 6",
          "ECMAScript 7",
          "ECMAScript 2015",
          "ECMAScript 2016",
          "ECMAScript 2017",
          "Harmony",
          "Strawman",
          "Map",
          "Set",
          "WeakMap",
          "WeakSet",
          "Promise",
          "Symbol",
          "TypedArray",
          "setImmediate",
          "Dict",
          "polyfill",
          "shim"
        ],
        "license": "MIT",
        "main": "index.js",
        "name": "core-js",
        "repository": {
          "type": "git",
          "url": "git+https://github.com/zloirock/core-js.git"
        },
        "scripts": {
          "grunt": "grunt",
          "lint": "eslint ./",
          "observables-tests": "node tests/observables/adapter && node tests/observables/adapter-library",
          "promises-tests": "promises-aplus-tests tests/promises-aplus/adapter",
          "test": "npm run grunt clean copy && npm run lint && npm run grunt livescript client karma:default && npm run grunt library karma:library && npm run promises-tests && npm run observables-tests && lsc tests/commonjs"
        },
        "version": "2.5.7",
        "readme": "# core-js\n\n[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/zloirock/core-js?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge) [![version](https://img.shields.io/npm/v/core-js.svg)](https://www.npmjs.com/package/core-js) [![npm downloads](https://img.shields.io/npm/dm/core-js.svg)](http://npm-stat.com/charts.html?package=core-js&author=&from=2014-11-18) [![Build Status](https://travis-ci.org/zloirock/core-js.svg)](https://travis-ci.org/zloirock/core-js) [![devDependency status](https://david-dm.org/zloirock/core-js/dev-status.svg)](https://david-dm.org/zloirock/core-js?type=dev)\n#### As advertising: the author is looking for a good job :)\n\nModular standard library for JavaScript. Includes polyfills for [ECMAScript 5](#ecmascript-5), [ECMAScript 6](#ecmascript-6): [promises](#ecmascript-6-promise), [symbols](#ecmascript-6-symbol), [collections](#ecmascript-6-collections), iterators, [typed arrays](#ecmascript-6-typed-arrays), [ECMAScript 7+ proposals](#ecmascript-7-proposals), [setImmediate](#setimmediate), etc. Some additional features such as [dictionaries](#dict) or [extended partial application](#partial-application). You can require only needed features or use it without global namespace pollution.\n\n[*Example*](http://goo.gl/a2xexl):\n```js\nArray.from(new Set([1, 2, 3, 2, 1]));          // => [1, 2, 3]\n'*'.repeat(10);                                // => '**********'\nPromise.resolve(32).then(x => console.log(x)); // => 32\nsetImmediate(x => console.log(x), 42);         // => 42\n```\n\n[*Without global namespace pollution*](http://goo.gl/paOHb0):\n```js\nvar core = require('core-js/library'); // With a modular system, otherwise use global `core`\ncore.Array.from(new core.Set([1, 2, 3, 2, 1]));     // => [1, 2, 3]\ncore.String.repeat('*', 10);                        // => '**********'\ncore.Promise.resolve(32).then(x => console.log(x)); // => 32\ncore.setImmediate(x => console.log(x), 42);         // => 42\n```\n\n### Index\n- [Usage](#usage)\n  - [Basic](#basic)\n  - [CommonJS](#commonjs)\n  - [Custom build](#custom-build-from-the-command-line)\n- [Supported engines](#supported-engines)\n- [Features](#features)\n  - [ECMAScript 5](#ecmascript-5)\n  - [ECMAScript 6](#ecmascript-6)\n    - [ECMAScript 6: Object](#ecmascript-6-object)\n    - [ECMAScript 6: Function](#ecmascript-6-function)\n    - [ECMAScript 6: Array](#ecmascript-6-array)\n    - [ECMAScript 6: String](#ecmascript-6-string)\n    - [ECMAScript 6: RegExp](#ecmascript-6-regexp)\n    - [ECMAScript 6: Number](#ecmascript-6-number)\n    - [ECMAScript 6: Math](#ecmascript-6-math)\n    - [ECMAScript 6: Date](#ecmascript-6-date)\n    - [ECMAScript 6: Promise](#ecmascript-6-promise)\n    - [ECMAScript 6: Symbol](#ecmascript-6-symbol)\n    - [ECMAScript 6: Collections](#ecmascript-6-collections)\n    - [ECMAScript 6: Typed Arrays](#ecmascript-6-typed-arrays)\n    - [ECMAScript 6: Reflect](#ecmascript-6-reflect)\n  - [ECMAScript 7+ proposals](#ecmascript-7-proposals)\n    - [stage 4 proposals](#stage-4-proposals)\n    - [stage 3 proposals](#stage-3-proposals)\n    - [stage 2 proposals](#stage-2-proposals)\n    - [stage 1 proposals](#stage-1-proposals)\n    - [stage 0 proposals](#stage-0-proposals)\n    - [pre-stage 0 proposals](#pre-stage-0-proposals)\n  - [Web standards](#web-standards)\n    - [setTimeout / setInterval](#settimeout--setinterval)\n    - [setImmediate](#setimmediate)\n    - [iterable DOM collections](#iterable-dom-collections)\n  - [Non-standard](#non-standard)\n    - [Object](#object)\n    - [Dict](#dict)\n    - [partial application](#partial-application)\n    - [Number Iterator](#number-iterator)\n    - [escaping strings](#escaping-strings)\n    - [delay](#delay)\n    - [helpers for iterators](#helpers-for-iterators)\n- [Missing polyfills](#missing-polyfills)\n- [Changelog](./CHANGELOG.md)\n\n## Usage\n### Basic\n```\nnpm i core-js\nbower install core.js\n```\n\n```js\n// Default\nrequire('core-js');\n// Without global namespace pollution\nvar core = require('core-js/library');\n// Shim only\nrequire('core-js/shim');\n```\nIf you need complete build for browser, use builds from `core-js/client` path:  \n\n* [default](https://raw.githack.com/zloirock/core-js/v2.5.7/client/core.min.js): Includes all features, standard and non-standard.\n* [as a library](https://raw.githack.com/zloirock/core-js/v2.5.7/client/library.min.js): Like \"default\", but does not pollute the global namespace (see [2nd example at the top](#core-js)).\n* [shim only](https://raw.githack.com/zloirock/core-js/v2.5.7/client/shim.min.js): Only includes the standard methods.\n\nWarning: if you use `core-js` with the extension of native objects, require all needed `core-js` modules at the beginning of entry point of your application, otherwise, conflicts may occur.\n\n### CommonJS\nYou can require only needed modules.\n\n```js\nrequire('core-js/fn/set');\nrequire('core-js/fn/array/from');\nrequire('core-js/fn/array/find-index');\nArray.from(new Set([1, 2, 3, 2, 1])); // => [1, 2, 3]\n[1, 2, NaN, 3, 4].findIndex(isNaN);   // => 2\n\n// or, w/o global namespace pollution:\n\nvar Set       = require('core-js/library/fn/set');\nvar from      = require('core-js/library/fn/array/from');\nvar findIndex = require('core-js/library/fn/array/find-index');\nfrom(new Set([1, 2, 3, 2, 1]));      // => [1, 2, 3]\nfindIndex([1, 2, NaN, 3, 4], isNaN); // => 2\n```\nAvailable entry points for methods / constructors, as above examples, and namespaces: for example, `core-js/es6/array` (`core-js/library/es6/array`) contains all [ES6 `Array` features](#ecmascript-6-array), `core-js/es6` (`core-js/library/es6`) contains all ES6 features.\n\n##### Caveats when using CommonJS API:\n\n* `modules` path is internal API, does not inject all required dependencies and can be changed in minor or patch releases. Use it only for a custom build and / or if you know what are you doing.\n* `core-js` is extremely modular and uses a lot of very tiny modules, because of that for usage in browsers bundle up `core-js` instead of usage loader for each file, otherwise, you will have hundreds of requests.\n\n#### CommonJS and prototype methods without global namespace pollution\nIn the `library` version, we can't pollute prototypes of native constructors. Because of that, prototype methods transformed to static methods like in examples above. `babel` `runtime` transformer also can't transform them. But with transpilers we can use one more trick - [bind operator and virtual methods](https://github.com/zenparsing/es-function-bind). Special for that, available `/virtual/` entry points. Example:\n```js\nimport fill from 'core-js/library/fn/array/virtual/fill';\nimport findIndex from 'core-js/library/fn/array/virtual/find-index';\n\nArray(10)::fill(0).map((a, b) => b * b)::findIndex(it => it && !(it % 8)); // => 4\n\n// or\n\nimport {fill, findIndex} from 'core-js/library/fn/array/virtual';\n\nArray(10)::fill(0).map((a, b) => b * b)::findIndex(it => it && !(it % 8)); // => 4\n\n```\n\n### Custom build (from the command-line)\n```\nnpm i core-js && cd node_modules/core-js && npm i\nnpm run grunt build:core.dict,es6 -- --blacklist=es6.promise,es6.math --library=on --path=custom uglify\n```\nWhere `core.dict` and `es6` are modules (namespaces) names, which will be added to the build, `es6.promise` and `es6.math` are modules (namespaces) names, which will be excluded from the build, `--library=on` is flag for build without global namespace pollution and `custom` is target file name.\n\nAvailable namespaces: for example, `es6.array` contains [ES6 `Array` features](#ecmascript-6-array), `es6` contains all modules whose names start with `es6`.\n\n### Custom build (from external scripts)\n\n[`core-js-builder`](https://www.npmjs.com/package/core-js-builder) package exports a function that takes the same parameters as the `build` target from the previous section. This will conditionally include or exclude certain parts of `core-js`:\n\n```js\nrequire('core-js-builder')({\n  modules: ['es6', 'core.dict'], // modules / namespaces\n  blacklist: ['es6.reflect'],    // blacklist of modules / namespaces, by default - empty list\n  library: false,                // flag for build without global namespace pollution, by default - false\n  umd: true                      // use UMD wrapper for export `core` object, by default - true\n}).then(code => {\n  // ...\n}).catch(error => {\n  // ...\n});\n```\n## Supported engines\n**Tested in:**\n- Chrome 26+\n- Firefox 4+\n- Safari 5+\n- Opera 12+\n- Internet Explorer 6+ (sure, IE8- with ES3 limitations)\n- Edge\n- Android Browser 2.3+\n- iOS Safari 5.1+\n- PhantomJS 1.9 / 2.1\n- NodeJS 0.8+\n\n...and it doesn't mean `core-js` will not work in other engines, they just have not been tested.\n\n## Features:\n[*CommonJS entry points:*](#commonjs)\n```\ncore-js(/library)       <- all features\ncore-js(/library)/shim  <- only polyfills\n```\n### ECMAScript 5\nAll features moved to the [`es6` namespace](#ecmascript-6), here just a list of features:\n```js\nObject\n  .create(proto | null, descriptors?)    -> object\n  .getPrototypeOf(object)                -> proto | null\n  .defineProperty(target, key, desc)     -> target, cap for ie8-\n  .defineProperties(target, descriptors) -> target, cap for ie8-\n  .getOwnPropertyDescriptor(object, key) -> desc\n  .getOwnPropertyNames(object)           -> array\n  .keys(object)                          -> array\n  .seal(object)                          -> object, cap for ie8-\n  .freeze(object)                        -> object, cap for ie8-\n  .preventExtensions(object)             -> object, cap for ie8-\n  .isSealed(object)                      -> bool, cap for ie8-\n  .isFrozen(object)                      -> bool, cap for ie8-\n  .isExtensible(object)                  -> bool, cap for ie8-\nArray\n  .isArray(var)                                -> bool\n  #slice(start?, end?)                         -> array, fix for ie7-\n  #join(string = ',')                          -> string, fix for ie7-\n  #indexOf(var, from?)                         -> int\n  #lastIndexOf(var, from?)                     -> int\n  #every(fn(val, index, @), that)              -> bool\n  #some(fn(val, index, @), that)               -> bool\n  #forEach(fn(val, index, @), that)            -> void\n  #map(fn(val, index, @), that)                -> array\n  #filter(fn(val, index, @), that)             -> array\n  #reduce(fn(memo, val, index, @), memo?)      -> var\n  #reduceRight(fn(memo, val, index, @), memo?) -> var\n  #sort(fn?)                                   -> @, fixes for some engines\nFunction\n  #bind(object, ...args) -> boundFn(...args)\nString\n  #split(separator, limit) -> array\n  #trim()                  -> str\nRegExp\n  #toString() -> str\nNumber\n  #toFixed(digits)        -> string\n  #toPrecision(precision) -> string\nparseInt(str, radix) -> int\nparseFloat(str)      -> num\nDate\n  .now()         -> int\n  #toISOString() -> string\n  #toJSON()      -> string\n```\n[*CommonJS entry points:*](#commonjs)\n```\ncore-js(/library)/es5\n```\n\n### ECMAScript 6\n[*CommonJS entry points:*](#commonjs)\n```\ncore-js(/library)/es6\n```\n#### ECMAScript 6: Object\nModules [`es6.object.assign`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.object.assign.js), [`es6.object.is`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.object.is.js), [`es6.object.set-prototype-of`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.object.set-prototype-of.js) and [`es6.object.to-string`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.object.to-string.js).\n\nIn ES6 most `Object` static methods should work with primitives. Modules [`es6.object.freeze`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.object.freeze.js), [`es6.object.seal`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.object.seal.js), [`es6.object.prevent-extensions`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.object.prevent-extensions.js), [`es6.object.is-frozen`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.object.is-frozen.js), [`es6.object.is-sealed`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.object.is-sealed.js), [`es6.object.is-extensible`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.object.is-extensible.js), [`es6.object.get-own-property-descriptor`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.object.get-own-property-descriptor.js), [`es6.object.get-prototype-of`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.object.get-prototype-of.js), [`es6.object.keys`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.object.keys.js) and [`es6.object.get-own-property-names`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.object.get-own-property-names.js).\n\nJust ES5 features: [`es6.object.create`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.object.create.js), [`es6.object.define-property`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.object.define-property.js) and [`es6.object.define-properties`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.object.es6.object.define-properties.js).\n```js\nObject\n  .assign(target, ...src)                -> target\n  .is(a, b)                              -> bool\n  .setPrototypeOf(target, proto | null)  -> target (required __proto__ - IE11+)\n  .create(object | null, descriptors?)   -> object\n  .getPrototypeOf(var)                   -> object | null\n  .defineProperty(object, key, desc)     -> target\n  .defineProperties(object, descriptors) -> target\n  .getOwnPropertyDescriptor(var, key)    -> desc | undefined\n  .keys(var)                             -> array\n  .getOwnPropertyNames(var)              -> array\n  .freeze(var)                           -> var\n  .seal(var)                             -> var\n  .preventExtensions(var)                -> var\n  .isFrozen(var)                         -> bool\n  .isSealed(var)                         -> bool\n  .isExtensible(var)                     -> bool\n  #toString()                            -> string, ES6 fix: @@toStringTag support\n```\n[*CommonJS entry points:*](#commonjs)\n```\ncore-js(/library)/es6/object\ncore-js(/library)/fn/object/assign\ncore-js(/library)/fn/object/is\ncore-js(/library)/fn/object/set-prototype-of\ncore-js(/library)/fn/object/get-prototype-of\ncore-js(/library)/fn/object/create\ncore-js(/library)/fn/object/define-property\ncore-js(/library)/fn/object/define-properties\ncore-js(/library)/fn/object/get-own-property-descriptor\ncore-js(/library)/fn/object/keys\ncore-js(/library)/fn/object/get-own-property-names\ncore-js(/library)/fn/object/freeze\ncore-js(/library)/fn/object/seal\ncore-js(/library)/fn/object/prevent-extensions\ncore-js(/library)/fn/object/is-frozen\ncore-js(/library)/fn/object/is-sealed\ncore-js(/library)/fn/object/is-extensible\ncore-js/fn/object/to-string\n```\n[*Examples*](http://goo.gl/ywdwPz):\n```js\nvar foo = {q: 1, w: 2}\n  , bar = {e: 3, r: 4}\n  , baz = {t: 5, y: 6};\nObject.assign(foo, bar, baz); // => foo = {q: 1, w: 2, e: 3, r: 4, t: 5, y: 6}\n\nObject.is(NaN, NaN); // => true\nObject.is(0, -0);    // => false\nObject.is(42, 42);   // => true\nObject.is(42, '42'); // => false\n\nfunction Parent(){}\nfunction Child(){}\nObject.setPrototypeOf(Child.prototype, Parent.prototype);\nnew Child instanceof Child;  // => true\nnew Child instanceof Parent; // => true\n\nvar O = {};\nO[Symbol.toStringTag] = 'Foo';\n'' + O; // => '[object Foo]'\n\nObject.keys('qwe'); // => ['0', '1', '2']\nObject.getPrototypeOf('qwe') === String.prototype; // => true\n```\n#### ECMAScript 6: Function\nModules [`es6.function.name`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.function.name.js), [`es6.function.has-instance`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.function.has-instance.js). Just ES5: [`es6.function.bind`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.function.bind.js).\n```js\nFunction\n  #bind(object, ...args) -> boundFn(...args)\n  #name                  -> string (IE9+)\n  #@@hasInstance(var)    -> bool\n```\n[*CommonJS entry points:*](#commonjs)\n```\ncore-js/es6/function\ncore-js/fn/function/name\ncore-js/fn/function/has-instance\ncore-js/fn/function/bind\ncore-js/fn/function/virtual/bind\n```\n[*Example*](http://goo.gl/zqu3Wp):\n```js\n(function foo(){}).name // => 'foo'\n\nconsole.log.bind(console, 42)(43); // => 42 43\n```\n#### ECMAScript 6: Array\nModules [`es6.array.from`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.array.from.js), [`es6.array.of`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.array.of.js), [`es6.array.copy-within`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.array.copy-within.js), [`es6.array.fill`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.array.fill.js), [`es6.array.find`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.array.find.js), [`es6.array.find-index`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.array.find-index.js), [`es6.array.iterator`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.array.iterator.js). ES5 features with fixes: [`es6.array.is-array`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.array.is-array.js), [`es6.array.slice`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.array.slice.js), [`es6.array.join`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.array.join.js), [`es6.array.index-of`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.array.index-of.js), [`es6.array.last-index-of`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.array.last-index-of.js), [`es6.array.every`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.array.every.js), [`es6.array.some`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.array.some.js), [`es6.array.for-each`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.array.for-each.js), [`es6.array.map`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.array.map.js), [`es6.array.filter`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.array.filter.js), [`es6.array.reduce`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.array.reduce.js), [`es6.array.reduce-right`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.array.reduce-right.js), [`es6.array.sort`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.array.sort.js).\n```js\nArray\n  .from(iterable | array-like, mapFn(val, index)?, that) -> array\n  .of(...args)                                           -> array\n  .isArray(var)                                          -> bool\n  #copyWithin(target = 0, start = 0, end = @length)      -> @\n  #fill(val, start = 0, end = @length)                   -> @\n  #find(fn(val, index, @), that)                         -> val\n  #findIndex(fn(val, index, @), that)                    -> index | -1\n  #values()                                              -> iterator\n  #keys()                                                -> iterator\n  #entries()                                             -> iterator\n  #join(string = ',')                                    -> string, fix for ie7-\n  #slice(start?, end?)                                   -> array, fix for ie7-\n  #indexOf(var, from?)                                   -> index | -1\n  #lastIndexOf(var, from?)                               -> index | -1\n  #every(fn(val, index, @), that)                        -> bool\n  #some(fn(val, index, @), that)                         -> bool\n  #forEach(fn(val, index, @), that)                      -> void\n  #map(fn(val, index, @), that)                          -> array\n  #filter(fn(val, index, @), that)                       -> array\n  #reduce(fn(memo, val, index, @), memo?)                -> var\n  #reduceRight(fn(memo, val, index, @), memo?)           -> var\n  #sort(fn?)                                             -> @, invalid arguments fix\n  #@@iterator()                                          -> iterator (values)\n  #@@unscopables                                         -> object (cap)\nArguments\n  #@@iterator() -> iterator (values, available only in core-js methods)\n```\n[*CommonJS entry points:*](#commonjs)\n```\ncore-js(/library)/es6/array\ncore-js(/library)/fn/array/from\ncore-js(/library)/fn/array/of\ncore-js(/library)/fn/array/is-array\ncore-js(/library)/fn/array/iterator\ncore-js(/library)/fn/array/copy-within\ncore-js(/library)/fn/array/fill\ncore-js(/library)/fn/array/find\ncore-js(/library)/fn/array/find-index\ncore-js(/library)/fn/array/values\ncore-js(/library)/fn/array/keys\ncore-js(/library)/fn/array/entries\ncore-js(/library)/fn/array/slice\ncore-js(/library)/fn/array/join\ncore-js(/library)/fn/array/index-of\ncore-js(/library)/fn/array/last-index-of\ncore-js(/library)/fn/array/every\ncore-js(/library)/fn/array/some\ncore-js(/library)/fn/array/for-each\ncore-js(/library)/fn/array/map\ncore-js(/library)/fn/array/filter\ncore-js(/library)/fn/array/reduce\ncore-js(/library)/fn/array/reduce-right\ncore-js(/library)/fn/array/sort\ncore-js(/library)/fn/array/virtual/iterator\ncore-js(/library)/fn/array/virtual/copy-within\ncore-js(/library)/fn/array/virtual/fill\ncore-js(/library)/fn/array/virtual/find\ncore-js(/library)/fn/array/virtual/find-index\ncore-js(/library)/fn/array/virtual/values\ncore-js(/library)/fn/array/virtual/keys\ncore-js(/library)/fn/array/virtual/entries\ncore-js(/library)/fn/array/virtual/slice\ncore-js(/library)/fn/array/virtual/join\ncore-js(/library)/fn/array/virtual/index-of\ncore-js(/library)/fn/array/virtual/last-index-of\ncore-js(/library)/fn/array/virtual/every\ncore-js(/library)/fn/array/virtual/some\ncore-js(/library)/fn/array/virtual/for-each\ncore-js(/library)/fn/array/virtual/map\ncore-js(/library)/fn/array/virtual/filter\ncore-js(/library)/fn/array/virtual/reduce\ncore-js(/library)/fn/array/virtual/reduce-right\ncore-js(/library)/fn/array/virtual/sort\n```\n[*Examples*](http://goo.gl/oaUFUf):\n```js\nArray.from(new Set([1, 2, 3, 2, 1]));      // => [1, 2, 3]\nArray.from({0: 1, 1: 2, 2: 3, length: 3}); // => [1, 2, 3]\nArray.from('123', Number);                 // => [1, 2, 3]\nArray.from('123', function(it){\n  return it * it;\n});                                        // => [1, 4, 9]\n\nArray.of(1);       // => [1]\nArray.of(1, 2, 3); // => [1, 2, 3]\n\nvar array = ['a', 'b', 'c'];\n\nfor(var val of array)console.log(val);          // => 'a', 'b', 'c'\nfor(var val of array.values())console.log(val); // => 'a', 'b', 'c'\nfor(var key of array.keys())console.log(key);   // => 0, 1, 2\nfor(var [key, val] of array.entries()){\n  console.log(key);                             // => 0, 1, 2\n  console.log(val);                             // => 'a', 'b', 'c'\n}\n\nfunction isOdd(val){\n  return val % 2;\n}\n[4, 8, 15, 16, 23, 42].find(isOdd);      // => 15\n[4, 8, 15, 16, 23, 42].findIndex(isOdd); // => 2\n[4, 8, 15, 16, 23, 42].find(isNaN);      // => undefined\n[4, 8, 15, 16, 23, 42].findIndex(isNaN); // => -1\n\nArray(5).fill(42); // => [42, 42, 42, 42, 42]\n\n[1, 2, 3, 4, 5].copyWithin(0, 3); // => [4, 5, 3, 4, 5]\n```\n#### ECMAScript 6: String\nModules [`es6.string.from-code-point`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.string.from-code-point.js), [`es6.string.raw`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.string.raw.js), [`es6.string.iterator`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.string.iterator.js), [`es6.string.code-point-at`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.string.code-point-at.js), [`es6.string.ends-with`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.string.ends-with.js), [`es6.string.includes`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.string.includes.js), [`es6.string.repeat`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.string.repeat.js), [`es6.string.starts-with`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.string.starts-with.js) and [`es6.string.trim`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.string.trim.js).\n\nAnnex B HTML methods. Ugly, but it's also the part of the spec. Modules [`es6.string.anchor`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.string.anchor.js), [`es6.string.big`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.string.big.js), [`es6.string.blink`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.string.blink.js), [`es6.string.bold`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.string.bold.js), [`es6.string.fixed`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.string.fixed.js), [`es6.string.fontcolor`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.string.fontcolor.js), [`es6.string.fontsize`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.string.fontsize.js), [`es6.string.italics`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.string.italics.js), [`es6.string.link`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.string.link.js), [`es6.string.small`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.string.small.js), [`es6.string.strike`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.string.strike.js), [`es6.string.sub`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.string.sub.js) and [`es6.string.sup`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.string.sup.js).\n```js\nString\n  .fromCodePoint(...codePoints) -> str\n  .raw({raw}, ...substitutions) -> str\n  #includes(str, from?) -> bool\n  #startsWith(str, from?) -> bool\n  #endsWith(str, from?) -> bool\n  #repeat(num) -> str\n  #codePointAt(pos) -> uint\n  #trim() -> str, ES6 fix\n  #anchor(name)     -> str\n  #big()            -> str\n  #blink()          -> str\n  #bold()           -> str\n  #fixed()          -> str\n  #fontcolor(color) -> str\n  #fontsize(size)   -> str\n  #italics()        -> str\n  #link(url)        -> str\n  #small()          -> str\n  #strike()         -> str\n  #sub()            -> str\n  #sup()            -> str\n  #@@iterator() -> iterator (code points)\n```\n[*CommonJS entry points:*](#commonjs)\n```\ncore-js(/library)/es6/string\ncore-js(/library)/fn/string/from-code-point\ncore-js(/library)/fn/string/raw\ncore-js(/library)/fn/string/includes\ncore-js(/library)/fn/string/starts-with\ncore-js(/library)/fn/string/ends-with\ncore-js(/library)/fn/string/repeat\ncore-js(/library)/fn/string/code-point-at\ncore-js(/library)/fn/string/trim\ncore-js(/library)/fn/string/anchor\ncore-js(/library)/fn/string/big\ncore-js(/library)/fn/string/blink\ncore-js(/library)/fn/string/bold\ncore-js(/library)/fn/string/fixed\ncore-js(/library)/fn/string/fontcolor\ncore-js(/library)/fn/string/fontsize\ncore-js(/library)/fn/string/italics\ncore-js(/library)/fn/string/link\ncore-js(/library)/fn/string/small\ncore-js(/library)/fn/string/strike\ncore-js(/library)/fn/string/sub\ncore-js(/library)/fn/string/sup\ncore-js(/library)/fn/string/iterator\ncore-js(/library)/fn/string/virtual/includes\ncore-js(/library)/fn/string/virtual/starts-with\ncore-js(/library)/fn/string/virtual/ends-with\ncore-js(/library)/fn/string/virtual/repeat\ncore-js(/library)/fn/string/virtual/code-point-at\ncore-js(/library)/fn/string/virtual/trim\ncore-js(/library)/fn/string/virtual/anchor\ncore-js(/library)/fn/string/virtual/big\ncore-js(/library)/fn/string/virtual/blink\ncore-js(/library)/fn/string/virtual/bold\ncore-js(/library)/fn/string/virtual/fixed\ncore-js(/library)/fn/string/virtual/fontcolor\ncore-js(/library)/fn/string/virtual/fontsize\ncore-js(/library)/fn/string/virtual/italics\ncore-js(/library)/fn/string/virtual/link\ncore-js(/library)/fn/string/virtual/small\ncore-js(/library)/fn/string/virtual/strike\ncore-js(/library)/fn/string/virtual/sub\ncore-js(/library)/fn/string/virtual/sup\ncore-js(/library)/fn/string/virtual/iterator\n```\n[*Examples*](http://goo.gl/3UaQ93):\n```js\nfor(var val of 'a𠮷b'){\n  console.log(val); // => 'a', '𠮷', 'b'\n}\n\n'foobarbaz'.includes('bar');      // => true\n'foobarbaz'.includes('bar', 4);   // => false\n'foobarbaz'.startsWith('foo');    // => true\n'foobarbaz'.startsWith('bar', 3); // => true\n'foobarbaz'.endsWith('baz');      // => true\n'foobarbaz'.endsWith('bar', 6);   // => true\n\n'string'.repeat(3); // => 'stringstringstring'\n\n'𠮷'.codePointAt(0); // => 134071\nString.fromCodePoint(97, 134071, 98); // => 'a𠮷b'\n\nvar name = 'Bob';\nString.raw`Hi\\n${name}!`;           // => 'Hi\\\\nBob!' (ES6 template string syntax)\nString.raw({raw: 'test'}, 0, 1, 2); // => 't0e1s2t'\n\n'foo'.bold();                     // => '<b>foo</b>'\n'bar'.anchor('a\"b');              // => '<a name=\"a&quot;b\">bar</a>'\n'baz'.link('http://example.com'); // => '<a href=\"http://example.com\">baz</a>'\n```\n#### ECMAScript 6: RegExp\nModules [`es6.regexp.constructor`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.regexp.constructor.js) and [`es6.regexp.flags`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.regexp.flags.js).\n\nSupport well-known [symbols](#ecmascript-6-symbol) `@@match`, `@@replace`, `@@search` and `@@split`, modules [`es6.regexp.match`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.regexp.match.js), [`es6.regexp.replace`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.regexp.replace.js), [`es6.regexp.search`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.regexp.search.js) and [`es6.regexp.split`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.regexp.split.js).\n```\n[new] RegExp(pattern, flags?) -> regexp, ES6 fix: can alter flags (IE9+)\n  #flags -> str (IE9+)\n  #toString() -> str, ES6 fixes\n  #@@match(str)             -> array | null\n  #@@replace(str, replacer) -> string\n  #@@search(str)            -> index\n  #@@split(str, limit)      -> array\nString\n  #match(tpl)             -> var, ES6 fix for support @@match\n  #replace(tpl, replacer) -> var, ES6 fix for support @@replace\n  #search(tpl)            -> var, ES6 fix for support @@search\n  #split(tpl, limit)      -> var, ES6 fix for support @@split, some fixes for old engines\n```\n[*CommonJS entry points:*](#commonjs)\n```\ncore-js/es6/regexp\ncore-js/fn/regexp/constructor\ncore-js(/library)/fn/regexp/flags\ncore-js/fn/regexp/to-string\ncore-js/fn/regexp/match\ncore-js/fn/regexp/replace\ncore-js/fn/regexp/search\ncore-js/fn/regexp/split\n```\n[*Examples*](http://goo.gl/PiJxBD):\n```js\nRegExp(/./g, 'm'); // => /./m\n\n/foo/.flags;    // => ''\n/foo/gim.flags; // => 'gim'\n\n'foo'.match({[Symbol.match]: _ => 1});     // => 1\n'foo'.replace({[Symbol.replace]: _ => 2}); // => 2\n'foo'.search({[Symbol.search]: _ => 3});   // => 3\n'foo'.split({[Symbol.split]: _ => 4});     // => 4\n\nRegExp.prototype.toString.call({source: 'foo', flags: 'bar'}); // => '/foo/bar'\n```\n#### ECMAScript 6: Number\nModule [`es6.number.constructor`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.number.constructor.js). `Number` constructor support binary and octal literals, [*example*](http://goo.gl/jRd6b3):\n```js\nNumber('0b1010101'); // => 85\nNumber('0o7654321'); // => 2054353\n```\nModules [`es6.number.epsilon`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.number.epsilon.js), [`es6.number.is-finite`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.number.is-finite.js), [`es6.number.is-integer`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.number.is-integer.js), [`es6.number.is-nan`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.number.is-nan.js), [`es6.number.is-safe-integer`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.number.is-safe-integer.js), [`es6.number.max-safe-integer`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.number.max-safe-integer.js), [`es6.number.min-safe-integer`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.number.min-safe-integer.js), [`es6.number.parse-float`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.number.parse-float.js), [`es6.number.parse-int`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.number.parse-int.js), [`es6.number.to-fixed`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.number.to-fixed.js), [`es6.number.to-precision`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.number.to-precision.js), [`es6.parse-int`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.parse-int.js), [`es6.parse-float`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.parse-float.js).\n```js\n[new] Number(var)         -> number | number object\n  .isFinite(num)          -> bool\n  .isNaN(num)             -> bool\n  .isInteger(num)         -> bool\n  .isSafeInteger(num)     -> bool\n  .parseFloat(str)        -> num\n  .parseInt(str)          -> int\n  .EPSILON                -> num\n  .MAX_SAFE_INTEGER       -> int\n  .MIN_SAFE_INTEGER       -> int\n  #toFixed(digits)        -> string, fixes\n  #toPrecision(precision) -> string, fixes\nparseFloat(str)           -> num, fixes\nparseInt(str)             -> int, fixes\n```\n[*CommonJS entry points:*](#commonjs)\n```\ncore-js(/library)/es6/number\ncore-js/es6/number/constructor\ncore-js(/library)/fn/number/is-finite\ncore-js(/library)/fn/number/is-nan\ncore-js(/library)/fn/number/is-integer\ncore-js(/library)/fn/number/is-safe-integer\ncore-js(/library)/fn/number/parse-float\ncore-js(/library)/fn/number/parse-int\ncore-js(/library)/fn/number/epsilon\ncore-js(/library)/fn/number/max-safe-integer\ncore-js(/library)/fn/number/min-safe-integer\ncore-js(/library)/fn/number/to-fixed\ncore-js(/library)/fn/number/to-precision\ncore-js(/library)/fn/parse-float\ncore-js(/library)/fn/parse-int\n```\n#### ECMAScript 6: Math\nModules [`es6.math.acosh`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.math.acosh.js), [`es6.math.asinh`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.math.asinh.js), [`es6.math.atanh`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.math.atanh.js), [`es6.math.cbrt`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.math.cbrt.js), [`es6.math.clz32`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.math.clz32.js), [`es6.math.cosh`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.math.cosh.js), [`es6.math.expm1`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.math.expm1.js), [`es6.math.fround`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.math.fround.js), [`es6.math.hypot`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.math.hypot.js), [`es6.math.imul`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.math.imul.js), [`es6.math.log10`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.math.log10.js), [`es6.math.log1p`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.math.log1p.js), [`es6.math.log2`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.math.log2.js), [`es6.math.sign`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.math.sign.js), [`es6.math.sinh`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.math.sinh.js), [`es6.math.tanh`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.math.tanh.js), [`es6.math.trunc`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.math.trunc.js).\n```js\nMath\n  .acosh(num)     -> num\n  .asinh(num)     -> num\n  .atanh(num)     -> num\n  .cbrt(num)      -> num\n  .clz32(num)     -> uint\n  .cosh(num)      -> num\n  .expm1(num)     -> num\n  .fround(num)    -> num\n  .hypot(...args) -> num\n  .imul(num, num) -> int\n  .log1p(num)     -> num\n  .log10(num)     -> num\n  .log2(num)      -> num\n  .sign(num)      -> 1 | -1 | 0 | -0 | NaN\n  .sinh(num)      -> num\n  .tanh(num)      -> num\n  .trunc(num)     -> num\n```\n[*CommonJS entry points:*](#commonjs)\n```\ncore-js(/library)/es6/math\ncore-js(/library)/fn/math/acosh\ncore-js(/library)/fn/math/asinh\ncore-js(/library)/fn/math/atanh\ncore-js(/library)/fn/math/cbrt\ncore-js(/library)/fn/math/clz32\ncore-js(/library)/fn/math/cosh\ncore-js(/library)/fn/math/expm1\ncore-js(/library)/fn/math/fround\ncore-js(/library)/fn/math/hypot\ncore-js(/library)/fn/math/imul\ncore-js(/library)/fn/math/log1p\ncore-js(/library)/fn/math/log10\ncore-js(/library)/fn/math/log2\ncore-js(/library)/fn/math/sign\ncore-js(/library)/fn/math/sinh\ncore-js(/library)/fn/math/tanh\ncore-js(/library)/fn/math/trunc\n```\n#### ECMAScript 6: Date\nModules [`es6.date.to-string`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.date.to-string.js), ES5 features with fixes: [`es6.date.now`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.date.now.js), [`es6.date.to-iso-string`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.date.to-iso-string.js), [`es6.date.to-json`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.date.to-json.js) and [`es6.date.to-primitive`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.date.to-primitive.js).\n```js\nDate\n  .now()               -> int\n  #toISOString()       -> string\n  #toJSON()            -> string\n  #toString()          -> string\n  #@@toPrimitive(hint) -> primitive\n```\n[*CommonJS entry points:*](#commonjs)\n```\ncore-js/es6/date\ncore-js/fn/date/to-string\ncore-js(/library)/fn/date/now\ncore-js(/library)/fn/date/to-iso-string\ncore-js(/library)/fn/date/to-json\ncore-js(/library)/fn/date/to-primitive\n```\n[*Example*](http://goo.gl/haeHLR):\n```js\nnew Date(NaN).toString(); // => 'Invalid Date'\n```\n\n#### ECMAScript 6: Promise\nModule [`es6.promise`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.promise.js).\n```js\nnew Promise(executor(resolve(var), reject(var))) -> promise\n  #then(resolved(var), rejected(var))            -> promise\n  #catch(rejected(var))                          -> promise\n  .resolve(promise | var)                        -> promise\n  .reject(var)                                   -> promise\n  .all(iterable)                                 -> promise\n  .race(iterable)                                -> promise\n```\n[*CommonJS entry points:*](#commonjs)\n```\ncore-js(/library)/es6/promise\ncore-js(/library)/fn/promise\n```\nBasic [*example*](http://goo.gl/vGrtUC):\n```js\nfunction sleepRandom(time){\n  return new Promise(function(resolve, reject){\n    setTimeout(resolve, time * 1e3, 0 | Math.random() * 1e3);\n  });\n}\n\nconsole.log('Run');                    // => Run\nsleepRandom(5).then(function(result){\n  console.log(result);                 // => 869, after 5 sec.\n  return sleepRandom(10);\n}).then(function(result){\n  console.log(result);                 // => 202, after 10 sec.\n}).then(function(){\n  console.log('immediately after');    // => immediately after\n  throw Error('Irror!');\n}).then(function(){\n  console.log('will not be displayed');\n}).catch(x => console.log(x));         // => => Error: Irror!\n```\n`Promise.resolve` and `Promise.reject` [*example*](http://goo.gl/vr8TN3):\n```js\nPromise.resolve(42).then(x => console.log(x)); // => 42\nPromise.reject(42).catch(x => console.log(x)); // => 42\n\nPromise.resolve($.getJSON('/data.json')); // => ES6 promise\n```\n`Promise.all` [*example*](http://goo.gl/RdoDBZ):\n```js\nPromise.all([\n  'foo',\n  sleepRandom(5),\n  sleepRandom(15),\n  sleepRandom(10)             // after 15 sec:\n]).then(x => console.log(x)); // => ['foo', 956, 85, 382]\n```\n`Promise.race` [*example*](http://goo.gl/L8ovkJ):\n```js\nfunction timeLimit(promise, time){\n  return Promise.race([promise, new Promise(function(resolve, reject){\n    setTimeout(reject, time * 1e3, Error('Await > ' + time + ' sec'));\n  })]);\n}\n\ntimeLimit(sleepRandom(5), 10).then(x => console.log(x));   // => 853, after 5 sec.\ntimeLimit(sleepRandom(15), 10).catch(x => console.log(x)); // Error: Await > 10 sec\n```\nECMAScript 7 [async functions](https://tc39.github.io/ecmascript-asyncawait) [example](http://goo.gl/wnQS4j):\n```js\nvar delay = time => new Promise(resolve => setTimeout(resolve, time))\n\nasync function sleepRandom(time){\n  await delay(time * 1e3);\n  return 0 | Math.random() * 1e3;\n};\nasync function sleepError(time, msg){\n  await delay(time * 1e3);\n  throw Error(msg);\n};\n\n(async () => {\n  try {\n    console.log('Run');                // => Run\n    console.log(await sleepRandom(5)); // => 936, after 5 sec.\n    var [a, b, c] = await Promise.all([\n      sleepRandom(5),\n      sleepRandom(15),\n      sleepRandom(10)\n    ]);\n    console.log(a, b, c);              // => 210 445 71, after 15 sec.\n    await sleepError(5, 'Irror!');\n    console.log('Will not be displayed');\n  } catch(e){\n    console.log(e);                    // => Error: 'Irror!', after 5 sec.\n  }\n})();\n```\n\n##### Unhandled rejection tracking\n\nIn Node.js, like in native implementation, available events [`unhandledRejection`](https://nodejs.org/api/process.html#process_event_unhandledrejection) and [`rejectionHandled`](https://nodejs.org/api/process.html#process_event_rejectionhandled):\n```js\nprocess.on('unhandledRejection', (reason, promise) => console.log('unhandled', reason, promise));\nprocess.on('rejectionHandled', (promise) => console.log('handled', promise));\n\nvar p = Promise.reject(42);\n// unhandled 42 [object Promise]\n\nsetTimeout(() => p.catch(_ => _), 1e3);\n// handled [object Promise]\n```\nIn a browser on rejection, by default, you will see notify in the console, or you can add a custom handler and a handler on handling unhandled, [*example*](http://goo.gl/Wozskl):\n```js\nwindow.onunhandledrejection = e => console.log('unhandled', e.reason, e.promise);\nwindow.onrejectionhandled = e => console.log('handled', e.reason, e.promise);\n\nvar p = Promise.reject(42);\n// unhandled 42 [object Promise]\n\nsetTimeout(() => p.catch(_ => _), 1e3);\n// handled 42 [object Promise]\n```\n\n#### ECMAScript 6: Symbol\nModule [`es6.symbol`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.symbol.js).\n```js\nSymbol(description?)  -> symbol\n  .hasInstance        -> @@hasInstance\n  .isConcatSpreadable -> @@isConcatSpreadable\n  .iterator           -> @@iterator\n  .match              -> @@match\n  .replace            -> @@replace\n  .search             -> @@search\n  .species            -> @@species\n  .split              -> @@split\n  .toPrimitive        -> @@toPrimitive\n  .toStringTag        -> @@toStringTag\n  .unscopables        -> @@unscopables\n  .for(key)           -> symbol\n  .keyFor(symbol)     -> key\n  .useSimple()        -> void\n  .useSetter()        -> void\nObject\n  .getOwnPropertySymbols(object) -> array\n```\nAlso wrapped some methods for correct work with `Symbol` polyfill.\n```js\nObject\n  .create(proto | null, descriptors?)    -> object\n  .defineProperty(target, key, desc)     -> target\n  .defineProperties(target, descriptors) -> target\n  .getOwnPropertyDescriptor(var, key)    -> desc | undefined\n  .getOwnPropertyNames(var)              -> array\n  #propertyIsEnumerable(key)             -> bool\nJSON\n  .stringify(target, replacer?, space?) -> string | undefined\n```\n[*CommonJS entry points:*](#commonjs)\n```\ncore-js(/library)/es6/symbol\ncore-js(/library)/fn/symbol\ncore-js(/library)/fn/symbol/has-instance\ncore-js(/library)/fn/symbol/is-concat-spreadable\ncore-js(/library)/fn/symbol/iterator\ncore-js(/library)/fn/symbol/match\ncore-js(/library)/fn/symbol/replace\ncore-js(/library)/fn/symbol/search\ncore-js(/library)/fn/symbol/species\ncore-js(/library)/fn/symbol/split\ncore-js(/library)/fn/symbol/to-primitive\ncore-js(/library)/fn/symbol/to-string-tag\ncore-js(/library)/fn/symbol/unscopables\ncore-js(/library)/fn/symbol/for\ncore-js(/library)/fn/symbol/key-for\n```\n[*Basic example*](http://goo.gl/BbvWFc):\n```js\nvar Person = (function(){\n  var NAME = Symbol('name');\n  function Person(name){\n    this[NAME] = name;\n  }\n  Person.prototype.getName = function(){\n    return this[NAME];\n  };\n  return Person;\n})();\n\nvar person = new Person('Vasya');\nconsole.log(person.getName());          // => 'Vasya'\nconsole.log(person['name']);            // => undefined\nconsole.log(person[Symbol('name')]);    // => undefined, symbols are uniq\nfor(var key in person)console.log(key); // => only 'getName', symbols are not enumerable\n```\n`Symbol.for` & `Symbol.keyFor` [*example*](http://goo.gl/0pdJjX):\n```js\nvar symbol = Symbol.for('key');\nsymbol === Symbol.for('key'); // true\nSymbol.keyFor(symbol);        // 'key'\n```\n[*Example*](http://goo.gl/mKVOQJ) with methods for getting own object keys:\n```js\nvar O = {a: 1};\nObject.defineProperty(O, 'b', {value: 2});\nO[Symbol('c')] = 3;\nObject.keys(O);                  // => ['a']\nObject.getOwnPropertyNames(O);   // => ['a', 'b']\nObject.getOwnPropertySymbols(O); // => [Symbol(c)]\nReflect.ownKeys(O);              // => ['a', 'b', Symbol(c)]\n```\n##### Caveats when using `Symbol` polyfill:\n\n* We can't add new primitive type, `Symbol` returns object.\n* `Symbol.for` and `Symbol.keyFor` can't be shimmed cross-realm.\n* By default, to hide the keys, `Symbol` polyfill defines setter in `Object.prototype`. For this reason, uncontrolled creation of symbols can cause memory leak and the `in` operator is not working correctly with `Symbol` polyfill: `Symbol() in {} // => true`.\n\nYou can disable defining setters in `Object.prototype`. [Example](http://goo.gl/N5UD7J):\n```js\nSymbol.useSimple();\nvar s1 = Symbol('s1')\n  , o1 = {};\no1[s1] = true;\nfor(var key in o1)console.log(key); // => 'Symbol(s1)_t.qamkg9f3q', w/o native Symbol\n\nSymbol.useSetter();\nvar s2 = Symbol('s2')\n  , o2 = {};\no2[s2] = true;\nfor(var key in o2)console.log(key); // nothing\n```\n* Currently, `core-js` not adds setters to `Object.prototype` for well-known symbols for correct work something like `Symbol.iterator in foo`. It can cause problems with their enumerability.\n* Some problems possible with environment exotic objects (for example, IE `localStorage`).\n\n#### ECMAScript 6: Collections\n`core-js` uses native collections in most case, just fixes methods / constructor, if it's required, and in old environment uses fast polyfill (O(1) lookup).\n#### Map\nModule [`es6.map`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.map.js).\n```js\nnew Map(iterable (entries) ?)     -> map\n  #clear()                        -> void\n  #delete(key)                    -> bool\n  #forEach(fn(val, key, @), that) -> void\n  #get(key)                       -> val\n  #has(key)                       -> bool\n  #set(key, val)                  -> @\n  #size                           -> uint\n  #values()                       -> iterator\n  #keys()                         -> iterator\n  #entries()                      -> iterator\n  #@@iterator()                   -> iterator (entries)\n```\n[*CommonJS entry points:*](#commonjs)\n```\ncore-js(/library)/es6/map\ncore-js(/library)/fn/map\n```\n[*Examples*](http://goo.gl/GWR7NI):\n```js\nvar a = [1];\n\nvar map = new Map([['a', 1], [42, 2]]);\nmap.set(a, 3).set(true, 4);\n\nconsole.log(map.size);        // => 4\nconsole.log(map.has(a));      // => true\nconsole.log(map.has([1]));    // => false\nconsole.log(map.get(a));      // => 3\nmap.forEach(function(val, key){\n  console.log(val);           // => 1, 2, 3, 4\n  console.log(key);           // => 'a', 42, [1], true\n});\nmap.delete(a);\nconsole.log(map.size);        // => 3\nconsole.log(map.get(a));      // => undefined\nconsole.log(Array.from(map)); // => [['a', 1], [42, 2], [true, 4]]\n\nvar map = new Map([['a', 1], ['b', 2], ['c', 3]]);\n\nfor(var [key, val] of map){\n  console.log(key);                           // => 'a', 'b', 'c'\n  console.log(val);                           // => 1, 2, 3\n}\nfor(var val of map.values())console.log(val); // => 1, 2, 3\nfor(var key of map.keys())console.log(key);   // => 'a', 'b', 'c'\nfor(var [key, val] of map.entries()){\n  console.log(key);                           // => 'a', 'b', 'c'\n  console.log(val);                           // => 1, 2, 3\n}\n```\n#### Set\nModule [`es6.set`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.set.js).\n```js\nnew Set(iterable?)              -> set\n  #add(key)                     -> @\n  #clear()                      -> void\n  #delete(key)                  -> bool\n  #forEach(fn(el, el, @), that) -> void\n  #has(key)                     -> bool\n  #size                         -> uint\n  #values()                     -> iterator\n  #keys()                       -> iterator\n  #entries()                    -> iterator\n  #@@iterator()                 -> iterator (values)\n```\n[*CommonJS entry points:*](#commonjs)\n```\ncore-js(/library)/es6/set\ncore-js(/library)/fn/set\n```\n[*Examples*](http://goo.gl/bmhLwg):\n```js\nvar set = new Set(['a', 'b', 'a', 'c']);\nset.add('d').add('b').add('e');\nconsole.log(set.size);        // => 5\nconsole.log(set.has('b'));    // => true\nset.forEach(function(it){\n  console.log(it);            // => 'a', 'b', 'c', 'd', 'e'\n});\nset.delete('b');\nconsole.log(set.size);        // => 4\nconsole.log(set.has('b'));    // => false\nconsole.log(Array.from(set)); // => ['a', 'c', 'd', 'e']\n\nvar set = new Set([1, 2, 3, 2, 1]);\n\nfor(var val of set)console.log(val);          // => 1, 2, 3\nfor(var val of set.values())console.log(val); // => 1, 2, 3\nfor(var key of set.keys())console.log(key);   // => 1, 2, 3\nfor(var [key, val] of set.entries()){\n  console.log(key);                           // => 1, 2, 3\n  console.log(val);                           // => 1, 2, 3\n}\n```\n#### WeakMap\nModule [`es6.weak-map`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.weak-map.js).\n```js\nnew WeakMap(iterable (entries) ?) -> weakmap\n  #delete(key)                    -> bool\n  #get(key)                       -> val\n  #has(key)                       -> bool\n  #set(key, val)                  -> @\n```\n[*CommonJS entry points:*](#commonjs)\n```\ncore-js(/library)/es6/weak-map\ncore-js(/library)/fn/weak-map\n```\n[*Examples*](http://goo.gl/SILXyw):\n```js\nvar a = [1]\n  , b = [2]\n  , c = [3];\n\nvar wmap = new WeakMap([[a, 1], [b, 2]]);\nwmap.set(c, 3).set(b, 4);\nconsole.log(wmap.has(a));   // => true\nconsole.log(wmap.has([1])); // => false\nconsole.log(wmap.get(a));   // => 1\nwmap.delete(a);\nconsole.log(wmap.get(a));   // => undefined\n\n// Private properties store:\nvar Person = (function(){\n  var names = new WeakMap;\n  function Person(name){\n    names.set(this, name);\n  }\n  Person.prototype.getName = function(){\n    return names.get(this);\n  };\n  return Person;\n})();\n\nvar person = new Person('Vasya');\nconsole.log(person.getName());          // => 'Vasya'\nfor(var key in person)console.log(key); // => only 'getName'\n```\n#### WeakSet\nModule [`es6.weak-set`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.weak-set.js).\n```js\nnew WeakSet(iterable?) -> weakset\n  #add(key)            -> @\n  #delete(key)         -> bool\n  #has(key)            -> bool\n```\n[*CommonJS entry points:*](#commonjs)\n```\ncore-js(/library)/es6/weak-set\ncore-js(/library)/fn/weak-set\n```\n[*Examples*](http://goo.gl/TdFbEx):\n```js\nvar a = [1]\n  , b = [2]\n  , c = [3];\n\nvar wset = new WeakSet([a, b, a]);\nwset.add(c).add(b).add(c);\nconsole.log(wset.has(b));   // => true\nconsole.log(wset.has([2])); // => false\nwset.delete(b);\nconsole.log(wset.has(b));   // => false\n```\n##### Caveats when using collections polyfill:\n\n* Weak-collections polyfill stores values as hidden properties of keys. It works correct and not leak in most cases. However, it is desirable to store a collection longer than its keys.\n\n#### ECMAScript 6: Typed Arrays\nImplementations and fixes `ArrayBuffer`, `DataView`, typed arrays constructors, static and prototype methods. Typed Arrays work only in environments with support descriptors (IE9+), `ArrayBuffer` and `DataView` should work anywhere.\n\nModules [`es6.typed.array-buffer`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.typed.array-buffer.js), [`es6.typed.data-view`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.typed.data-view.js), [`es6.typed.int8-array`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.typed.int8-array.js), [`es6.typed.uint8-array`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.typed.uint8-array.js), [`es6.typed.uint8-clamped-array`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.typed.uint8-clamped-array.js), [`es6.typed.int16-array`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.typed.int16-array.js), [`es6.typed.uint16-array`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.typed.uint16-array.js), [`es6.typed.int32-array`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.typed.int32-array.js), [`es6.typed.uint32-array`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.typed.uint32-array.js), [`es6.typed.float32-array`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.typed.float32-array.js) and [`es6.typed.float64-array`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.typed.float64-array.js).\n```js\nnew ArrayBuffer(length) -> buffer\n  .isView(var) -> bool\n  #slice(start = 0, end = @length) -> buffer\n  #byteLength -> uint\n\nnew DataView(buffer, byteOffset = 0, byteLength = buffer.byteLength - byteOffset) -> view\n  #getInt8(offset)                          -> int8\n  #getUint8(offset)                         -> uint8\n  #getInt16(offset, littleEndian = false)   -> int16\n  #getUint16(offset, littleEndian = false)  -> uint16\n  #getInt32(offset, littleEndian = false)   -> int32\n  #getUint32(offset, littleEndian = false)  -> uint32\n  #getFloat32(offset, littleEndian = false) -> float32\n  #getFloat64(offset, littleEndian = false) -> float64\n  #setInt8(offset, value)                          -> void\n  #setUint8(offset, value)                         -> void\n  #setInt16(offset, value, littleEndian = false)   -> void\n  #setUint16(offset, value, littleEndian = false)  -> void\n  #setInt32(offset, value, littleEndian = false)   -> void\n  #setUint32(offset, value, littleEndian = false)  -> void\n  #setFloat32(offset, value, littleEndian = false) -> void\n  #setFloat64(offset, value, littleEndian = false) -> void\n  #buffer     -> buffer\n  #byteLength -> uint\n  #byteOffset -> uint\n\n{\n  Int8Array,\n  Uint8Array,\n  Uint8ClampedArray,\n  Int16Array,\n  Uint16Array,\n  Int32Array,\n  Uint32Array,\n  Float32Array,\n  Float64Array\n}\n  new %TypedArray%(length)    -> typed\n  new %TypedArray%(typed)     -> typed\n  new %TypedArray%(arrayLike) -> typed\n  new %TypedArray%(iterable)  -> typed\n  new %TypedArray%(buffer, byteOffset = 0, length = (buffer.byteLength - byteOffset) / @BYTES_PER_ELEMENT) -> typed\n  .BYTES_PER_ELEMENT -> uint\n  .from(arrayLike | iterable, mapFn(val, index)?, that) -> typed\n  .of(...args) -> typed\n  #BYTES_PER_ELEMENT -> uint\n  #copyWithin(target = 0, start = 0, end = @length) -> @\n  #every(fn(val, index, @), that) -> bool\n  #fill(val, start = 0, end = @length) -> @\n  #filter(fn(val, index, @), that) -> typed\n  #find(fn(val, index, @), that) -> val\n  #findIndex(fn(val, index, @), that) -> index\n  #forEach(fn(val, index, @), that) -> void\n  #indexOf(var, from?) -> int\n  #join(string = ',') -> string\n  #lastIndexOf(var, from?) -> int\n  #map(fn(val, index, @), that) -> typed\n  #reduce(fn(memo, val, index, @), memo?) -> var\n  #reduceRight(fn(memo, val, index, @), memo?) -> var\n  #reverse() -> @\n  #set(arrayLike, offset = 0) -> void\n  #slice(start = 0, end = @length) -> typed\n  #some(fn(val, index, @), that) -> bool\n  #sort(fn(a, b)?) -> @\n  #subarray(start = 0, end = @length) -> typed\n  #toString() -> string\n  #toLocaleString() -> string\n  #values()     -> iterator\n  #keys()       -> iterator\n  #entries()    -> iterator\n  #@@iterator() -> iterator (values)\n  #buffer     -> buffer\n  #byteLength -> uint\n  #byteOffset -> uint\n  #length     -> uint\n```\n[*CommonJS entry points:*](#commonjs)\n```\ncore-js(/library)/es6/typed\ncore-js(/library)/fn/typed\ncore-js(/library)/fn/typed/array-buffer\ncore-js(/library)/fn/typed/data-view\ncore-js(/library)/fn/typed/int8-array\ncore-js(/library)/fn/typed/uint8-array\ncore-js(/library)/fn/typed/uint8-clamped-array\ncore-js(/library)/fn/typed/int16-array\ncore-js(/library)/fn/typed/uint16-array\ncore-js(/library)/fn/typed/int32-array\ncore-js(/library)/fn/typed/uint32-array\ncore-js(/library)/fn/typed/float32-array\ncore-js(/library)/fn/typed/float64-array\n```\n[*Examples*](http://goo.gl/yla75z):\n```js\nnew Int32Array(4);                          // => [0, 0, 0, 0]\nnew Uint8ClampedArray([1, 2, 3, 666]);      // => [1, 2, 3, 255]\nnew Float32Array(new Set([1, 2, 3, 2, 1])); // => [1, 2, 3]\n\nvar buffer = new ArrayBuffer(8);\nvar view   = new DataView(buffer);\nview.setFloat64(0, 123.456, true);\nnew Uint8Array(buffer.slice(4)); // => [47, 221, 94, 64]\n\nInt8Array.of(1, 1.5, 5.7, 745);      // => [1, 1, 5, -23]\nUint8Array.from([1, 1.5, 5.7, 745]); // => [1, 1, 5, 233]\n\nvar typed = new Uint8Array([1, 2, 3]);\n\nvar a = typed.slice(1);    // => [2, 3]\ntyped.buffer === a.buffer; // => false\nvar b = typed.subarray(1); // => [2, 3]\ntyped.buffer === b.buffer; // => true\n\ntyped.filter(it => it % 2); // => [1, 3]\ntyped.map(it => it * 1.5);  // => [1, 3, 4]\n\nfor(var val of typed)console.log(val);          // => 1, 2, 3\nfor(var val of typed.values())console.log(val); // => 1, 2, 3\nfor(var key of typed.keys())console.log(key);   // => 0, 1, 2\nfor(var [key, val] of typed.entries()){\n  console.log(key);                             // => 0, 1, 2\n  console.log(val);                             // => 1, 2, 3\n}\n```\n##### Caveats when using typed arrays:\n\n* Typed Arrays polyfills works completely how should work by the spec, but because of internal use getter / setters on each instance, is slow and consumes significant memory. However, typed arrays polyfills required mainly for IE9 (and for `Uint8ClampedArray` in IE10 and early IE11), all modern engines have native typed arrays and requires only constructors fixes and methods.\n* The current version hasn't special entry points for methods, they can be added only with constructors. It can be added in the future.\n* In the `library` version we can't pollute native prototypes, so prototype methods available as constructors static.\n\n#### ECMAScript 6: Reflect\nModules [`es6.reflect.apply`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.reflect.apply.js), [`es6.reflect.construct`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.reflect.construct.js), [`es6.reflect.define-property`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.reflect.define-property.js), [`es6.reflect.delete-property`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.reflect.delete-property.js), [`es6.reflect.enumerate`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.reflect.enumerate.js), [`es6.reflect.get`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.reflect.get.js), [`es6.reflect.get-own-property-descriptor`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.reflect.get-own-property-descriptor.js), [`es6.reflect.get-prototype-of`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.reflect.get-prototype-of.js), [`es6.reflect.has`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.reflect.has.js), [`es6.reflect.is-extensible`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.reflect.is-extensible.js), [`es6.reflect.own-keys`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.reflect.own-keys.js), [`es6.reflect.prevent-extensions`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.reflect.prevent-extensions.js), [`es6.reflect.set`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.reflect.set.js), [`es6.reflect.set-prototype-of`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es6.reflect.set-prototype-of.js).\n```js\nReflect\n  .apply(target, thisArgument, argumentsList) -> var\n  .construct(target, argumentsList, newTarget?) -> object\n  .defineProperty(target, propertyKey, attributes) -> bool\n  .deleteProperty(target, propertyKey) -> bool\n  .enumerate(target) -> iterator (removed from the spec and will be removed from core-js@3)\n  .get(target, propertyKey, receiver?) -> var\n  .getOwnPropertyDescriptor(target, propertyKey) -> desc\n  .getPrototypeOf(target) -> object | null\n  .has(target, propertyKey) -> bool\n  .isExtensible(target) -> bool\n  .ownKeys(target) -> array\n  .preventExtensions(target) -> bool\n  .set(target, propertyKey, V, receiver?) -> bool\n  .setPrototypeOf(target, proto) -> bool (required __proto__ - IE11+)\n```\n[*CommonJS entry points:*](#commonjs)\n```\ncore-js(/library)/es6/reflect\ncore-js(/library)/fn/reflect\ncore-js(/library)/fn/reflect/apply\ncore-js(/library)/fn/reflect/construct\ncore-js(/library)/fn/reflect/define-property\ncore-js(/library)/fn/reflect/delete-property\ncore-js(/library)/fn/reflect/enumerate (deprecated and will be removed from the next major release)\ncore-js(/library)/fn/reflect/get\ncore-js(/library)/fn/reflect/get-own-property-descriptor\ncore-js(/library)/fn/reflect/get-prototype-of\ncore-js(/library)/fn/reflect/has\ncore-js(/library)/fn/reflect/is-extensible\ncore-js(/library)/fn/reflect/own-keys\ncore-js(/library)/fn/reflect/prevent-extensions\ncore-js(/library)/fn/reflect/set\ncore-js(/library)/fn/reflect/set-prototype-of\n```\n[*Examples*](http://goo.gl/gVT0cH):\n```js\nvar O = {a: 1};\nObject.defineProperty(O, 'b', {value: 2});\nO[Symbol('c')] = 3;\nReflect.ownKeys(O); // => ['a', 'b', Symbol(c)]\n\nfunction C(a, b){\n  this.c = a + b;\n}\n\nvar instance = Reflect.construct(C, [20, 22]);\ninstance.c; // => 42\n```\n\n### ECMAScript 7+ proposals\n[The TC39 process.](https://tc39.github.io/process-document/)\n\n[*CommonJS entry points:*](#commonjs)\n```\ncore-js(/library)/es7\ncore-js(/library)/es7/array\ncore-js(/library)/es7/global\ncore-js(/library)/es7/string\ncore-js(/library)/es7/map\ncore-js(/library)/es7/set\ncore-js(/library)/es7/error\ncore-js(/library)/es7/math\ncore-js(/library)/es7/system\ncore-js(/library)/es7/symbol\ncore-js(/library)/es7/reflect\ncore-js(/library)/es7/observable\n```\n`core-js/stage/4` entry point contains only stage 4 proposals, `core-js/stage/3` - stage 3 and stage 4, etc.\n#### Stage 4 proposals\n\n[*CommonJS entry points:*](#commonjs)\n```js\ncore-js(/library)/stage/4\n```\n* `{Array, %TypedArray%}#includes` [proposal](https://github.com/tc39/Array.prototype.includes) - module [`es7.array.includes`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es7.array.includes.js), `%TypedArray%` version in modules from [this section](#ecmascript-6-typed-arrays).\n```js\nArray\n  #includes(var, from?) -> bool\n{\n  Int8Array,\n  Uint8Array,\n  Uint8ClampedArray,\n  Int16Array,\n  Uint16Array,\n  Int32Array,\n  Uint32Array,\n  Float32Array,\n  Float64Array\n}\n  #includes(var, from?) -> bool\n```\n[*CommonJS entry points:*](#commonjs)\n```js\ncore-js(/library)/fn/array/includes\n```\n[*Examples*](http://goo.gl/2Gq4ma):\n```js\n[1, 2, 3].includes(2);        // => true\n[1, 2, 3].includes(4);        // => false\n[1, 2, 3].includes(2, 2);     // => false\n\n[NaN].indexOf(NaN);           // => -1\n[NaN].includes(NaN);          // => true\nArray(1).indexOf(undefined);  // => -1\nArray(1).includes(undefined); // => true\n```\n* `Object.values`, `Object.entries` [proposal](https://github.com/tc39/proposal-object-values-entries) - modules [`es7.object.values`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es7.object.values.js), [`es7.object.entries`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es7.object.entries.js)\n```js\nObject\n  .values(object) -> array\n  .entries(object) -> array\n```\n[*CommonJS entry points:*](#commonjs)\n```js\ncore-js(/library)/fn/object/values\ncore-js(/library)/fn/object/entries\n```\n[*Examples*](http://goo.gl/6kuGOn):\n```js\nObject.values({a: 1, b: 2, c: 3});  // => [1, 2, 3]\nObject.entries({a: 1, b: 2, c: 3}); // => [['a', 1], ['b', 2], ['c', 3]]\n\nfor(let [key, value] of Object.entries({a: 1, b: 2, c: 3})){\n  console.log(key);   // => 'a', 'b', 'c'\n  console.log(value); // => 1, 2, 3\n}\n```\n* `Object.getOwnPropertyDescriptors` [proposal](https://github.com/tc39/proposal-object-getownpropertydescriptors) - module [`es7.object.get-own-property-descriptors`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es7.object.get-own-property-descriptors.js)\n```js\nObject\n  .getOwnPropertyDescriptors(object) -> object\n```\n[*CommonJS entry points:*](#commonjs)\n```js\ncore-js(/library)/fn/object/get-own-property-descriptors\n```\n*Examples*:\n```js\n// Shallow object cloning with prototype and descriptors:\nvar copy = Object.create(Object.getPrototypeOf(O), Object.getOwnPropertyDescriptors(O));\n// Mixin:\nObject.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n```\n* `String#padStart`, `String#padEnd` [proposal](https://github.com/tc39/proposal-string-pad-start-end) - modules [`es7.string.pad-start`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es7.string.pad-start.js), [`es7.string.pad-end`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es7.string.pad-end.js)\n```js\nString\n  #padStart(length, fillStr = ' ') -> string\n  #padEnd(length, fillStr = ' ') -> string\n```\n[*CommonJS entry points:*](#commonjs)\n```js\ncore-js(/library)/fn/string/pad-start\ncore-js(/library)/fn/string/pad-end\ncore-js(/library)/fn/string/virtual/pad-start\ncore-js(/library)/fn/string/virtual/pad-end\n```\n[*Examples*](http://goo.gl/hK5ccv):\n```js\n'hello'.padStart(10);         // => '     hello'\n'hello'.padStart(10, '1234'); // => '12341hello'\n'hello'.padEnd(10);           // => 'hello     '\n'hello'.padEnd(10, '1234');   // => 'hello12341'\n```\n* `Object#__(define|lookup)[GS]etter__`, [annex B ES2017](https://github.com/tc39/ecma262/pull/381), but we haven't special namespace for that - modules [`es7.object.define-setter`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es7.object.define-setter.js), [`es7.object.define-getter`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es7.object.define-getter.js), [`es7.object.lookup-setter`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es7.object.lookup-setter.js) and [`es7.object.lookup-getter`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es7.object.lookup-getter.js).\n```js\nObject\n  #__defineSetter__(key, fn) -> void\n  #__defineGetter__(key, fn) -> void\n  #__lookupSetter__(key) -> fn | void\n  #__lookupGetter__(key) -> fn | void\n```\n[*CommonJS entry points:*](#commonjs)\n```js\ncore-js(/library)/fn/object/define-getter\ncore-js(/library)/fn/object/define-setter\ncore-js(/library)/fn/object/lookup-getter\ncore-js(/library)/fn/object/lookup-setter\n```\n\n#### Stage 3 proposals\n[*CommonJS entry points:*](#commonjs)\n```js\ncore-js(/library)/stage/3\n```\n* `global` [proposal](https://github.com/tc39/proposal-global) - modules [`es7.global`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es7.global.js) and [`es7.system.global`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es7.system.global.js) (obsolete)\n```js\nglobal -> object\nSystem\n  .global -> object (obsolete)\n```\n[*CommonJS entry points:*](#commonjs)\n```js\ncore-js(/library)/fn/global\ncore-js(/library)/fn/system/global (obsolete)\n```\n[*Examples*](http://goo.gl/gEqMl7):\n```js\nglobal.Array === Array; // => true\n```\n* `Promise#finally` [proposal](https://github.com/tc39/proposal-promise-finally) - module [`es7.promise.finally`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es7.promise.finally.js)\n```js\nPromise\n  #finally(onFinally()) -> promise\n```\n[*CommonJS entry points:*](#commonjs)\n```js\ncore-js(/library)/fn/promise/finally\n```\n[*Examples*](https://goo.gl/AhyBbJ):\n```js\nPromise.resolve(42).finally(() => console.log('You will see it anyway'));\n\nPromise.reject(42).finally(() => console.log('You will see it anyway'));\n\n#### Stage 2 proposals\n[*CommonJS entry points:*](#commonjs)\n```js\ncore-js(/library)/stage/2\n```\n* `String#trimLeft`, `String#trimRight` / `String#trimStart`, `String#trimEnd` [proposal](https://github.com/sebmarkbage/ecmascript-string-left-right-trim) - modules [`es7.string.trim-left`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es7.string.trim-right.js), [`es7.string.trim-right`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es7.string.trim-right.js)\n```js\nString\n  #trimLeft()  -> string\n  #trimRight() -> string\n  #trimStart() -> string\n  #trimEnd()   -> string\n```\n[*CommonJS entry points:*](#commonjs)\n```js\ncore-js(/library)/fn/string/trim-start\ncore-js(/library)/fn/string/trim-end\ncore-js(/library)/fn/string/trim-left\ncore-js(/library)/fn/string/trim-right\ncore-js(/library)/fn/string/virtual/trim-start\ncore-js(/library)/fn/string/virtual/trim-end\ncore-js(/library)/fn/string/virtual/trim-left\ncore-js(/library)/fn/string/virtual/trim-right\n```\n[*Examples*](http://goo.gl/Er5lMJ):\n```js\n'   hello   '.trimLeft();  // => 'hello   '\n'   hello   '.trimRight(); // => '   hello'\n```\n```\n* `Symbol.asyncIterator` for [async iteration proposal](https://github.com/tc39/proposal-async-iteration) - module [`es7.symbol.async-iterator`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es7.symbol.async-iterator.js)\n```js\nSymbol\n  .asyncIterator -> @@asyncIterator\n```\n[*CommonJS entry points:*](#commonjs)\n```js\ncore-js(/library)/fn/symbol/async-iterator\n```\n\n#### Stage 1 proposals\n[*CommonJS entry points:*](#commonjs)\n```js\ncore-js(/library)/stage/1\n```\n* `Promise.try` [proposal](https://github.com/tc39/proposal-promise-try) - module [`es7.promise.try`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es7.promise.try.js)\n```js\nPromise\n  .try(function()) -> promise\n```\n[*CommonJS entry points:*](#commonjs)\n```js\ncore-js(/library)/fn/promise/try\n```\n[*Examples*](https://goo.gl/k5GGRo):\n```js\nPromise.try(() => 42).then(it => console.log(`Promise, resolved as ${it}`));\n\nPromise.try(() => { throw 42; }).catch(it => console.log(`Promise, rejected as ${it}`));\n```\n* `Array#flatten` and `Array#flatMap` [proposal](https://tc39.github.io/proposal-flatMap) - modules [`es7.array.flatten`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es7.array.flatten.js) and [`es7.array.flat-map`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es7.array.flat-map.js)\n```js\nArray\n  #flatten(depthArg = 1) -> array\n  #flatMap(fn(val, key, @), that) -> array\n```\n[*CommonJS entry points:*](#commonjs)\n```js\ncore-js(/library)/fn/array/flatten\ncore-js(/library)/fn/array/flat-map\ncore-js(/library)/fn/array/virtual/flatten\ncore-js(/library)/fn/array/virtual/flat-map\n```\n[*Examples*](https://goo.gl/jTXsZi):\n```js\n[1, [2, 3], [4, 5]].flatten();    // => [1, 2, 3, 4, 5]\n[1, [2, [3, [4]]], 5].flatten();  // => [1, 2, [3, [4]], 5]\n[1, [2, [3, [4]]], 5].flatten(3); // => [1, 2, 3, 4, 5]\n\n[{a: 1, b: 2}, {a: 3, b: 4}, {a: 5, b: 6}].flatMap(it => [it.a, it.b]); // => [1, 2, 3, 4, 5, 6]\n```\n* `.of` and `.from` methods on collection constructors [proposal](https://github.com/tc39/proposal-setmap-offrom) - modules [`es7.set.of`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es7.set.of.js), [`es7.set.from`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es7.set.from.js), [`es7.map.of`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es7.map.of.js), [`es7.map.from`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es7.map.from.js), [`es7.weak-set.of`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es7.weak-set.of.js), [`es7.weak-set.from`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es7.weak-set.from.js), [`es7.weak-map.of`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es7.weak-map.of.js), [`es7.weak-map.from`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es7.weak-map.from.js)\n```js\nSet\n  .of(...args) -> set\n  .from(iterable, mapFn(val, index)?, that?) -> set\nMap\n  .of(...args) -> map\n  .from(iterable, mapFn(val, index)?, that?) -> map\nWeakSet\n  .of(...args) -> weakset\n  .from(iterable, mapFn(val, index)?, that?) -> weakset\nWeakMap\n  .of(...args) -> weakmap\n  .from(iterable, mapFn(val, index)?, that?) -> weakmap\n```\n[*CommonJS entry points:*](#commonjs)\n```js\ncore-js(/library)/fn/set/of\ncore-js(/library)/fn/set/from\ncore-js(/library)/fn/map/of\ncore-js(/library)/fn/map/from\ncore-js(/library)/fn/weak-set/of\ncore-js(/library)/fn/weak-set/from\ncore-js(/library)/fn/weak-map/of\ncore-js(/library)/fn/weak-map/from\n```\n[*Examples*](https://goo.gl/mSC7eU):\n```js\nSet.of(1, 2, 3, 2, 1); // => Set {1, 2, 3}\n\nMap.from([[1, 2], [3, 4]], ([key, val]) => [key ** 2, val ** 2]); // => Map {1: 4, 9: 16}\n```\n* `String#matchAll` [proposal](https://github.com/tc39/String.prototype.matchAll) - module [`es7.string.match-all`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es7.string.match-all.js)\n```js\nString\n  #matchAll(regexp) -> iterator\n```\n[*CommonJS entry points:*](#commonjs)\n```js\ncore-js(/library)/fn/string/match-all\ncore-js(/library)/fn/string/virtual/match-all\n```\n[*Examples*](http://goo.gl/6kp9EB):\n```js\nfor(let [_, d, D] of '1111a2b3cccc'.matchAll(/(\\d)(\\D)/)){\n  console.log(d, D); // => 1 a, 2 b, 3 c\n}\n```\n* `Observable` [proposal](https://github.com/zenparsing/es-observable) - modules [`es7.observable`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es7.observable.js) and [`es7.symbol.observable`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es7.symbol.observable.js)\n```js\nnew Observable(fn)             -> observable\n  #subscribe(observer)         -> subscription\n  #forEach(fn)                 -> promise\n  #@@observable()              -> @\n  .of(...items)                -> observable\n  .from(observable | iterable) -> observable\n  .@@species                   -> @\nSymbol\n  .observable                  -> @@observable\n```\n[*CommonJS entry points:*](#commonjs)\n```js\ncore-js(/library)/fn/observable\ncore-js(/library)/fn/symbol/observable\n```\n[*Examples*](http://goo.gl/1LDywi):\n```js\nnew Observable(observer => {\n  observer.next('hello');\n  observer.next('world');\n  observer.complete();\n}).forEach(it => console.log(it))\n  .then(_ => console.log('!'));\n```\n* `Math.{clamp, DEG_PER_RAD, degrees, fscale, rad-per-deg, radians, scale}` \n  [proposal](https://github.com/rwaldron/proposal-math-extensions) - modules \n  [`es7.math.clamp`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es7.math.clamp.js), \n  [`es7.math.DEG_PER_RAD`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es7.math.DEG_PER_RAD.js), \n  [`es7.math.degrees`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es7.math.degrees.js),\n  [`es7.math.fscale`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es7.math.fscale.js), \n  [`es7.math.RAD_PER_DEG`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es7.math.RAD_PER_DEG.js), \n  [`es7.math.radians`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es7.math.radians.js) and\n  [`es7.math.scale`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es7.math.scale.js)\n```js\nMath\n  .DEG_PER_RAD -> number\n  .RAD_PER_DEG -> number\n  .clamp(x, lower, upper) -> number\n  .degrees(radians) -> number\n  .fscale(x, inLow, inHigh, outLow, outHigh) -> number\n  .radians(degrees) -> number\n  .scale(x, inLow, inHigh, outLow, outHigh) -> number\n```\n[*CommonJS entry points:*](#commonjs)\n```js\ncore-js(/library)/fn/math/clamp\ncore-js(/library)/fn/math/deg-per-rad\ncore-js(/library)/fn/math/degrees\ncore-js(/library)/fn/math/fscale\ncore-js(/library)/fn/math/rad-per-deg\ncore-js(/library)/fn/math/radians\ncore-js(/library)/fn/math/scale\n```\n* `Math.signbit` [proposal](http://jfbastien.github.io/papers/Math.signbit.html) - module [`es7.math.signbit`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es7.math.signbit.js)\n```js\nMath\n  .signbit(x) -> bool\n```\n[*CommonJS entry points:*](#commonjs)\n```js\ncore-js(/library)/fn/math/signbit\n```\n[*Examples*](http://es6.zloirock.ru/):\n```js\nMath.signbit(NaN); // => NaN\nMath.signbit(1);   // => true\nMath.signbit(-1);  // => false\nMath.signbit(0);   // => true\nMath.signbit(-0);  // => false\n```\n\n#### Stage 0 proposals\n[*CommonJS entry points:*](#commonjs)\n```js\ncore-js(/library)/stage/0\n```\n* `String#at` [proposal](https://github.com/mathiasbynens/String.prototype.at) - module [`es7.string.at`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es7.string.at.js)\n```js\nString\n  #at(index) -> string\n```\n[*CommonJS entry points:*](#commonjs)\n```js\ncore-js(/library)/fn/string/at\ncore-js(/library)/fn/string/virtual/at\n```\n[*Examples*](http://goo.gl/XluXI8):\n```js\n'a𠮷b'.at(1);        // => '𠮷'\n'a𠮷b'.at(1).length; // => 2\n```\n* `Map#toJSON`, `Set#toJSON` [proposal](https://github.com/DavidBruant/Map-Set.prototype.toJSON) - modules [`es7.map.to-json`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es7.map.to-json.js), [`es7.set.to-json`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es7.set.to-json.js) (rejected and will be removed from `core-js@3`)\n```js\nMap\n  #toJSON() -> array (rejected and will be removed from core-js@3)\nSet\n  #toJSON() -> array (rejected and will be removed from core-js@3)\n```\n[*CommonJS entry points:*](#commonjs)\n```js\ncore-js(/library)/fn/map\ncore-js(/library)/fn/set\n```\n* `Error.isError` [proposal](https://github.com/ljharb/proposal-is-error) - module [`es7.error.is-error`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es7.error.is-error.js) (withdrawn and will be removed from `core-js@3`)\n```js\nError\n  .isError(it) -> bool (withdrawn and will be removed from core-js@3)\n```\n[*CommonJS entry points:*](#commonjs)\n```js\ncore-js(/library)/fn/error/is-error\n```\n* `Math.{iaddh, isubh, imulh, umulh}` [proposal](https://gist.github.com/BrendanEich/4294d5c212a6d2254703) - modules [`es7.math.iaddh`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es7.math.iaddh.js), [`es7.math.isubh`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es7.math.isubh.js), [`es7.math.imulh`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es7.math.imulh.js) and [`es7.math.umulh`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es7.math.umulh.js)\n```js\nMath\n  .iaddh(lo0, hi0, lo1, hi1) -> int32\n  .isubh(lo0, hi0, lo1, hi1) -> int32\n  .imulh(a, b) -> int32\n  .umulh(a, b) -> uint32\n```\n[*CommonJS entry points:*](#commonjs)\n```js\ncore-js(/library)/fn/math/iaddh\ncore-js(/library)/fn/math/isubh\ncore-js(/library)/fn/math/imulh\ncore-js(/library)/fn/math/umulh\n```\n* `global.asap`, [TC39 discussion](https://github.com/rwaldron/tc39-notes/blob/master/es6/2014-09/sept-25.md#510-globalasap-for-enqueuing-a-microtask), module [`es7.asap`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es7.asap.js)\n```js\nasap(fn) -> void\n```\n[*CommonJS entry points:*](#commonjs)\n```js\ncore-js(/library)/fn/asap\n```\n[*Examples*](http://goo.gl/tx3SRK):\n```js\nasap(() => console.log('called as microtask'));\n```\n\n#### Pre-stage 0 proposals\n[*CommonJS entry points:*](#commonjs)\n```js\ncore-js(/library)/stage/pre\n```\n* `Reflect` metadata [proposal](https://github.com/jonathandturner/decorators/blob/master/specs/metadata.md) - modules [`es7.reflect.define-metadata`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es7.reflect.define-metadata.js), [`es7.reflect.delete-metadata`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es7.reflect.delete-metadata.js), [`es7.reflect.get-metadata`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es7.reflect.get-metadata.js), [`es7.reflect.get-metadata-keys`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es7.reflect.get-metadata-keys.js), [`es7.reflect.get-own-metadata`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es7.reflect.get-own-metadata.js), [`es7.reflect.get-own-metadata-keys`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es7.reflect.get-own-metadata-keys.js), [`es7.reflect.has-metadata`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es7.reflect.has-metadata.js), [`es7.reflect.has-own-metadata`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es7.reflect.has-own-metadata.js) and [`es7.reflect.metadata`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/es7.reflect.metadata.js).\n```js\nReflect\n  .defineMetadata(metadataKey, metadataValue, target, propertyKey?) -> void\n  .getMetadata(metadataKey, target, propertyKey?) -> var\n  .getOwnMetadata(metadataKey, target, propertyKey?) -> var\n  .hasMetadata(metadataKey, target, propertyKey?) -> bool\n  .hasOwnMetadata(metadataKey, target, propertyKey?) -> bool\n  .deleteMetadata(metadataKey, target, propertyKey?) -> bool\n  .getMetadataKeys(target, propertyKey?) -> array\n  .getOwnMetadataKeys(target, propertyKey?) -> array\n  .metadata(metadataKey, metadataValue) -> decorator(target, targetKey?) -> void\n```\n[*CommonJS entry points:*](#commonjs)\n```js\ncore-js(/library)/fn/reflect/define-metadata\ncore-js(/library)/fn/reflect/delete-metadata\ncore-js(/library)/fn/reflect/get-metadata\ncore-js(/library)/fn/reflect/get-metadata-keys\ncore-js(/library)/fn/reflect/get-own-metadata\ncore-js(/library)/fn/reflect/get-own-metadata-keys\ncore-js(/library)/fn/reflect/has-metadata\ncore-js(/library)/fn/reflect/has-own-metadata\ncore-js(/library)/fn/reflect/metadata\n```\n[*Examples*](http://goo.gl/KCo3PS):\n```js\nvar O = {};\nReflect.defineMetadata('foo', 'bar', O);\nReflect.ownKeys(O);               // => []\nReflect.getOwnMetadataKeys(O);    // => ['foo']\nReflect.getOwnMetadata('foo', O); // => 'bar'\n```\n\n### Web standards\n[*CommonJS entry points:*](#commonjs)\n```js\ncore-js(/library)/web\n```\n#### setTimeout / setInterval\nModule [`web.timers`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/web.timers.js). Additional arguments fix for IE9-.\n```js\nsetTimeout(fn(...args), time, ...args) -> id\nsetInterval(fn(...args), time, ...args) -> id\n```\n[*CommonJS entry points:*](#commonjs)\n```js\ncore-js(/library)/web/timers\ncore-js(/library)/fn/set-timeout\ncore-js(/library)/fn/set-interval\n```\n```js\n// Before:\nsetTimeout(log.bind(null, 42), 1000);\n// After:\nsetTimeout(log, 1000, 42);\n```\n#### setImmediate\nModule [`web.immediate`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/web.immediate.js). [`setImmediate` proposal](https://developer.mozilla.org/en-US/docs/Web/API/Window.setImmediate) polyfill.\n```js\nsetImmediate(fn(...args), ...args) -> id\nclearImmediate(id) -> void\n```\n[*CommonJS entry points:*](#commonjs)\n```js\ncore-js(/library)/web/immediate\ncore-js(/library)/fn/set-immediate\ncore-js(/library)/fn/clear-immediate\n```\n[*Examples*](http://goo.gl/6nXGrx):\n```js\nsetImmediate(function(arg1, arg2){\n  console.log(arg1, arg2); // => Message will be displayed with minimum delay\n}, 'Message will be displayed', 'with minimum delay');\n\nclearImmediate(setImmediate(function(){\n  console.log('Message will not be displayed');\n}));\n```\n#### Iterable DOM collections\nSome DOM collections should have [iterable interface](https://heycam.github.io/webidl/#idl-iterable) or should be [inherited from `Array`](https://heycam.github.io/webidl/#LegacyArrayClass). That mean they should have `keys`, `values`, `entries` and `@@iterator` methods for iteration. So add them. Module [`web.dom.iterable`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/web.dom.iterable.js):\n```js\n{\n  CSSRuleList,\n  CSSStyleDeclaration,\n  CSSValueList,\n  ClientRectList,\n  DOMRectList,\n  DOMStringList,\n  DOMTokenList,\n  DataTransferItemList,\n  FileList,\n  HTMLAllCollection,\n  HTMLCollection,\n  HTMLFormElement,\n  HTMLSelectElement,\n  MediaList,\n  MimeTypeArray,\n  NamedNodeMap,\n  NodeList,\n  PaintRequestList,\n  Plugin,\n  PluginArray,\n  SVGLengthList,\n  SVGNumberList,\n  SVGPathSegList,\n  SVGPointList,\n  SVGStringList,\n  SVGTransformList,\n  SourceBufferList,\n  StyleSheetList,\n  TextTrackCueList,\n  TextTrackList,\n  TouchList\n}\n  #@@iterator() -> iterator (values)\n\n{\n  DOMTokenList,\n  NodeList\n}\n  #values()  -> iterator\n  #keys()    -> iterator\n  #entries() -> iterator\n```\n[*CommonJS entry points:*](#commonjs)\n```js\ncore-js(/library)/web/dom-collections\ncore-js(/library)/fn/dom-collections/iterator\n```\n[*Examples*](http://goo.gl/lfXVFl):\n```js\nfor(var {id} of document.querySelectorAll('*')){\n  if(id)console.log(id);\n}\n\nfor(var [index, {id}] of document.querySelectorAll('*').entries()){\n  if(id)console.log(index, id);\n}\n```\n### Non-standard\n[*CommonJS entry points:*](#commonjs)\n```js\ncore-js(/library)/core\n```\n#### Object\nModules [`core.object.is-object`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/core.object.is-object.js), [`core.object.classof`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/core.object.classof.js), [`core.object.define`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/core.object.define.js), [`core.object.make`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/core.object.make.js).\n```js\nObject\n  .isObject(var) -> bool\n  .classof(var) -> string\n  .define(target, mixin) -> target\n  .make(proto | null, mixin?) -> object\n```\n\n[*CommonJS entry points:*](#commonjs)\n```js\ncore-js(/library)/core/object\ncore-js(/library)/fn/object/is-object\ncore-js(/library)/fn/object/define\ncore-js(/library)/fn/object/make\n```\nObject classify [*examples*](http://goo.gl/YZQmGo):\n```js\nObject.isObject({});    // => true\nObject.isObject(isNaN); // => true\nObject.isObject(null);  // => false\n\nvar classof = Object.classof;\n\nclassof(null);                 // => 'Null'\nclassof(undefined);            // => 'Undefined'\nclassof(1);                    // => 'Number'\nclassof(true);                 // => 'Boolean'\nclassof('string');             // => 'String'\nclassof(Symbol());             // => 'Symbol'\n\nclassof(new Number(1));        // => 'Number'\nclassof(new Boolean(true));    // => 'Boolean'\nclassof(new String('string')); // => 'String'\n\nvar fn   = function(){}\n  , list = (function(){return arguments})(1, 2, 3);\n\nclassof({});                   // => 'Object'\nclassof(fn);                   // => 'Function'\nclassof([]);                   // => 'Array'\nclassof(list);                 // => 'Arguments'\nclassof(/./);                  // => 'RegExp'\nclassof(new TypeError);        // => 'Error'\n\nclassof(new Set);              // => 'Set'\nclassof(new Map);              // => 'Map'\nclassof(new WeakSet);          // => 'WeakSet'\nclassof(new WeakMap);          // => 'WeakMap'\nclassof(new Promise(fn));      // => 'Promise'\n\nclassof([].values());          // => 'Array Iterator'\nclassof(new Set().values());   // => 'Set Iterator'\nclassof(new Map().values());   // => 'Map Iterator'\n\nclassof(Math);                 // => 'Math'\nclassof(JSON);                 // => 'JSON'\n\nfunction Example(){}\nExample.prototype[Symbol.toStringTag] = 'Example';\n\nclassof(new Example);          // => 'Example'\n```\n`Object.define` and `Object.make` [*examples*](http://goo.gl/rtpD5Z):\n```js\n// Before:\nObject.defineProperty(target, 'c', {\n  enumerable: true,\n  configurable: true,\n  get: function(){\n    return this.a + this.b;\n  }\n});\n\n// After:\nObject.define(target, {\n  get c(){\n    return this.a + this.b;\n  }\n});\n\n// Shallow object cloning with prototype and descriptors:\nvar copy = Object.make(Object.getPrototypeOf(src), src);\n\n// Simple inheritance:\nfunction Vector2D(x, y){\n  this.x = x;\n  this.y = y;\n}\nObject.define(Vector2D.prototype, {\n  get xy(){\n    return Math.hypot(this.x, this.y);\n  }\n});\nfunction Vector3D(x, y, z){\n  Vector2D.apply(this, arguments);\n  this.z = z;\n}\nVector3D.prototype = Object.make(Vector2D.prototype, {\n  constructor: Vector3D,\n  get xyz(){\n    return Math.hypot(this.x, this.y, this.z);\n  }\n});\n\nvar vector = new Vector3D(9, 12, 20);\nconsole.log(vector.xy);  // => 15\nconsole.log(vector.xyz); // => 25\nvector.y++;\nconsole.log(vector.xy);  // => 15.811388300841896\nconsole.log(vector.xyz); // => 25.495097567963924\n```\n#### Dict\nModule [`core.dict`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/core.dict.js). Based on [TC39 discuss](https://github.com/rwaldron/tc39-notes/blob/master/es6/2012-11/nov-29.md#collection-apis-review) / [strawman](http://wiki.ecmascript.org/doku.php?id=harmony:modules_standard#dictionaries).\n```js\n[new] Dict(iterable (entries) | object ?) -> dict\n  .isDict(var) -> bool\n  .values(object) -> iterator\n  .keys(object) -> iterator\n  .entries(object) -> iterator (entries)\n  .has(object, key) -> bool\n  .get(object, key) -> val\n  .set(object, key, value) -> object\n  .forEach(object, fn(val, key, @), that) -> void\n  .map(object, fn(val, key, @), that) -> new @\n  .mapPairs(object, fn(val, key, @), that) -> new @\n  .filter(object, fn(val, key, @), that) -> new @\n  .some(object, fn(val, key, @), that) -> bool\n  .every(object, fn(val, key, @), that) -> bool\n  .find(object, fn(val, key, @), that) -> val\n  .findKey(object, fn(val, key, @), that) -> key\n  .keyOf(object, var) -> key\n  .includes(object, var) -> bool\n  .reduce(object, fn(memo, val, key, @), memo?) -> var\n```\n\n[*CommonJS entry points:*](#commonjs)\n```js\ncore-js(/library)/core/dict\ncore-js(/library)/fn/dict\n```\n`Dict` create object without prototype from iterable or simple object.\n\n[*Examples*](http://goo.gl/pnp8Vr):\n```js\nvar map = new Map([['a', 1], ['b', 2], ['c', 3]]);\n\nDict();                    // => {__proto__: null}\nDict({a: 1, b: 2, c: 3});  // => {__proto__: null, a: 1, b: 2, c: 3}\nDict(map);                 // => {__proto__: null, a: 1, b: 2, c: 3}\nDict([1, 2, 3].entries()); // => {__proto__: null, 0: 1, 1: 2, 2: 3}\n\nvar dict = Dict({a: 42});\ndict instanceof Object;   // => false\ndict.a;                   // => 42\ndict.toString;            // => undefined\n'a' in dict;              // => true\n'hasOwnProperty' in dict; // => false\n\nDict.isDict({});     // => false\nDict.isDict(Dict()); // => true\n```\n`Dict.keys`, `Dict.values` and `Dict.entries` returns iterators for objects.\n\n[*Examples*](http://goo.gl/xAvECH):\n```js\nvar dict = {a: 1, b: 2, c: 3};\n\nfor(var key of Dict.keys(dict))console.log(key); // => 'a', 'b', 'c'\n\nfor(var val of Dict.values(dict))console.log(val); // => 1, 2, 3\n\nfor(var [key, val] of Dict.entries(dict)){\n  console.log(key); // => 'a', 'b', 'c'\n  console.log(val); // => 1, 2, 3\n}\n\nnew Map(Dict.entries(dict)); // => Map {a: 1, b: 2, c: 3}\n```\nBasic dict operations for objects with prototype [*examples*](http://goo.gl/B28UnG):\n```js\n'q' in {q: 1};            // => true\n'toString' in {};         // => true\n\nDict.has({q: 1}, 'q');    // => true\nDict.has({}, 'toString'); // => false\n\n({q: 1})['q'];            // => 1\n({}).toString;            // => function toString(){ [native code] }\n\nDict.get({q: 1}, 'q');    // => 1\nDict.get({}, 'toString'); // => undefined\n\nvar O = {};\nO['q'] = 1;\nO['q'];         // => 1\nO['__proto__'] = {w: 2};\nO['__proto__']; // => {w: 2}\nO['w'];         // => 2\n\nvar O = {};\nDict.set(O, 'q', 1);\nO['q'];         // => 1\nDict.set(O, '__proto__', {w: 2});\nO['__proto__']; // => {w: 2}\nO['w'];         // => undefined\n```\nOther methods of `Dict` module are static equivalents of `Array.prototype` methods for dictionaries.\n\n[*Examples*](http://goo.gl/xFi1RH):\n```js\nvar dict = {a: 1, b: 2, c: 3};\n\nDict.forEach(dict, console.log, console);\n// => 1, 'a', {a: 1, b: 2, c: 3}\n// => 2, 'b', {a: 1, b: 2, c: 3}\n// => 3, 'c', {a: 1, b: 2, c: 3}\n\nDict.map(dict, function(it){\n  return it * it;\n}); // => {a: 1, b: 4, c: 9}\n\nDict.mapPairs(dict, function(val, key){\n  if(key != 'b')return [key + key, val * val];\n}); // => {aa: 1, cc: 9}\n\nDict.filter(dict, function(it){\n  return it % 2;\n}); // => {a: 1, c: 3}\n\nDict.some(dict, function(it){\n  return it === 2;\n}); // => true\n\nDict.every(dict, function(it){\n  return it === 2;\n}); // => false\n\nDict.find(dict, function(it){\n  return it > 2;\n}); // => 3\nDict.find(dict, function(it){\n  return it > 4;\n}); // => undefined\n\nDict.findKey(dict, function(it){\n  return it > 2;\n}); // => 'c'\nDict.findKey(dict, function(it){\n  return it > 4;\n}); // => undefined\n\nDict.keyOf(dict, 2);    // => 'b'\nDict.keyOf(dict, 4);    // => undefined\n\nDict.includes(dict, 2); // => true\nDict.includes(dict, 4); // => false\n\nDict.reduce(dict, function(memo, it){\n  return memo + it;\n});     // => 6\nDict.reduce(dict, function(memo, it){\n  return memo + it;\n}, ''); // => '123'\n```\n#### Partial application\nModule [`core.function.part`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/core.function.part.js).\n```js\nFunction\n  #part(...args | _) -> fn(...args)\n```\n\n[*CommonJS entry points:*](#commonjs)\n```js\ncore-js/core/function\ncore-js(/library)/fn/function/part\ncore-js(/library)/fn/function/virtual/part\ncore-js(/library)/fn/_\n```\n`Function#part` partial apply function without `this` binding. Uses global variable `_` (`core._` for builds without global namespace pollution) as placeholder and not conflict with `Underscore` / `LoDash`.\n\n[*Examples*](http://goo.gl/p9ZJ8K):\n```js\nvar fn1 = log.part(1, 2);\nfn1(3, 4);    // => 1, 2, 3, 4\n\nvar fn2 = log.part(_, 2, _, 4);\nfn2(1, 3);    // => 1, 2, 3, 4\n\nvar fn3 = log.part(1, _, _, 4);\nfn3(2, 3);    // => 1, 2, 3, 4\n\nfn2(1, 3, 5); // => 1, 2, 3, 4, 5\nfn2(1);       // => 1, 2, undefined, 4\n```\n#### Number Iterator\nModule [`core.number.iterator`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/core.number.iterator.js).\n```js\nNumber\n  #@@iterator() -> iterator\n```\n\n[*CommonJS entry points:*](#commonjs)\n```js\ncore-js(/library)/core/number\ncore-js(/library)/fn/number/iterator\ncore-js(/library)/fn/number/virtual/iterator\n```\n[*Examples*](http://goo.gl/o45pCN):\n```js\nfor(var i of 3)console.log(i); // => 0, 1, 2\n\n[...10]; // => [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n\nArray.from(10, Math.random); // => [0.9817775336559862, 0.02720663254149258, ...]\n\nArray.from(10, function(it){\n  return this + it * it;\n}, .42); // => [0.42, 1.42, 4.42, 9.42, 16.42, 25.42, 36.42, 49.42, 64.42, 81.42]\n```\n#### Escaping strings\nModules [`core.regexp.escape`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/core.regexp.escape.js), [`core.string.escape-html`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/core.string.escape-html.js) and [`core.string.unescape-html`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/core.string.unescape-html.js).\n```js\nRegExp\n  .escape(str) -> str\nString\n  #escapeHTML() -> str\n  #unescapeHTML() -> str\n```\n[*CommonJS entry points:*](#commonjs)\n```js\ncore-js(/library)/core/regexp\ncore-js(/library)/core/string\ncore-js(/library)/fn/regexp/escape\ncore-js(/library)/fn/string/escape-html\ncore-js(/library)/fn/string/unescape-html\ncore-js(/library)/fn/string/virtual/escape-html\ncore-js(/library)/fn/string/virtual/unescape-html\n```\n[*Examples*](http://goo.gl/6bOvsQ):\n```js\nRegExp.escape('Hello, []{}()*+?.\\\\^$|!'); // => 'Hello, \\[\\]\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|!'\n\n'<script>doSomething();</script>'.escapeHTML(); // => '&lt;script&gt;doSomething();&lt;/script&gt;'\n'&lt;script&gt;doSomething();&lt;/script&gt;'.unescapeHTML(); // => '<script>doSomething();</script>'\n```\n#### delay\nModule [`core.delay`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/core.delay.js). [Promise](#ecmascript-6-promise)-returning delay function, [esdiscuss](https://esdiscuss.org/topic/promise-returning-delay-function).\n```js\ndelay(ms) -> promise\n```\n[*CommonJS entry points:*](#commonjs)\n```js\ncore-js(/library)/core/delay\ncore-js(/library)/fn/delay\n```\n[*Examples*](http://goo.gl/lbucba):\n```js\ndelay(1e3).then(() => console.log('after 1 sec'));\n\n(async () => {\n  await delay(3e3);\n  console.log('after 3 sec');\n\n  while(await delay(3e3))console.log('each 3 sec');\n})();\n```\n#### Helpers for iterators\nModules [`core.is-iterable`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/core.is-iterable.js), [`core.get-iterator`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/core.get-iterator.js), [`core.get-iterator-method`](https://github.com/zloirock/core-js/blob/v2.5.7/modules/core.get-iterator-method.js) - helpers for check iterability / get iterator in the `library` version or, for example, for `arguments` object:\n```js\ncore\n  .isIterable(var) -> bool\n  .getIterator(iterable) -> iterator\n  .getIteratorMethod(var) -> function | undefined\n```\n[*CommonJS entry points:*](#commonjs)\n```js\ncore-js(/library)/fn/is-iterable\ncore-js(/library)/fn/get-iterator\ncore-js(/library)/fn/get-iterator-method\n```\n[*Examples*](http://goo.gl/SXsM6D):\n```js\nvar list = (function(){\n  return arguments;\n})(1, 2, 3);\n\nconsole.log(core.isIterable(list)); // true;\n\nvar iter = core.getIterator(list);\nconsole.log(iter.next().value); // 1\nconsole.log(iter.next().value); // 2\nconsole.log(iter.next().value); // 3\nconsole.log(iter.next().value); // undefined\n\ncore.getIterator({});   // TypeError: [object Object] is not iterable!\n\nvar iterFn = core.getIteratorMethod(list);\nconsole.log(typeof iterFn);     // 'function'\nvar iter = iterFn.call(list);\nconsole.log(iter.next().value); // 1\nconsole.log(iter.next().value); // 2\nconsole.log(iter.next().value); // 3\nconsole.log(iter.next().value); // undefined\n\nconsole.log(core.getIteratorMethod({})); // undefined\n```\n\n## Missing polyfills\n- ES5 `JSON` is missing now only in IE7- and never will it be added to `core-js`, if you need it in these old browsers, many implementations are available, for example, [json3](https://github.com/bestiejs/json3).\n- ES6 `String#normalize` is not a very useful feature, but this polyfill will be very large. If you need it, you can use [unorm](https://github.com/walling/unorm/).\n- ES6 `Proxy` can't be polyfilled, but for Node.js / Chromium with additional flags you can try [harmony-reflect](https://github.com/tvcutsem/harmony-reflect) for adapt old style `Proxy` API to final ES6 version.\n- ES6 logic for `@@isConcatSpreadable` and `@@species` (in most places) can be polyfilled without problems, but it will cause a serious slowdown in popular cases in some engines. It will be polyfilled when it will be implemented in modern engines.\n- ES7 `SIMD`. `core-js` doesn't add polyfill of this feature because of large size and some other reasons. You can use [this polyfill](https://github.com/tc39/ecmascript_simd/blob/master/src/ecmascript_simd.js).\n- `window.fetch` is not a cross-platform feature, in some environments it makes no sense. For this reason, I don't think it should be in `core-js`. Looking at a large number of requests it *may be*  added in the future. Now you can use, for example, [this polyfill](https://github.com/github/fetch).\n- ECMA-402 `Intl` is missed because of size. You can use [this polyfill](https://github.com/andyearnshaw/Intl.js/).\n",
        "readmeFilename": "README.md",
        "dependencies": {},
        "optionalDependencies": {},
        "_dependencies": {},
        "path": "/home/srikanth/Srikanth/alfresco/adf-components/node_modules/core-js",
        "error": "[Circular]",
        "extraneous": false,
        "peerMissing": [
          {
            "requiredBy": "@alfresco/adf-core@2.6.0",
            "requires": "core-js@2.4.1"
          }
        ]
      },
      "peerMissing": true
    },
    "hammerjs": {
      "version": "2.0.8",
      "from": "hammerjs@2.0.8",
      "resolved": "https://registry.npmjs.org/hammerjs/-/hammerjs-2.0.8.tgz"
    },
    "minimatch-browser": {
      "version": "1.0.0",
      "from": "minimatch-browser@1.0.0",
      "resolved": "https://registry.npmjs.org/minimatch-browser/-/minimatch-browser-1.0.0.tgz"
    },
    "moment": {
      "version": "2.22.2",
      "from": "moment@2.22.2",
      "resolved": "https://registry.npmjs.org/moment/-/moment-2.22.2.tgz"
    },
    "moment-es6": {
      "version": "1.0.0",
      "from": "moment-es6@1.0.0",
      "resolved": "https://registry.npmjs.org/moment-es6/-/moment-es6-1.0.0.tgz"
    },
    "pdfjs-dist": {
      "required": {
        "_args": [
          [
            "pdfjs-dist@2.0.489",
            "/home/srikanth/Downloads/alfresco-content-app-master"
          ],
          [
            "pdfjs-dist@2.0.489",
            "/home/srikanth/Srikanth/alfresco/adf-components"
          ]
        ],
        "_from": "pdfjs-dist@2.0.489",
        "_id": "pdfjs-dist@2.0.489",
        "_integrity": "sha1-Y+VLKSqGeQpFRpfrRNQ0e4+/rSc=",
        "_location": "/pdfjs-dist",
        "_phantomChildren": {},
        "_requested": {
          "type": "version",
          "registry": true,
          "raw": "pdfjs-dist@2.0.489",
          "name": "pdfjs-dist",
          "escapedName": "pdfjs-dist",
          "rawSpec": "2.0.489",
          "saveSpec": "[Circular]",
          "fetchSpec": "2.0.489"
        },
        "_requiredBy": [
          "/"
        ],
        "_resolved": "https://registry.npmjs.org/pdfjs-dist/-/pdfjs-dist-2.0.489.tgz",
        "_spec": "2.0.489",
        "_where": "/home/srikanth/Srikanth/alfresco/adf-components",
        "browser": {
          "fs": false,
          "http": false,
          "https": false,
          "node-ensure": false
        },
        "bugs": {
          "url": "https://github.com/mozilla/pdf.js/issues"
        },
        "dependencies": {
          "node-ensure": {
            "_args": [
              [
                "node-ensure@0.0.0",
                "/home/srikanth/Downloads/alfresco-content-app-master"
              ],
              [
                "node-ensure@0.0.0",
                "/home/srikanth/Srikanth/alfresco/adf-components"
              ]
            ],
            "_from": "node-ensure@0.0.0",
            "_id": "node-ensure@0.0.0",
            "_integrity": "sha1-7K52QVDemYYexcgQ/V0Jaxg5Mqc=",
            "_location": "/node-ensure",
            "_phantomChildren": {},
            "_requested": {
              "type": "version",
              "registry": true,
              "raw": "node-ensure@0.0.0",
              "name": "node-ensure",
              "escapedName": "node-ensure",
              "rawSpec": "0.0.0",
              "saveSpec": "[Circular]",
              "fetchSpec": "0.0.0"
            },
            "_requiredBy": [
              "/pdfjs-dist"
            ],
            "_resolved": "https://registry.npmjs.org/node-ensure/-/node-ensure-0.0.0.tgz",
            "_spec": "0.0.0",
            "_where": "/home/srikanth/Srikanth/alfresco/adf-components",
            "author": {
              "name": "Carl A. Bauer"
            },
            "browser": {
              "./index.js": "./browser.js"
            },
            "bugs": {
              "url": "https://github.com/bauerca/node-ensure/issues"
            },
            "description": "Async module-loading library and protocol for bundlers/loaders targeting isomorphic apps and Node.js.",
            "homepage": "https://github.com/bauerca/node-ensure",
            "keywords": [
              "require",
              "ensure",
              "dynamic",
              "module",
              "loader",
              "bundler",
              "async"
            ],
            "license": "MIT",
            "main": "index.js",
            "name": "node-ensure",
            "repository": {
              "type": "git",
              "url": "git+https://github.com/bauerca/node-ensure.git"
            },
            "scripts": {
              "test": "echo \"Error: no test specified\" && exit 1"
            },
            "version": "0.0.0",
            "readme": "# node-ensure\n\nA simple library that shims asynchronous module loading into Node.js to help\nwith building module bundlers and client-side loaders for isomorphic apps.\nThis library is super slim (read the source) and mainly represents an agreement\nbetween developers and users of a particular bundler/loader.\n\nNOTE: This module is *not* compatible with Browserify. It is for developers that\nwant to split their bundles for the client. For example, see\n[dynapack](https://github.com/bauerca/dynapack).\n\n*Syntax is inspired by the CommonJS\n[Modules/Async/A](http://wiki.commonjs.org/wiki/Modules/Async/A) proposal.*\n\n\n## Installation\n\n```\nnpm install node-ensure\n```\n\n## Example\n\n```js\nvar ensure = require('node-ensure');\n\nensure(['superagent', 'react'], function(err) {\n  var request = require('superagent');\n  var React = require('react');\n\n  // Do the coolest of things.\n});\n```\n\nIf your bundler needs `require.ensure`, do this instead:\n\n```js\nrequire.ensure = require('node-ensure');\n\nrequire.ensure(['superagent', 'react'], function(err) {\n  var request = require('superagent');\n  var React = require('react');\n\n  // Do the coolest of things.\n});\n```\n\n## Usage\n\nThe returned function takes an array of strings and a callback, in that\norder (see the example above). The callback takes a single error argument, which\nusually indicates a network problem or other client-side loader-specific runtime\nerror (it should never receive an error when used in Node.js).\n\nWithin the ensure callback, load modules with standard require calls.\n\n## Bundlers/Loaders\n\nThis library primarily constitutes an agreement between users and developers of\nmodule bundlers and (client-side) loaders. The users agree to the usage instructions\nsupplied above.\n\nBundlers and/or loaders must adhere to the following:\n\n- The bundler/loader uses the package.json `\"browser\"` property for replacing\n  server-only modules with browser-ready counterparts (a la Browserify).\n- The `require` function passed to a module must have a `require.ensure`\n  function.\n- Each `require.ensure` must accept the same arguments as described in [Usage](#usage).\n- Each `require.ensure` must not access variables via closure unless those variables\n  are shared by **all** `require.ensure` functions.\n- Each `require.ensure` may access properties\n  on `this`. However, this assumes users have attached node-ensure to `require` via\n  `require.ensure = require('node-ensure')`.\n\nHappy loading!\n\n# License\n\nMIT\n",
            "readmeFilename": "README.md",
            "dependencies": {},
            "devDependencies": {},
            "optionalDependencies": {},
            "_dependencies": {},
            "path": "/home/srikanth/Srikanth/alfresco/adf-components/node_modules/node-ensure",
            "error": "[Circular]",
            "extraneous": false
          },
          "worker-loader": {
            "_args": [
              [
                "worker-loader@1.1.1",
                "/home/srikanth/Downloads/alfresco-content-app-master"
              ],
              [
                "worker-loader@1.1.1",
                "/home/srikanth/Srikanth/alfresco/adf-components"
              ]
            ],
            "_from": "worker-loader@1.1.1",
            "_id": "worker-loader@1.1.1",
            "_integrity": "sha512-qJZLVS/jMCBITDzPo/RuweYSIG8VJP5P67mP/71alGyTZRe1LYJFdwLjLalY3T5ifx0bMDRD3OB6P2p1escvlg==",
            "_location": "/worker-loader",
            "_phantomChildren": {},
            "_requested": {
              "type": "version",
              "registry": true,
              "raw": "worker-loader@1.1.1",
              "name": "worker-loader",
              "escapedName": "worker-loader",
              "rawSpec": "1.1.1",
              "saveSpec": "[Circular]",
              "fetchSpec": "1.1.1"
            },
            "_requiredBy": [
              "/pdfjs-dist"
            ],
            "_resolved": "https://registry.npmjs.org/worker-loader/-/worker-loader-1.1.1.tgz",
            "_spec": "1.1.1",
            "_where": "/home/srikanth/Srikanth/alfresco/adf-components",
            "author": {
              "name": "Tobias Koppers @sokra"
            },
            "bugs": {
              "url": "https://github.com/webpack-contrib/worker-loader/issues"
            },
            "dependencies": {
              "loader-utils": {
                "_args": [
                  [
                    "loader-utils@1.1.0",
                    "/home/srikanth/Downloads/alfresco-content-app-master"
                  ],
                  [
                    "loader-utils@1.1.0",
                    "/home/srikanth/Srikanth/alfresco/adf-components"
                  ]
                ],
                "_from": "loader-utils@1.1.0",
                "_id": "loader-utils@1.1.0",
                "_integrity": "sha1-yYrvSIvM7aL/teLeZG1qdUQp9c0=",
                "_location": "/loader-utils",
                "_phantomChildren": {},
                "_requested": {
                  "type": "version",
                  "registry": true,
                  "raw": "loader-utils@1.1.0",
                  "name": "loader-utils",
                  "escapedName": "loader-utils",
                  "rawSpec": "1.1.0",
                  "saveSpec": "[Circular]",
                  "fetchSpec": "1.1.0"
                },
                "_requiredBy": [
                  "/@angular-devkit/build-angular",
                  "/@angular-devkit/build-optimizer",
                  "/copy-webpack-plugin",
                  "/file-loader",
                  "/istanbul-instrumenter-loader",
                  "/less-loader",
                  "/mini-css-extract-plugin",
                  "/postcss-loader",
                  "/sass-loader",
                  "/source-map-loader",
                  "/style-loader",
                  "/stylus-loader",
                  "/url-loader",
                  "/webpack",
                  "/worker-loader"
                ],
                "_resolved": "https://registry.npmjs.org/loader-utils/-/loader-utils-1.1.0.tgz",
                "_spec": "1.1.0",
                "_where": "/home/srikanth/Srikanth/alfresco/adf-components",
                "author": {
                  "name": "Tobias Koppers @sokra"
                },
                "bugs": {
                  "url": "https://github.com/webpack/loader-utils/issues"
                },
                "dependencies": {
                  "big.js": {
                    "_args": [
                      [
                        "big.js@3.2.0",
                        "/home/srikanth/Downloads/alfresco-content-app-master"
                      ],
                      [
                        "big.js@3.2.0",
                        "/home/srikanth/Srikanth/alfresco/adf-components"
                      ]
                    ],
                    "_from": "big.js@3.2.0",
                    "_id": "big.js@3.2.0",
                    "_integrity": "sha512-+hN/Zh2D08Mx65pZ/4g5bsmNiZUuChDiQfTUQ7qJr4/kuopCr88xZsAXv6mBoZEsUI4OuGHlX59qE94K2mMW8Q==",
                    "_location": "/big.js",
                    "_phantomChildren": {},
                    "_requested": {
                      "type": "version",
                      "registry": true,
                      "raw": "big.js@3.2.0",
                      "name": "big.js",
                      "escapedName": "big.js",
                      "rawSpec": "3.2.0",
                      "saveSpec": "[Circular]",
                      "fetchSpec": "3.2.0"
                    },
                    "_requiredBy": [
                      "/html-webpack-plugin/loader-utils",
                      "/loader-utils"
                    ],
                    "_resolved": "https://registry.npmjs.org/big.js/-/big.js-3.2.0.tgz",
                    "_spec": "3.2.0",
                    "_where": "/home/srikanth/Srikanth/alfresco/adf-components",
                    "author": {
                      "name": "Michael Mclaughlin",
                      "email": "M8ch88l@gmail.com"
                    },
                    "bugs": {
                      "url": "https://github.com/MikeMcl/big.js/issues"
                    },
                    "description": "A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic",
                    "engines": {
                      "node": "*"
                    },
                    "files": [
                      "big.js",
                      "big.min.js"
                    ],
                    "homepage": "https://github.com/MikeMcl/big.js#readme",
                    "keywords": [
                      "arbitrary",
                      "precision",
                      "arithmetic",
                      "big",
                      "number",
                      "decimal",
                      "float",
                      "biginteger",
                      "bigdecimal",
                      "bignumber",
                      "bigint",
                      "bignum"
                    ],
                    "license": "MIT",
                    "main": "big.js",
                    "name": "big.js",
                    "repository": {
                      "type": "git",
                      "url": "git+https://github.com/MikeMcl/big.js.git"
                    },
                    "scripts": {
                      "build": "uglifyjs big.js --source-map doc/big.js.map -c -m -o big.min.js --preamble \"/* big.js v3.2.0 https://github.com/MikeMcl/big.js/LICENCE */\"",
                      "test": "node ./test/every-test.js"
                    },
                    "version": "3.2.0",
                    "readme": "\r\n# big.js #\r\n\r\nA small, fast JavaScript library for arbitrary-precision decimal arithmetic.\r\n\r\nThe little sister to [bignumber.js](https://github.com/MikeMcl/bignumber.js/).\r\nSee also [decimal.js](https://github.com/MikeMcl/decimal.js/), and [here](https://github.com/MikeMcl/big.js/wiki) for the difference between them.\r\n\r\n## Features\r\n\r\n  - Faster, smaller and easier-to-use than JavaScript versions of Java's BigDecimal\r\n  - Only 2.7 KB minified and gzipped\r\n  - Simple API\r\n  - Replicates the `toExponential`, `toFixed` and `toPrecision` methods of JavaScript's Number type\r\n  - Includes a `sqrt` method\r\n  - Stores values in an accessible decimal floating point format\r\n  - No dependencies\r\n  - Comprehensive [documentation](http://mikemcl.github.io/big.js/) and test set\r\n\r\n## Load\r\n\r\nThe library is the single JavaScript file *big.js* (or *big.min.js*, which is *big.js* minified).\r\n\r\nIt can be loaded via a script tag in an HTML document for the browser\r\n\r\n    <script src='./relative/path/to/big.js'></script>\r\n\r\nor as a CommonJS, [Node.js](http://nodejs.org) or AMD module using `require`.\r\n\r\n    var Big = require('big.js');\r\n\r\nFor Node.js, the library is available from the npm registry:\r\n\r\n    $ npm install big.js\r\n\r\n\r\n\r\n## Use\r\n\r\n*In all examples below, `var`, semicolons and `toString` calls are not shown.\r\nIf a commented-out value is in quotes it means `toString` has been called on the preceding expression.*\r\n\r\nThe library exports a single function: Big, the constructor of Big number instances.\r\nIt accepts a value of type Number, String or Big number Object.\r\n\r\n    x = new Big(123.4567)\r\n    y = Big('123456.7e-3')             // 'new' is optional\r\n    z = new Big(x)\r\n    x.eq(y) && x.eq(z) && y.eq(z)      // true\r\n\r\nA Big number is immutable in the sense that it is not changed by its methods.\r\n\r\n    0.3 - 0.1                          // 0.19999999999999998\r\n    x = new Big(0.3)\r\n    x.minus(0.1)                       // \"0.2\"\r\n    x                                  // \"0.3\"\r\n\r\nThe methods that return a Big number can be chained.\r\n\r\n    x.div(y).plus(z).times(9).minus('1.234567801234567e+8').plus(976.54321).div('2598.11772')\r\n    x.sqrt().div(y).pow(3).gt(y.mod(z))    // true\r\n\r\nLike JavaScript's Number type, there are `toExponential`, `toFixed` and `toPrecision` methods.\r\n\r\n    x = new Big(255.5)\r\n    x.toExponential(5)                 // \"2.55500e+2\"\r\n    x.toFixed(5)                       // \"255.50000\"\r\n    x.toPrecision(5)                   // \"255.50\"\r\n\r\nThe maximum number of decimal places and the rounding mode used to round the results of the `div`, `sqrt` and `pow`\r\n(with negative exponent) methods is determined by the value of the `DP` and `RM` properties of the `Big` number constructor.  \r\n\r\nThe other methods always give the exact result.  \r\n\r\n(From *v3.0.0*, multiple Big number constructors can be created, see Change Log below.)\r\n\r\n    Big.DP = 10\r\n    Big.RM = 1\r\n\r\n    x = new Big(2);\r\n    y = new Big(3);\r\n    z = x.div(y)                       // \"0.6666666667\"\r\n    z.sqrt()                           // \"0.8164965809\"\r\n    z.pow(-3)                          // \"3.3749999995\"\r\n    z.times(z)                         // \"0.44444444448888888889\"\r\n    z.times(z).round(10)               // \"0.4444444445\"\r\n\r\n\r\nThe value of a Big number is stored in a decimal floating point format in terms of a coefficient, exponent and sign.\r\n\r\n    x = new Big(-123.456);\r\n    x.c                                // [1,2,3,4,5,6]    coefficient (i.e. significand)\r\n    x.e                                // 2                exponent\r\n    x.s                                // -1               sign\r\n\r\nFor further information see the [API](http://mikemcl.github.io/big.js/) reference from the *doc* folder.\r\n\r\n## Test\r\n\r\nThe *test* directory contains the test scripts for each Big number method.\r\n\r\nThe tests can be run with Node or a browser.\r\n\r\nTo test a single method, from a command-line shell at the *test* directory, use e.g.\r\n\r\n    $ node toFixed\r\n\r\nTo test all the methods\r\n\r\n    $ node every-test\r\n\r\nFor the browser, see *single-test.html* and *every-test.html* in the *test/browser* directory.\r\n\r\n*big-vs-number.html* enables some of the methods of big.js to be compared with those of JavaScript's Number type.\r\n\r\n## Performance\r\n\r\nThe *perf* directory contains two applications and a *lib* directory containing the BigDecimal libraries used by both.\r\n\r\n*big-vs-bigdecimal.html* tests the performance of big.js against the JavaScript translations of two versions of BigDecimal, its use should be more or less self-explanatory.\r\n(The GWT version doesn't work in IE 6.)\r\n\r\n* GWT: java.math.BigDecimal\r\n<https://github.com/iriscouch/bigdecimal.js>\r\n* ICU4J: com.ibm.icu.math.BigDecimal\r\n<https://github.com/dtrebbien/BigDecimal.js>\r\n\r\nThe BigDecimal in Node's npm registry is the GWT version. Despite its seeming popularity I have found it to have some serious bugs, see the Node script *perf/lib/bigdecimal_GWT/bugs.js* for examples of flaws in its *remainder*, *divide* and *compareTo* methods.\r\n\r\n*bigtime.js* is a Node command-line application which tests the performance of big.js against the GWT version of\r\nBigDecimal from the npm registry.\r\n\r\nFor example, to compare the time taken by the big.js `plus` method and the BigDecimal `add` method:\r\n\r\n    $ node bigtime plus 10000 40\r\n\r\nThis will time 10000 calls to each, using operands of up to 40 random digits and will check that the results match.\r\n\r\nFor help:\r\n\r\n    $ node bigtime -h\r\n\r\n## Build\r\n\r\nI.e. minify.\r\n\r\nFor Node, if uglify-js is installed globally ( `npm install uglify-js -g` ) then\r\n\r\n    uglifyjs -o ./big.min.js ./big.js\r\n\r\nwill create *big.min.js*.\r\n\r\nThe *big.min.js* already present was created with *Microsoft Ajax Minifier 5.11*.\r\n\r\n## TypeScript\r\n\r\nThe [DefinitelyTyped](https://github.com/borisyankov/DefinitelyTyped) project has a TypeScript [definitions file](https://github.com/borisyankov/DefinitelyTyped/blob/master/big.js/big.js.d.ts) for big.js.\r\n\r\nThe definitions file can be added to your project via the [big.js.TypeScript.DefinitelyTyped](https://www.nuget.org/packages/big.js.TypeScript.DefinitelyTyped/0.0.1) NuGet package or via [tsd](http://definitelytyped.org/tsd/).\r\n\r\n    tsd query big.js --action install\r\n\r\nAny questions about the TypeScript definitions file should be addressed to the DefinitelyTyped project.\r\n\r\n## Feedback\r\n\r\nFeedback is welcome.\r\n\r\nBugs/comments/questions?\r\nOpen an issue, or email\r\n\r\nMichael\r\n<a href=\"mailto:M8ch88l@gmail.com\">M8ch88l@gmail.com</a>\r\n\r\nBitcoin donation to:\r\n**1DppGRQSjVSMgGxuygDEHQuWEdTiVEzJYG**\r\nThank you\r\n\r\n## Licence\r\n\r\nSee LICENCE.\r\n\r\n## Change Log\r\n\r\n####3.2.0\r\n\r\n* 14/09/17 Aid ES6 import.\r\n\r\n####3.1.3\r\n\r\n* Minor documentation updates.\r\n\r\n####3.1.2\r\n\r\n* README typo.\r\n\r\n####3.1.1\r\n\r\n* API documentation update, including FAQ additions.\r\n\r\n####3.1.0\r\n\r\n* Renamed and exposed `TO_EXP_NEG` and `TO_EXP_POS` as `Big.E_NEG` and\r\n `Big.E_POS`.\r\n\r\n####3.0.2\r\n\r\n* Remove *.npmignore*, use `files` field in *package.json* instead.\r\n\r\n####3.0.1\r\n\r\n* Added `sub`, `add` and `mul` aliases.\r\n* Clean-up after lint.\r\n\r\n####3.0.0\r\n\r\n* 10/12/14 Added [multiple constructor functionality](http://mikemcl.github.io/big.js/#faq).\r\n* No breaking changes or other additions, but a major code reorganisation,\r\n so *v3* seemed appropriate.\r\n\r\n####2.5.2\r\n\r\n* 1/11/14 Added bower.json.\r\n\r\n####2.5.1\r\n\r\n* 8/06/14 Amend README requires.\r\n\r\n####2.5.0\r\n\r\n* 26/01/14 Added `toJSON` method so serialization uses `toString`.\r\n\r\n####2.4.1\r\n\r\n* 17/10/13 Conform signed zero to IEEEE 754 (2008).\r\n\r\n####2.4.0\r\n\r\n* 19/09/13 Throw instances of `Error`.\r\n\r\n####2.3.0\r\n\r\n* 16/09/13 Added `cmp` method.\r\n\r\n####2.2.0\r\n\r\n* 11/07/13 Added 'round up' mode.\r\n\r\n####2.1.0\r\n\r\n* 26/06/13 Allow e.g. `.1` and `2.`.\r\n\r\n####2.0.0\r\n\r\n* 12/05/13 Added `abs` method and replaced `cmp` with `eq`, `gt`, `gte`, `lt`, and `lte` methods.\r\n\r\n####1.0.1\r\n\r\n* Changed default value of MAX_DP to 1E6\r\n\r\n####1.0.0\r\n\r\n* 7/11/2012 Initial release\r\n",
                    "readmeFilename": "README.md",
                    "dependencies": {},
                    "devDependencies": {},
                    "optionalDependencies": {},
                    "_dependencies": {},
                    "path": "/home/srikanth/Srikanth/alfresco/adf-components/node_modules/big.js",
                    "error": "[Circular]",
                    "extraneous": false
                  },
                  "emojis-list": {
                    "_args": [
                      [
                        "emojis-list@2.1.0",
                        "/home/srikanth/Downloads/alfresco-content-app-master"
                      ],
                      [
                        "emojis-list@2.1.0",
                        "/home/srikanth/Srikanth/alfresco/adf-components"
                      ]
                    ],
                    "_from": "emojis-list@2.1.0",
                    "_id": "emojis-list@2.1.0",
                    "_integrity": "sha1-TapNnbAPmBmIDHn6RXrlsJof04k=",
                    "_location": "/emojis-list",
                    "_phantomChildren": {},
                    "_requested": {
                      "type": "version",
                      "registry": true,
                      "raw": "emojis-list@2.1.0",
                      "name": "emojis-list",
                      "escapedName": "emojis-list",
                      "rawSpec": "2.1.0",
                      "saveSpec": "[Circular]",
                      "fetchSpec": "2.1.0"
                    },
                    "_requiredBy": [
                      "/html-webpack-plugin/loader-utils",
                      "/loader-utils"
                    ],
                    "_resolved": "https://registry.npmjs.org/emojis-list/-/emojis-list-2.1.0.tgz",
                    "_spec": "2.1.0",
                    "_where": "/home/srikanth/Srikanth/alfresco/adf-components",
                    "author": {
                      "name": "Kiko Beats",
                      "email": "josefrancisco.verdu@gmail.com",
                      "url": "https://github.com/Kikobeats"
                    },
                    "bugs": {
                      "url": "https://github.com/Kikobeats/emojis-list/issues"
                    },
                    "description": "Complete list of standard emojis.",
                    "devDependencies": {
                      "acho": "latest",
                      "browserify": "latest",
                      "cheerio": "latest",
                      "got": ">=5 <6",
                      "gulp": "latest",
                      "gulp-header": "latest",
                      "gulp-uglify": "latest",
                      "gulp-util": "latest",
                      "standard": "latest",
                      "vinyl-buffer": "latest",
                      "vinyl-source-stream": "latest"
                    },
                    "engines": {
                      "node": ">= 0.10"
                    },
                    "files": [
                      "index.js"
                    ],
                    "homepage": "https://github.com/Kikobeats/emojis-list",
                    "keywords": [
                      "archive",
                      "complete",
                      "emoji",
                      "list",
                      "standard"
                    ],
                    "license": "MIT",
                    "main": "./index.js",
                    "name": "emojis-list",
                    "repository": {
                      "type": "git",
                      "url": "git+https://github.com/kikobeats/emojis-list.git"
                    },
                    "scripts": {
                      "pretest": "standard update.js",
                      "test": "echo 'YOLO'",
                      "update": "node update"
                    },
                    "version": "2.1.0",
                    "readme": "# emojis-list\n\n[![Dependency status](http://img.shields.io/david/Kikobeats/emojis-list.svg?style=flat-square)](https://david-dm.org/Kikobeats/emojis-list)\n[![Dev Dependencies Status](http://img.shields.io/david/dev/Kikobeats/emojis-list.svg?style=flat-square)](https://david-dm.org/Kikobeats/emojis-list#info=devDependencies)\n[![NPM Status](http://img.shields.io/npm/dm/emojis-list.svg?style=flat-square)](https://www.npmjs.org/package/emojis-list)\n[![Donate](https://img.shields.io/badge/donate-paypal-blue.svg?style=flat-square)](https://paypal.me/kikobeats)\n\n> Complete list of standard Unicode Hex Character Code that represent emojis.\n\n**NOTE**: The lists is related with the Unicode Hex Character Code. The representation of the emoji depend of the system. Will be possible that the system don't have all the representations.\n\n## Install\n\n```bash\nnpm install emojis-list --save\n```\n\nIf you want to use in the browser (powered by [Browserify](http://browserify.org/)):\n\n```bash\nbower install emojis-list --save\n```\n\nand later link in your HTML:\n\n```html\n<script src=\"bower_components/emojis-list/dist/emojis-list.js\"></script>\n```\n\n## Usage\n\n```\nvar emojis = require('emojis-list');\nconsole.log(emojis[0]);\n// => 🀄\n```\n\n## Related\n\n* [emojis-unicode](https://github.com/Kikobeats/emojis-unicode) – Complete list of standard Unicode codes that represent emojis.\n* [emojis-keywords](https://github.com/Kikobeats/emojis-keywords) – Complete list of am emoji shortcuts.\n* [is-emoji-keyword](https://github.com/Kikobeats/is-emoji-keyword) – Check if a word is a emoji shortcut.\n* [is-standard-emoji](https://github.com/kikobeats/is-standard-emoji) – Simply way to check if a emoji is a standard emoji.\n* [trim-emoji](https://github.com/Kikobeats/trim-emoji) – Deletes ':' from the begin and the end of an emoji shortcut.\n\n## License\n\nMIT © [Kiko Beats](http://www.kikobeats.com)\n",
                    "readmeFilename": "README.md",
                    "dependencies": {},
                    "optionalDependencies": {},
                    "_dependencies": {},
                    "path": "/home/srikanth/Srikanth/alfresco/adf-components/node_modules/emojis-list",
                    "error": "[Circular]",
                    "extraneous": false
                  },
                  "json5": {
                    "_args": [
                      [
                        "json5@0.5.1",
                        "/home/srikanth/Downloads/alfresco-content-app-master"
                      ],
                      [
                        "json5@0.5.1",
                        "/home/srikanth/Srikanth/alfresco/adf-components"
                      ]
                    ],
                    "_from": "json5@0.5.1",
                    "_id": "json5@0.5.1",
                    "_integrity": "sha1-Hq3nrMASA0rYTiOWdn6tn6VJWCE=",
                    "_location": "/json5",
                    "_phantomChildren": {},
                    "_requested": {
                      "type": "version",
                      "registry": true,
                      "raw": "json5@0.5.1",
                      "name": "json5",
                      "escapedName": "json5",
                      "rawSpec": "0.5.1",
                      "saveSpec": "[Circular]",
                      "fetchSpec": "0.5.1"
                    },
                    "_requiredBy": [
                      "/html-webpack-plugin/loader-utils",
                      "/loader-utils"
                    ],
                    "_resolved": "https://registry.npmjs.org/json5/-/json5-0.5.1.tgz",
                    "_spec": "0.5.1",
                    "_where": "/home/srikanth/Srikanth/alfresco/adf-components",
                    "author": {
                      "name": "Aseem Kishore",
                      "email": "aseem.kishore@gmail.com"
                    },
                    "bin": {
                      "json5": "lib/cli.js"
                    },
                    "bugs": {
                      "url": "https://github.com/aseemk/json5/issues"
                    },
                    "contributors": [
                      {
                        "name": "Max Nanasy",
                        "email": "max.nanasy@gmail.com"
                      },
                      {
                        "name": "Andrew Eisenberg",
                        "email": "andrew@eisenberg.as"
                      },
                      {
                        "name": "Jordan Tucker",
                        "email": "jordanbtucker@gmail.com"
                      }
                    ],
                    "dependencies": {},
                    "description": "JSON for the ES5 era.",
                    "devDependencies": {
                      "gulp": "^3.9.1",
                      "gulp-jshint": "^2.0.1",
                      "jshint": "^2.9.3",
                      "jshint-stylish": "^2.2.1",
                      "mocha": "^3.1.0"
                    },
                    "files": [
                      "lib/"
                    ],
                    "homepage": "http://json5.org/",
                    "keywords": [
                      "json",
                      "es5"
                    ],
                    "license": "MIT",
                    "main": "lib/json5.js",
                    "name": "json5",
                    "repository": {
                      "type": "git",
                      "url": "git+https://github.com/aseemk/json5.git"
                    },
                    "scripts": {
                      "build": "node ./lib/cli.js -c package.json5",
                      "test": "mocha --ui exports --reporter spec"
                    },
                    "version": "0.5.1",
                    "readme": "# JSON5 – Modern JSON\n\n[![Build Status](https://travis-ci.org/json5/json5.svg)](https://travis-ci.org/json5/json5)\n\nJSON is an excellent data format, but we think it can be better.\n\n**JSON5 is a proposed extension to JSON** that aims to make it easier for\n*humans to write and maintain* by hand. It does this by adding some minimal\nsyntax features directly from ECMAScript 5.\n\nJSON5 remains a **strict subset of JavaScript**, adds **no new data types**,\nand **works with all existing JSON content**.\n\nJSON5 is *not* an official successor to JSON, and JSON5 content may *not*\nwork with existing JSON parsers. For this reason, JSON5 files use a new .json5\nextension. *(TODO: new MIME type needed too.)*\n\nThe code here is a **reference JavaScript implementation** for both Node.js\nand all browsers. It’s based directly off of Douglas Crockford’s own [JSON\nimplementation][json_parse.js], and it’s both robust and secure.\n\n\n## Why\n\nJSON isn’t the friendliest to *write*. Keys need to be quoted, objects and\narrays can’t have trailing commas, and comments aren’t allowed — even though\nnone of these are the case with regular JavaScript today.\n\nThat was fine when JSON’s goal was to be a great data format, but JSON’s usage\nhas expanded beyond *machines*. JSON is now used for writing [configs][ex1],\n[manifests][ex2], even [tests][ex3] — all by *humans*.\n\n[ex1]: http://plovr.com/docs.html\n[ex2]: https://www.npmjs.org/doc/files/package.json.html\n[ex3]: http://code.google.com/p/fuzztester/wiki/JSONFileFormat\n\nThere are other formats that are human-friendlier, like YAML, but changing\nfrom JSON to a completely different format is undesirable in many cases.\nJSON5’s aim is to remain close to JSON and JavaScript.\n\n\n## Features\n\nThe following is the exact list of additions to JSON’s syntax introduced by\nJSON5. **All of these are optional**, and **all of these come from ES5**.\n\n### Objects\n\n- Object keys can be unquoted if they’re valid [identifiers][mdn_variables].\n  Yes, even reserved keywords (like `default`) are valid unquoted keys in ES5\n  [[§11.1.5](http://es5.github.com/#x11.1.5), [§7.6](http://es5.github.com/#x7.6)].\n  ([More info](https://mathiasbynens.be/notes/javascript-identifiers))\n\n  *(TODO: Unicode characters and escape sequences aren’t yet supported in this\n  implementation.)*\n  \n- Object keys can also be single-quoted.\n\n- Objects can have trailing commas.\n\n[mdn_variables]: https://developer.mozilla.org/en/Core_JavaScript_1.5_Guide/Core_Language_Features#Variables\n\n### Arrays\n\n- Arrays can have trailing commas.\n\n### Strings\n\n- Strings can be single-quoted.\n\n- Strings can be split across multiple lines; just prefix each newline with a\n  backslash. [ES5 [§7.8.4](http://es5.github.com/#x7.8.4)]\n\n### Numbers\n\n- Numbers can be hexadecimal (base 16).\n\n- Numbers can begin or end with a (leading or trailing) decimal point.\n\n- Numbers can include `Infinity`, `-Infinity`,  `NaN`, and `-NaN`.\n\n- Numbers can begin with an explicit plus sign.\n\n### Comments\n\n- Both inline (single-line) and block (multi-line) comments are allowed.\n\n\n## Example\n\nThe following is a contrived example, but it illustrates most of the features:\n\n```js\n{\n    foo: 'bar',\n    while: true,\n\n    this: 'is a \\\nmulti-line string',\n\n    // this is an inline comment\n    here: 'is another', // inline comment\n\n    /* this is a block comment\n       that continues on another line */\n\n    hex: 0xDEADbeef,\n    half: .5,\n    delta: +10,\n    to: Infinity,   // and beyond!\n\n    finally: 'a trailing comma',\n    oh: [\n        \"we shouldn't forget\",\n        'arrays can have',\n        'trailing commas too',\n    ],\n}\n```\n\nThis implementation’s own [package.json5](package.json5) is more realistic:\n\n```js\n// This file is written in JSON5 syntax, naturally, but npm needs a regular\n// JSON file, so compile via `npm run build`. Be sure to keep both in sync!\n\n{\n    name: 'json5',\n    version: '0.5.0',\n    description: 'JSON for the ES5 era.',\n    keywords: ['json', 'es5'],\n    author: 'Aseem Kishore <aseem.kishore@gmail.com>',\n    contributors: [\n        // TODO: Should we remove this section in favor of GitHub's list?\n        // https://github.com/aseemk/json5/contributors\n        'Max Nanasy <max.nanasy@gmail.com>',\n        'Andrew Eisenberg <andrew@eisenberg.as>',\n        'Jordan Tucker <jordanbtucker@gmail.com>',\n    ],\n    main: 'lib/json5.js',\n    bin: 'lib/cli.js',\n    files: [\"lib/\"],\n    dependencies: {},\n    devDependencies: {\n        gulp: \"^3.9.1\",\n        'gulp-jshint': \"^2.0.0\",\n        jshint: \"^2.9.1\",\n        'jshint-stylish': \"^2.1.0\",\n        mocha: \"^2.4.5\"\n    },\n    scripts: {\n        build: 'node ./lib/cli.js -c package.json5',\n        test: 'mocha --ui exports --reporter spec',\n            // TODO: Would it be better to define these in a mocha.opts file?\n    },\n    homepage: 'http://json5.org/',\n    license: 'MIT',\n    repository: {\n        type: 'git',\n        url: 'https://github.com/aseemk/json5.git',\n    },\n}\n```\n\n\n## Community\n\nJoin the [Google Group](http://groups.google.com/group/json5) if you’re\ninterested in JSON5 news, updates, and general discussion.\nDon’t worry, it’s very low-traffic.\n\nThe [GitHub wiki](https://github.com/aseemk/json5/wiki) is a good place to track\nJSON5 support and usage. Contribute freely there!\n\n[GitHub Issues](https://github.com/aseemk/json5/issues) is the place to\nformally propose feature requests and report bugs. Questions and general\nfeedback are better directed at the Google Group.\n\n\n## Usage\n\nThis JavaScript implementation of JSON5 simply provides a `JSON5` object just\nlike the native ES5 `JSON` object.\n\nTo use from Node:\n\n```sh\nnpm install json5\n```\n\n```js\nvar JSON5 = require('json5');\n```\n\nTo use in the browser (adds the `JSON5` object to the global namespace):\n\n```html\n<script src=\"json5.js\"></script>\n```\n\nThen in both cases, you can simply replace native `JSON` calls with `JSON5`:\n\n```js\nvar obj = JSON5.parse('{unquoted:\"key\",trailing:\"comma\",}');\nvar str = JSON5.stringify(obj);\n```\n\n`JSON5.parse` supports all of the JSON5 features listed above (*TODO: except\nUnicode*), as well as the native [`reviver` argument][json-parse].\n\n[json-parse]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse\n\n`JSON5.stringify` mainly avoids quoting keys where possible, but we hope to\nkeep expanding it in the future (e.g. to also output trailing commas).\nIt supports the native [`replacer` and `space` arguments][json-stringify],\nas well. *(TODO: Any implemented `toJSON` methods aren’t used today.)*\n\n[json-stringify]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\n\n\n### Extras\n\nIf you’re running this on Node, you can also register a JSON5 `require()` hook\nto let you `require()` `.json5` files just like you can `.json` files:\n\n```js\nrequire('json5/lib/require');\nrequire('./path/to/foo');   // tries foo.json5 after foo.js, foo.json, etc.\nrequire('./path/to/bar.json5');\n```\n\nThis module also provides a `json5` executable (requires Node) for converting\nJSON5 files to JSON:\n\n```sh\njson5 -c path/to/foo.json5    # generates path/to/foo.json\n```\n\n\n## Development\n\n```sh\ngit clone git://github.com/aseemk/json5.git\ncd json5\nnpm install\nnpm test\n```\n\nAs the `package.json5` file states, be sure to run `npm run build` on changes\nto `package.json5`, since npm requires `package.json`.\n\nFeel free to [file issues](https://github.com/aseemk/json5/issues) and submit\n[pull requests](https://github.com/aseemk/json5/pulls) — contributions are\nwelcome. If you do submit a pull request, please be sure to add or update the\ntests, and ensure that `npm test` continues to pass.\n\n\n## License\n\nMIT. See [LICENSE.md](./LICENSE.md) for details.\n\n\n## Credits\n\n[Michael Bolin](http://bolinfest.com/) independently arrived at and published\nsome of these same ideas with awesome explanations and detail.\nRecommended reading:\n[Suggested Improvements to JSON](http://bolinfest.com/essays/json.html)\n\n[Douglas Crockford](http://www.crockford.com/) of course designed and built\nJSON, but his state machine diagrams on the [JSON website](http://json.org/),\nas cheesy as it may sound, gave me motivation and confidence that building a\nnew parser to implement these ideas this was within my reach!\nThis code is also modeled directly off of Doug’s open-source [json_parse.js][]\nparser. I’m super grateful for that clean and well-documented code.\n\n[json_parse.js]: https://github.com/douglascrockford/JSON-js/blob/master/json_parse.js\n\n[Max Nanasy](https://github.com/MaxNanasy) has been an early and prolific\nsupporter, contributing multiple patches and ideas. Thanks Max!\n\n[Andrew Eisenberg](https://github.com/aeisenberg) has contributed the\n`stringify` method.\n\n[Jordan Tucker](https://github.com/jordanbtucker) has aligned JSON5 more closely\nwith ES5 and is actively maintaining this project.\n",
                    "readmeFilename": "README.md",
                    "optionalDependencies": {},
                    "_dependencies": {},
                    "path": "/home/srikanth/Srikanth/alfresco/adf-components/node_modules/json5",
                    "error": "[Circular]",
                    "extraneous": false
                  }
                },
                "description": "utils for webpack loaders",
                "devDependencies": {
                  "coveralls": "^2.11.2",
                  "eslint": "^3.15.0",
                  "eslint-plugin-node": "^4.0.1",
                  "istanbul": "^0.3.14",
                  "mocha": "^1.21.4",
                  "standard-version": "^4.0.0"
                },
                "engines": {
                  "node": ">=4.0.0"
                },
                "files": [
                  "lib"
                ],
                "homepage": "https://github.com/webpack/loader-utils#readme",
                "license": "MIT",
                "main": "lib/index.js",
                "name": "loader-utils",
                "repository": {
                  "type": "git",
                  "url": "git+https://github.com/webpack/loader-utils.git"
                },
                "scripts": {
                  "cover": "istanbul cover -x *.runtime.js node_modules/mocha/bin/_mocha",
                  "lint": "eslint lib test",
                  "posttest": "npm run lint",
                  "release": "npm test && standard-version",
                  "test": "mocha",
                  "travis": "npm run cover -- --report lcovonly"
                },
                "version": "1.1.0",
                "readme": "# loader-utils\n\n## Methods\n\n### `getOptions`\n\nRecommended way to retrieve the options of a loader invocation:\n\n```javascript\n// inside your loader\nconst options = loaderUtils.getOptions(this);\n```\n\n1. If `this.query` is a string:\n\t- Tries to parse the query string and returns a new object\n\t- Throws if it's not a valid query string\n2. If `this.query` is object-like, it just returns `this.query`\n3. In any other case, it just returns `null`\n\n**Please note:** The returned `options` object is *read-only*. It may be re-used across multiple invocations.\nIf you pass it on to another library, make sure to make a *deep copy* of it:\n\n```javascript\nconst options = Object.assign(\n\t{},\n\tloaderUtils.getOptions(this), // it is safe to pass null to Object.assign()\n\tdefaultOptions\n);\n// don't forget nested objects or arrays\noptions.obj = Object.assign({}, options.obj); \noptions.arr = options.arr.slice();\nsomeLibrary(options);\n```\n\n[clone-deep](https://www.npmjs.com/package/clone-deep) is a good library to make a deep copy of the options.\n\n#### Options as query strings\n\nIf the loader options have been passed as loader query string (`loader?some&params`), the string is parsed by using [`parseQuery`](#parsequery).\n\n### `parseQuery`\n\nParses a passed string (e.g. `loaderContext.resourceQuery`) as a query string, and returns an object.\n\n``` javascript\nconst params = loaderUtils.parseQuery(this.resourceQuery); // resource: `file?param1=foo`\nif (params.param1 === \"foo\") {\n\t// do something\n}\n```\n\nThe string is parsed like this:\n\n``` text\n                             -> Error\n?                            -> {}\n?flag                        -> { flag: true }\n?+flag                       -> { flag: true }\n?-flag                       -> { flag: false }\n?xyz=test                    -> { xyz: \"test\" }\n?xyz=1                       -> { xyz: \"1\" } // numbers are NOT parsed\n?xyz[]=a                     -> { xyz: [\"a\"] }\n?flag1&flag2                 -> { flag1: true, flag2: true }\n?+flag1,-flag2               -> { flag1: true, flag2: false }\n?xyz[]=a,xyz[]=b             -> { xyz: [\"a\", \"b\"] }\n?a%2C%26b=c%2C%26d           -> { \"a,&b\": \"c,&d\" }\n?{data:{a:1},isJSON5:true}   -> { data: { a: 1 }, isJSON5: true }\n```\n\n### `stringifyRequest`\n\nTurns a request into a string that can be used inside `require()` or `import` while avoiding absolute paths.\nUse it instead of `JSON.stringify(...)` if you're generating code inside a loader.\n\n**Why is this necessary?** Since webpack calculates the hash before module paths are translated into module ids, we must avoid absolute paths to ensure\nconsistent hashes across different compilations.\n\nThis function:\n\n- resolves absolute requests into relative requests if the request and the module are on the same hard drive\n- replaces `\\` with `/` if the request and the module are on the same hard drive\n- won't change the path at all if the request and the module are on different hard drives\n- applies `JSON.stringify` to the result\n\n```javascript\nloaderUtils.stringifyRequest(this, \"./test.js\");\n// \"\\\"./test.js\\\"\"\n\nloaderUtils.stringifyRequest(this, \".\\\\test.js\");\n// \"\\\"./test.js\\\"\"\n\nloaderUtils.stringifyRequest(this, \"test\");\n// \"\\\"test\\\"\"\n\nloaderUtils.stringifyRequest(this, \"test/lib/index.js\");\n// \"\\\"test/lib/index.js\\\"\"\n\nloaderUtils.stringifyRequest(this, \"otherLoader?andConfig!test?someConfig\");\n// \"\\\"otherLoader?andConfig!test?someConfig\\\"\"\n\nloaderUtils.stringifyRequest(this, require.resolve(\"test\"));\n// \"\\\"../node_modules/some-loader/lib/test.js\\\"\"\n\nloaderUtils.stringifyRequest(this, \"C:\\\\module\\\\test.js\");\n// \"\\\"../../test.js\\\"\" (on Windows, in case the module and the request are on the same drive)\n\nloaderUtils.stringifyRequest(this, \"C:\\\\module\\\\test.js\");\n// \"\\\"C:\\\\module\\\\test.js\\\"\" (on Windows, in case the module and the request are on different drives)\n\nloaderUtils.stringifyRequest(this, \"\\\\\\\\network-drive\\\\test.js\");\n// \"\\\"\\\\\\\\network-drive\\\\\\\\test.js\\\"\" (on Windows, in case the module and the request are on different drives)\n```\n\n### `urlToRequest`\n\nConverts some resource URL to a webpack module request.\n\n```javascript\nconst url = \"path/to/module.js\";\nconst request = loaderUtils.urlToRequest(url); // \"./path/to/module.js\"\n```\n\n#### Module URLs\n\nAny URL containing a `~` will be interpreted as a module request. Anything after the `~` will be considered the request path.\n\n```javascript\nconst url = \"~path/to/module.js\";\nconst request = loaderUtils.urlToRequest(url); // \"path/to/module.js\"\n```\n\n#### Root-relative URLs\n\nURLs that are root-relative (start with `/`) can be resolved relative to some arbitrary path by using the `root` parameter:\n\n```javascript\nconst url = \"/path/to/module.js\";\nconst root = \"./root\";\nconst request = loaderUtils.urlToRequest(url, root); // \"./root/path/to/module.js\"\n```\n\nTo convert a root-relative URL into a module URL, specify a `root` value that starts with `~`:\n\n```javascript\nconst url = \"/path/to/module.js\";\nconst root = \"~\";\nconst request = loaderUtils.urlToRequest(url, root); // \"path/to/module.js\"\n```\n\n### `interpolateName`\n\nInterpolates a filename template using multiple placeholders and/or a regular expression.\nThe template and regular expression are set as query params called `name` and `regExp` on the current loader's context.\n\n```javascript\nconst interpolatedName = loaderUtils.interpolateName(loaderContext, name, options);\n```\n\nThe following tokens are replaced in the `name` parameter:\n\n* `[ext]` the extension of the resource\n* `[name]` the basename of the resource\n* `[path]` the path of the resource relative to the `context` query parameter or option.\n* `[folder]` the folder of the resource is in.\n* `[emoji]` a random emoji representation of `options.content`\n* `[emoji:<length>]` same as above, but with a customizable number of emojis\n* `[hash]` the hash of `options.content` (Buffer) (by default it's the hex digest of the md5 hash)\n* `[<hashType>:hash:<digestType>:<length>]` optionally one can configure\n  * other `hashType`s, i. e. `sha1`, `md5`, `sha256`, `sha512`\n  * other `digestType`s, i. e. `hex`, `base26`, `base32`, `base36`, `base49`, `base52`, `base58`, `base62`, `base64`\n  * and `length` the length in chars\n* `[N]` the N-th match obtained from matching the current file name against `options.regExp`\n\nExamples\n\n``` javascript\n// loaderContext.resourcePath = \"/app/js/javascript.js\"\nloaderUtils.interpolateName(loaderContext, \"js/[hash].script.[ext]\", { content: ... });\n// => js/9473fdd0d880a43c21b7778d34872157.script.js\n\n// loaderContext.resourcePath = \"/app/page.html\"\nloaderUtils.interpolateName(loaderContext, \"html-[hash:6].html\", { content: ... });\n// => html-9473fd.html\n\n// loaderContext.resourcePath = \"/app/flash.txt\"\nloaderUtils.interpolateName(loaderContext, \"[hash]\", { content: ... });\n// => c31e9820c001c9c4a86bce33ce43b679\n\n// loaderContext.resourcePath = \"/app/img/image.gif\"\nloaderUtils.interpolateName(loaderContext, \"[emoji]\", { content: ... });\n// => 👍\n\n// loaderContext.resourcePath = \"/app/img/image.gif\"\nloaderUtils.interpolateName(loaderContext, \"[emoji:4]\", { content: ... });\n// => 🙍🏢📤🐝\n\n// loaderContext.resourcePath = \"/app/img/image.png\"\nloaderUtils.interpolateName(loaderContext, \"[sha512:hash:base64:7].[ext]\", { content: ... });\n// => 2BKDTjl.png\n// use sha512 hash instead of md5 and with only 7 chars of base64\n\n// loaderContext.resourcePath = \"/app/img/myself.png\"\n// loaderContext.query.name =\nloaderUtils.interpolateName(loaderContext, \"picture.png\");\n// => picture.png\n\n// loaderContext.resourcePath = \"/app/dir/file.png\"\nloaderUtils.interpolateName(loaderContext, \"[path][name].[ext]?[hash]\", { content: ... });\n// => /app/dir/file.png?9473fdd0d880a43c21b7778d34872157\n\n// loaderContext.resourcePath = \"/app/js/page-home.js\"\nloaderUtils.interpolateName(loaderContext, \"script-[1].[ext]\", { regExp: \"page-(.*)\\\\.js\", content: ... });\n// => script-home.js\n```\n\n### `getHashDigest`\n\n``` javascript\nconst digestString = loaderUtils.getHashDigest(buffer, hashType, digestType, maxLength);\n```\n\n* `buffer` the content that should be hashed\n* `hashType` one of `sha1`, `md5`, `sha256`, `sha512` or any other node.js supported hash type\n* `digestType` one of `hex`, `base26`, `base32`, `base36`, `base49`, `base52`, `base58`, `base62`, `base64`\n* `maxLength` the maximum length in chars\n\n## License\n\nMIT (http://www.opensource.org/licenses/mit-license.php)\n",
                "readmeFilename": "README.md",
                "optionalDependencies": {},
                "_dependencies": {
                  "big.js": "^3.1.3",
                  "emojis-list": "^2.0.0",
                  "json5": "^0.5.0"
                },
                "path": "/home/srikanth/Srikanth/alfresco/adf-components/node_modules/loader-utils",
                "error": "[Circular]",
                "extraneous": false
              },
              "schema-utils": {
                "_args": [
                  [
                    "schema-utils@0.4.5",
                    "/home/srikanth/Downloads/alfresco-content-app-master"
                  ],
                  [
                    "schema-utils@0.4.5",
                    "/home/srikanth/Srikanth/alfresco/adf-components"
                  ]
                ],
                "_from": "schema-utils@0.4.5",
                "_id": "schema-utils@0.4.5",
                "_integrity": "sha512-yYrjb9TX2k/J1Y5UNy3KYdZq10xhYcF8nMpAW6o3hy6Q8WSIEf9lJHG/ePnOBfziPM3fvQwfOwa13U/Fh8qTfA==",
                "_location": "/schema-utils",
                "_phantomChildren": {},
                "_requested": {
                  "type": "version",
                  "registry": true,
                  "raw": "schema-utils@0.4.5",
                  "name": "schema-utils",
                  "escapedName": "schema-utils",
                  "rawSpec": "0.4.5",
                  "saveSpec": "[Circular]",
                  "fetchSpec": "0.4.5"
                },
                "_requiredBy": [
                  "/file-loader",
                  "/postcss-loader",
                  "/style-loader",
                  "/uglifyjs-webpack-plugin",
                  "/webpack",
                  "/worker-loader"
                ],
                "_resolved": "https://registry.npmjs.org/schema-utils/-/schema-utils-0.4.5.tgz",
                "_spec": "0.4.5",
                "_where": "/home/srikanth/Srikanth/alfresco/adf-components",
                "author": {
                  "name": "Webpack Contrib",
                  "url": "https://github.com/webpack-contrib"
                },
                "bugs": {
                  "url": "https://github.com/webpack-contrib/schema-utils/issues"
                },
                "dependencies": {
                  "ajv": {
                    "_args": [
                      [
                        "ajv@6.5.2",
                        "/home/srikanth/Downloads/alfresco-content-app-master"
                      ],
                      [
                        "ajv@6.5.2",
                        "/home/srikanth/Srikanth/alfresco/adf-components"
                      ]
                    ],
                    "_from": "ajv@6.5.2",
                    "_id": "ajv@6.5.2",
                    "_integrity": "sha512-hOs7GfvI6tUI1LfZddH82ky6mOMyTuY0mk7kE2pWpmhhUSkumzaTO5vbVwij39MdwPQWCV4Zv57Eo06NtL/GVA==",
                    "_location": "/ajv",
                    "_phantomChildren": {},
                    "_requested": {
                      "type": "version",
                      "registry": true,
                      "raw": "ajv@6.5.2",
                      "name": "ajv",
                      "escapedName": "ajv",
                      "rawSpec": "6.5.2",
                      "saveSpec": "[Circular]",
                      "fetchSpec": "6.5.2"
                    },
                    "_requiredBy": [
                      "/mini-css-extract-plugin/schema-utils",
                      "/schema-utils",
                      "/url-loader/schema-utils",
                      "/webpack",
                      "/webpack-dev-server/schema-utils"
                    ],
                    "_resolved": "https://registry.npmjs.org/ajv/-/ajv-6.5.2.tgz",
                    "_spec": "6.5.2",
                    "_where": "/home/srikanth/Srikanth/alfresco/adf-components",
                    "author": {
                      "name": "Evgeny Poberezkin"
                    },
                    "bugs": {
                      "url": "https://github.com/epoberezkin/ajv/issues"
                    },
                    "dependencies": {
                      "fast-deep-equal": {
                        "_args": [
                          [
                            "fast-deep-equal@2.0.1",
                            "/home/srikanth/Downloads/alfresco-content-app-master"
                          ],
                          [
                            "fast-deep-equal@2.0.1",
                            "/home/srikanth/Srikanth/alfresco/adf-components"
                          ]
                        ],
                        "_from": "fast-deep-equal@2.0.1",
                        "_id": "fast-deep-equal@2.0.1",
                        "_integrity": "sha1-ewUhjd+WZ79/Nwv3/bLLFf3Qqkk=",
                        "_location": "/fast-deep-equal",
                        "_phantomChildren": {},
                        "_requested": {
                          "type": "version",
                          "registry": true,
                          "raw": "fast-deep-equal@2.0.1",
                          "name": "fast-deep-equal",
                          "escapedName": "fast-deep-equal",
                          "rawSpec": "2.0.1",
                          "saveSpec": "[Circular]",
                          "fetchSpec": "2.0.1"
                        },
                        "_requiredBy": [
                          "/ajv"
                        ],
                        "_resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-2.0.1.tgz",
                        "_spec": "2.0.1",
                        "_where": "/home/srikanth/Srikanth/alfresco/adf-components",
                        "author": {
                          "name": "Evgeny Poberezkin"
                        },
                        "bugs": {
                          "url": "https://github.com/epoberezkin/fast-deep-equal/issues"
                        },
                        "description": "Fast deep equal",
                        "devDependencies": {
                          "benchmark": "^2.1.4",
                          "coveralls": "^2.13.1",
                          "deep-eql": "latest",
                          "deep-equal": "latest",
                          "eslint": "^4.0.0",
                          "lodash": "latest",
                          "mocha": "^3.4.2",
                          "nano-equal": "latest",
                          "nyc": "^11.0.2",
                          "pre-commit": "^1.2.2",
                          "ramda": "latest",
                          "shallow-equal-fuzzy": "latest",
                          "typescript": "^2.6.1",
                          "underscore": "latest"
                        },
                        "files": [
                          "index.js",
                          "index.d.ts"
                        ],
                        "homepage": "https://github.com/epoberezkin/fast-deep-equal#readme",
                        "keywords": [
                          "fast",
                          "equal",
                          "deep-equal"
                        ],
                        "license": "MIT",
                        "main": "index.js",
                        "name": "fast-deep-equal",
                        "nyc": {
                          "exclude": [
                            "**/spec/**",
                            "node_modules"
                          ],
                          "reporter": [
                            "lcov",
                            "text-summary"
                          ]
                        },
                        "repository": {
                          "type": "git",
                          "url": "git+https://github.com/epoberezkin/fast-deep-equal.git"
                        },
                        "scripts": {
                          "eslint": "eslint *.js benchmark spec",
                          "test": "npm run eslint && npm run test-ts && npm run test-cov",
                          "test-cov": "nyc npm run test-spec",
                          "test-spec": "mocha spec/*.spec.js -R spec",
                          "test-ts": "tsc --target ES5 --noImplicitAny index.d.ts"
                        },
                        "types": "index.d.ts",
                        "version": "2.0.1",
                        "readme": "# fast-deep-equal\nThe fastest deep equal\n\n[![Build Status](https://travis-ci.org/epoberezkin/fast-deep-equal.svg?branch=master)](https://travis-ci.org/epoberezkin/fast-deep-equal)\n[![npm version](https://badge.fury.io/js/fast-deep-equal.svg)](http://badge.fury.io/js/fast-deep-equal)\n[![Coverage Status](https://coveralls.io/repos/github/epoberezkin/fast-deep-equal/badge.svg?branch=master)](https://coveralls.io/github/epoberezkin/fast-deep-equal?branch=master)\n\n\n## Install\n\n```bash\nnpm install fast-deep-equal\n```\n\n\n## Features\n\n- ES5 compatible\n- works in node.js (0.10+) and browsers (IE9+)\n- checks equality of Date and RegExp objects by value.\n\n\n## Usage\n\n```javascript\nvar equal = require('fast-deep-equal');\nconsole.log(equal({foo: 'bar'}, {foo: 'bar'})); // true\n```\n\n\n## Performance benchmark\n\nNode.js v9.11.1:\n\n```\nfast-deep-equal x 226,960 ops/sec ±1.55% (86 runs sampled)\nnano-equal x 218,210 ops/sec ±0.79% (89 runs sampled)\nshallow-equal-fuzzy x 206,762 ops/sec ±0.84% (88 runs sampled)\nunderscore.isEqual x 128,668 ops/sec ±0.75% (91 runs sampled)\nlodash.isEqual x 44,895 ops/sec ±0.67% (85 runs sampled)\ndeep-equal x 51,616 ops/sec ±0.96% (90 runs sampled)\ndeep-eql x 28,218 ops/sec ±0.42% (85 runs sampled)\nassert.deepStrictEqual x 1,777 ops/sec ±1.05% (86 runs sampled)\nramda.equals x 13,466 ops/sec ±0.82% (86 runs sampled)\nThe fastest is fast-deep-equal\n```\n\nTo run benchmark (requires node.js 6+):\n\n```bash\nnpm install\nnode benchmark\n```\n\n\n## License\n\n[MIT](https://github.com/epoberezkin/fast-deep-equal/blob/master/LICENSE)\n",
                        "readmeFilename": "README.md",
                        "dependencies": {},
                        "optionalDependencies": {},
                        "_dependencies": {},
                        "path": "/home/srikanth/Srikanth/alfresco/adf-components/node_modules/fast-deep-equal",
                        "error": "[Circular]",
                        "extraneous": false
                      },
                      "fast-json-stable-stringify": {
                        "_args": [
                          [
                            "fast-json-stable-stringify@2.0.0",
                            "/home/srikanth/Downloads/alfresco-content-app-master"
                          ],
                          [
                            "fast-json-stable-stringify@2.0.0",
                            "/home/srikanth/Srikanth/alfresco/adf-components"
                          ]
                        ],
                        "_from": "fast-json-stable-stringify@2.0.0",
                        "_id": "fast-json-stable-stringify@2.0.0",
                        "_integrity": "sha1-1RQsDK7msRifh9OnYREGT4bIu/I=",
                        "_location": "/fast-json-stable-stringify",
                        "_phantomChildren": {},
                        "_requested": {
                          "type": "version",
                          "registry": true,
                          "raw": "fast-json-stable-stringify@2.0.0",
                          "name": "fast-json-stable-stringify",
                          "escapedName": "fast-json-stable-stringify",
                          "rawSpec": "2.0.0",
                          "saveSpec": "[Circular]",
                          "fetchSpec": "2.0.0"
                        },
                        "_requiredBy": [
                          "/@angular-devkit/build-angular/ajv",
                          "/@angular-devkit/core/ajv",
                          "/@angular-devkit/schematics/ajv",
                          "/@angular/cli/ajv",
                          "/@schematics/angular/ajv",
                          "/@schematics/update/ajv",
                          "/ajv",
                          "/har-validator/ajv",
                          "/istanbul-instrumenter-loader/ajv",
                          "/less/ajv",
                          "/request/ajv"
                        ],
                        "_resolved": "https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.0.0.tgz",
                        "_spec": "2.0.0",
                        "_where": "/home/srikanth/Srikanth/alfresco/adf-components",
                        "author": {
                          "name": "James Halliday",
                          "email": "mail@substack.net",
                          "url": "http://substack.net"
                        },
                        "bugs": {
                          "url": "https://github.com/epoberezkin/fast-json-stable-stringify/issues"
                        },
                        "description": "deterministic `JSON.stringify()` - a faster version of substack's json-stable-strigify without jsonify",
                        "devDependencies": {
                          "benchmark": "^2.1.4",
                          "coveralls": "^3.0.0",
                          "eslint": "^4.9.0",
                          "fast-stable-stringify": "latest",
                          "faster-stable-stringify": "latest",
                          "json-stable-stringify": "latest",
                          "nyc": "^11.2.1",
                          "pre-commit": "^1.2.2",
                          "tape": "~1.0.4"
                        },
                        "homepage": "https://github.com/epoberezkin/fast-json-stable-stringify",
                        "keywords": [
                          "json",
                          "stringify",
                          "deterministic",
                          "hash",
                          "stable"
                        ],
                        "license": "MIT",
                        "main": "index.js",
                        "name": "fast-json-stable-stringify",
                        "nyc": {
                          "exclude": [
                            "test",
                            "node_modules"
                          ],
                          "reporter": [
                            "lcov",
                            "text-summary"
                          ]
                        },
                        "repository": {
                          "type": "git",
                          "url": "git://github.com/epoberezkin/fast-json-stable-stringify.git"
                        },
                        "scripts": {
                          "eslint": "eslint index.js test",
                          "test": "npm run eslint && nyc npm run test-spec",
                          "test-spec": "tape test/*.js"
                        },
                        "version": "2.0.0",
                        "readme": "# fast-json-stable-stringify\n\nDeterministic `JSON.stringify()` - a faster version of [@substack](https://github.com/substack)'s json-stable-strigify without [jsonify](https://github.com/substack/jsonify).\n\nYou can also pass in a custom comparison function.\n\n[![Build Status](https://travis-ci.org/epoberezkin/fast-json-stable-stringify.svg?branch=master)](https://travis-ci.org/epoberezkin/fast-json-stable-stringify)\n[![Coverage Status](https://coveralls.io/repos/github/epoberezkin/fast-json-stable-stringify/badge.svg?branch=master)](https://coveralls.io/github/epoberezkin/fast-json-stable-stringify?branch=master)\n\n# example\n\n``` js\nvar stringify = require('fast-json-stable-stringify');\nvar obj = { c: 8, b: [{z:6,y:5,x:4},7], a: 3 };\nconsole.log(stringify(obj));\n```\n\noutput:\n\n```\n{\"a\":3,\"b\":[{\"x\":4,\"y\":5,\"z\":6},7],\"c\":8}\n```\n\n\n# methods\n\n``` js\nvar stringify = require('fast-json-stable-stringify')\n```\n\n## var str = stringify(obj, opts)\n\nReturn a deterministic stringified string `str` from the object `obj`.\n\n\n## options\n\n### cmp\n\nIf `opts` is given, you can supply an `opts.cmp` to have a custom comparison\nfunction for object keys. Your function `opts.cmp` is called with these\nparameters:\n\n``` js\nopts.cmp({ key: akey, value: avalue }, { key: bkey, value: bvalue })\n```\n\nFor example, to sort on the object key names in reverse order you could write:\n\n``` js\nvar stringify = require('fast-json-stable-stringify');\n\nvar obj = { c: 8, b: [{z:6,y:5,x:4},7], a: 3 };\nvar s = stringify(obj, function (a, b) {\n    return a.key < b.key ? 1 : -1;\n});\nconsole.log(s);\n```\n\nwhich results in the output string:\n\n```\n{\"c\":8,\"b\":[{\"z\":6,\"y\":5,\"x\":4},7],\"a\":3}\n```\n\nOr if you wanted to sort on the object values in reverse order, you could write:\n\n```\nvar stringify = require('fast-json-stable-stringify');\n\nvar obj = { d: 6, c: 5, b: [{z:3,y:2,x:1},9], a: 10 };\nvar s = stringify(obj, function (a, b) {\n    return a.value < b.value ? 1 : -1;\n});\nconsole.log(s);\n```\n\nwhich outputs:\n\n```\n{\"d\":6,\"c\":5,\"b\":[{\"z\":3,\"y\":2,\"x\":1},9],\"a\":10}\n```\n\n### cycles\n\nPass `true` in `opts.cycles` to stringify circular property as `__cycle__` - the result will not be a valid JSON string in this case.\n\nTypeError will be thrown in case of circular object without this option.\n\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install fast-json-stable-stringify\n```\n\n\n# benchmark\n\nTo run benchmark (requires Node.js 6+):\n```\nnode benchmark\n```\n\nResults:\n```\nfast-json-stable-stringify x 17,189 ops/sec ±1.43% (83 runs sampled)\njson-stable-stringify x 13,634 ops/sec ±1.39% (85 runs sampled)\nfast-stable-stringify x 20,212 ops/sec ±1.20% (84 runs sampled)\nfaster-stable-stringify x 15,549 ops/sec ±1.12% (84 runs sampled)\nThe fastest is fast-stable-stringify\n```\n\n\n# license\n\n[MIT](https://github.com/epoberezkin/fast-json-stable-stringify/blob/master/LICENSE)\n",
                        "readmeFilename": "README.md",
                        "dependencies": {},
                        "optionalDependencies": {},
                        "_dependencies": {},
                        "path": "/home/srikanth/Srikanth/alfresco/adf-components/node_modules/fast-json-stable-stringify",
                        "error": "[Circular]",
                        "extraneous": false
                      },
                      "json-schema-traverse": {
                        "_args": [
                          [
                            "json-schema-traverse@0.4.1",
                            "/home/srikanth/Downloads/alfresco-content-app-master"
                          ],
                          [
                            "json-schema-traverse@0.4.1",
                            "/home/srikanth/Srikanth/alfresco/adf-components"
                          ]
                        ],
                        "_from": "json-schema-traverse@0.4.1",
                        "_id": "json-schema-traverse@0.4.1",
                        "_integrity": "sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==",
                        "_location": "/json-schema-traverse",
                        "_phantomChildren": {},
                        "_requested": {
                          "type": "version",
                          "registry": true,
                          "raw": "json-schema-traverse@0.4.1",
                          "name": "json-schema-traverse",
                          "escapedName": "json-schema-traverse",
                          "rawSpec": "0.4.1",
                          "saveSpec": "[Circular]",
                          "fetchSpec": "0.4.1"
                        },
                        "_requiredBy": [
                          "/@angular/cli",
                          "/ajv"
                        ],
                        "_resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz",
                        "_spec": "0.4.1",
                        "_where": "/home/srikanth/Srikanth/alfresco/adf-components",
                        "author": {
                          "name": "Evgeny Poberezkin"
                        },
                        "bugs": {
                          "url": "https://github.com/epoberezkin/json-schema-traverse/issues"
                        },
                        "description": "Traverse JSON Schema passing each schema object to callback",
                        "devDependencies": {
                          "coveralls": "^2.13.1",
                          "eslint": "^3.19.0",
                          "mocha": "^3.4.2",
                          "nyc": "^11.0.2",
                          "pre-commit": "^1.2.2"
                        },
                        "homepage": "https://github.com/epoberezkin/json-schema-traverse#readme",
                        "keywords": [
                          "JSON-Schema",
                          "traverse",
                          "iterate"
                        ],
                        "license": "MIT",
                        "main": "index.js",
                        "name": "json-schema-traverse",
                        "nyc": {
                          "exclude": [
                            "**/spec/**",
                            "node_modules"
                          ],
                          "reporter": [
                            "lcov",
                            "text-summary"
                          ]
                        },
                        "repository": {
                          "type": "git",
                          "url": "git+https://github.com/epoberezkin/json-schema-traverse.git"
                        },
                        "scripts": {
                          "eslint": "eslint index.js spec",
                          "test": "npm run eslint && nyc npm run test-spec",
                          "test-spec": "mocha spec -R spec"
                        },
                        "version": "0.4.1",
                        "readme": "# json-schema-traverse\nTraverse JSON Schema passing each schema object to callback\n\n[![Build Status](https://travis-ci.org/epoberezkin/json-schema-traverse.svg?branch=master)](https://travis-ci.org/epoberezkin/json-schema-traverse)\n[![npm version](https://badge.fury.io/js/json-schema-traverse.svg)](https://www.npmjs.com/package/json-schema-traverse)\n[![Coverage Status](https://coveralls.io/repos/github/epoberezkin/json-schema-traverse/badge.svg?branch=master)](https://coveralls.io/github/epoberezkin/json-schema-traverse?branch=master)\n\n\n## Install\n\n```\nnpm install json-schema-traverse\n```\n\n\n## Usage\n\n```javascript\nconst traverse = require('json-schema-traverse');\nconst schema = {\n  properties: {\n    foo: {type: 'string'},\n    bar: {type: 'integer'}\n  }\n};\n\ntraverse(schema, {cb});\n// cb is called 3 times with:\n// 1. root schema\n// 2. {type: 'string'}\n// 3. {type: 'integer'}\n\n// Or:\n\ntraverse(schema, {cb: {pre, post}});\n// pre is called 3 times with:\n// 1. root schema\n// 2. {type: 'string'}\n// 3. {type: 'integer'}\n//\n// post is called 3 times with:\n// 1. {type: 'string'}\n// 2. {type: 'integer'}\n// 3. root schema\n\n```\n\nCallback function `cb` is called for each schema object (not including draft-06 boolean schemas), including the root schema, in pre-order traversal. Schema references ($ref) are not resolved, they are passed as is.  Alternatively, you can pass a `{pre, post}` object as `cb`, and then `pre` will be called before traversing child elements, and `post` will be called after all child elements have been traversed.\n\nCallback is passed these parameters:\n\n- _schema_: the current schema object\n- _JSON pointer_: from the root schema to the current schema object\n- _root schema_: the schema passed to `traverse` object\n- _parent JSON pointer_: from the root schema to the parent schema object (see below)\n- _parent keyword_: the keyword inside which this schema appears (e.g. `properties`, `anyOf`, etc.)\n- _parent schema_: not necessarily parent object/array; in the example above the parent schema for `{type: 'string'}` is the root schema\n- _index/property_: index or property name in the array/object containing multiple schemas; in the example above for `{type: 'string'}` the property name is `'foo'`\n\n\n## Traverse objects in all unknown keywords\n\n```javascript\nconst traverse = require('json-schema-traverse');\nconst schema = {\n  mySchema: {\n    minimum: 1,\n    maximum: 2\n  }\n};\n\ntraverse(schema, {allKeys: true, cb});\n// cb is called 2 times with:\n// 1. root schema\n// 2. mySchema\n```\n\nWithout option `allKeys: true` callback will be called only with root schema.\n\n\n## License\n\n[MIT](https://github.com/epoberezkin/json-schema-traverse/blob/master/LICENSE)\n",
                        "readmeFilename": "README.md",
                        "dependencies": {},
                        "optionalDependencies": {},
                        "_dependencies": {},
                        "path": "/home/srikanth/Srikanth/alfresco/adf-components/node_modules/json-schema-traverse",
                        "error": "[Circular]",
                        "extraneous": false
                      },
                      "uri-js": {
                        "_args": [
                          [
                            "uri-js@4.2.2",
                            "/home/srikanth/Downloads/alfresco-content-app-master"
                          ],
                          [
                            "uri-js@4.2.2",
                            "/home/srikanth/Srikanth/alfresco/adf-components"
                          ]
                        ],
                        "_from": "uri-js@4.2.2",
                        "_id": "uri-js@4.2.2",
                        "_integrity": "sha512-KY9Frmirql91X2Qgjry0Wd4Y+YTdrdZheS8TFwvkbLWf/G5KNJDCh6pKL5OZctEW4+0Baa5idK2ZQuELRwPznQ==",
                        "_location": "/uri-js",
                        "_phantomChildren": {},
                        "_requested": {
                          "type": "version",
                          "registry": true,
                          "raw": "uri-js@4.2.2",
                          "name": "uri-js",
                          "escapedName": "uri-js",
                          "rawSpec": "4.2.2",
                          "saveSpec": "[Circular]",
                          "fetchSpec": "4.2.2"
                        },
                        "_requiredBy": [
                          "/ajv"
                        ],
                        "_resolved": "https://registry.npmjs.org/uri-js/-/uri-js-4.2.2.tgz",
                        "_spec": "4.2.2",
                        "_where": "/home/srikanth/Srikanth/alfresco/adf-components",
                        "author": {
                          "name": "Gary Court",
                          "email": "gary.court@gmail.com"
                        },
                        "bugs": {
                          "url": "https://github.com/garycourt/uri-js/issues"
                        },
                        "dependencies": {
                          "punycode": {
                            "_args": [
                              [
                                "punycode@2.1.1",
                                "/home/srikanth/Downloads/alfresco-content-app-master"
                              ],
                              [
                                "punycode@2.1.1",
                                "/home/srikanth/Srikanth/alfresco/adf-components"
                              ]
                            ],
                            "_from": "punycode@2.1.1",
                            "_id": "punycode@2.1.1",
                            "_integrity": "sha512-XRsRjdf+j5ml+y/6GKHPZbrF/8p2Yga0JPtdqTIY2Xe5ohJPD9saDJJLPvp9+NSBprVvevdXZybnj2cv8OEd0A==",
                            "_location": "/punycode",
                            "_phantomChildren": {},
                            "_requested": {
                              "type": "version",
                              "registry": true,
                              "raw": "punycode@2.1.1",
                              "name": "punycode",
                              "escapedName": "punycode",
                              "rawSpec": "2.1.1",
                              "saveSpec": "[Circular]",
                              "fetchSpec": "2.1.1"
                            },
                            "_requiredBy": [
                              "/@angular-devkit/build-angular/uri-js",
                              "/@angular-devkit/core/uri-js",
                              "/@angular-devkit/schematics/uri-js",
                              "/@angular/cli/uri-js",
                              "/@schematics/angular/uri-js",
                              "/@schematics/update/uri-js",
                              "/isemail",
                              "/uri-js"
                            ],
                            "_resolved": "https://registry.npmjs.org/punycode/-/punycode-2.1.1.tgz",
                            "_spec": "2.1.1",
                            "_where": "/home/srikanth/Srikanth/alfresco/adf-components",
                            "author": {
                              "name": "Mathias Bynens",
                              "url": "https://mathiasbynens.be/"
                            },
                            "bugs": {
                              "url": "https://github.com/bestiejs/punycode.js/issues"
                            },
                            "contributors": [
                              {
                                "name": "Mathias Bynens",
                                "url": "https://mathiasbynens.be/"
                              }
                            ],
                            "description": "A robust Punycode converter that fully complies to RFC 3492 and RFC 5891, and works on nearly all JavaScript platforms.",
                            "devDependencies": {
                              "codecov": "^1.0.1",
                              "istanbul": "^0.4.1",
                              "mocha": "^2.5.3"
                            },
                            "engines": {
                              "node": ">=6"
                            },
                            "files": [
                              "LICENSE-MIT.txt",
                              "punycode.js",
                              "punycode.es6.js"
                            ],
                            "homepage": "https://mths.be/punycode",
                            "jsnext:main": "punycode.es6.js",
                            "jspm": {
                              "map": {
                                "./punycode.js": {
                                  "node": "@node/punycode"
                                }
                              }
                            },
                            "keywords": [
                              "punycode",
                              "unicode",
                              "idn",
                              "idna",
                              "dns",
                              "url",
                              "domain"
                            ],
                            "license": "MIT",
                            "main": "punycode.js",
                            "module": "punycode.es6.js",
                            "name": "punycode",
                            "repository": {
                              "type": "git",
                              "url": "git+https://github.com/bestiejs/punycode.js.git"
                            },
                            "scripts": {
                              "prepublish": "node scripts/prepublish.js",
                              "test": "mocha tests"
                            },
                            "version": "2.1.1",
                            "readme": "# Punycode.js [![Build status](https://travis-ci.org/bestiejs/punycode.js.svg?branch=master)](https://travis-ci.org/bestiejs/punycode.js) [![Code coverage status](http://img.shields.io/codecov/c/github/bestiejs/punycode.js.svg)](https://codecov.io/gh/bestiejs/punycode.js) [![Dependency status](https://gemnasium.com/bestiejs/punycode.js.svg)](https://gemnasium.com/bestiejs/punycode.js)\n\nPunycode.js is a robust Punycode converter that fully complies to [RFC 3492](https://tools.ietf.org/html/rfc3492) and [RFC 5891](https://tools.ietf.org/html/rfc5891).\n\nThis JavaScript library is the result of comparing, optimizing and documenting different open-source implementations of the Punycode algorithm:\n\n* [The C example code from RFC 3492](https://tools.ietf.org/html/rfc3492#appendix-C)\n* [`punycode.c` by _Markus W. Scherer_ (IBM)](http://opensource.apple.com/source/ICU/ICU-400.42/icuSources/common/punycode.c)\n* [`punycode.c` by _Ben Noordhuis_](https://github.com/bnoordhuis/punycode/blob/master/punycode.c)\n* [JavaScript implementation by _some_](http://stackoverflow.com/questions/183485/can-anyone-recommend-a-good-free-javascript-for-punycode-to-unicode-conversion/301287#301287)\n* [`punycode.js` by _Ben Noordhuis_](https://github.com/joyent/node/blob/426298c8c1c0d5b5224ac3658c41e7c2a3fe9377/lib/punycode.js) (note: [not fully compliant](https://github.com/joyent/node/issues/2072))\n\nThis project was [bundled](https://github.com/joyent/node/blob/master/lib/punycode.js) with Node.js from [v0.6.2+](https://github.com/joyent/node/compare/975f1930b1...61e796decc) until [v7](https://github.com/nodejs/node/pull/7941) (soft-deprecated).\n\nThe current version supports recent versions of Node.js only. It provides a CommonJS module and an ES6 module. For the old version that offers the same functionality with broader support, including Rhino, Ringo, Narwhal, and web browsers, see [v1.4.1](https://github.com/bestiejs/punycode.js/releases/tag/v1.4.1).\n\n## Installation\n\nVia [npm](https://www.npmjs.com/):\n\n```bash\nnpm install punycode --save\n```\n\nIn [Node.js](https://nodejs.org/):\n\n```js\nconst punycode = require('punycode');\n```\n\n## API\n\n### `punycode.decode(string)`\n\nConverts a Punycode string of ASCII symbols to a string of Unicode symbols.\n\n```js\n// decode domain name parts\npunycode.decode('maana-pta'); // 'mañana'\npunycode.decode('--dqo34k'); // '☃-⌘'\n```\n\n### `punycode.encode(string)`\n\nConverts a string of Unicode symbols to a Punycode string of ASCII symbols.\n\n```js\n// encode domain name parts\npunycode.encode('mañana'); // 'maana-pta'\npunycode.encode('☃-⌘'); // '--dqo34k'\n```\n\n### `punycode.toUnicode(input)`\n\nConverts a Punycode string representing a domain name or an email address to Unicode. Only the Punycoded parts of the input will be converted, i.e. it doesn’t matter if you call it on a string that has already been converted to Unicode.\n\n```js\n// decode domain names\npunycode.toUnicode('xn--maana-pta.com');\n// → 'mañana.com'\npunycode.toUnicode('xn----dqo34k.com');\n// → '☃-⌘.com'\n\n// decode email addresses\npunycode.toUnicode('джумла@xn--p-8sbkgc5ag7bhce.xn--ba-lmcq');\n// → 'джумла@джpумлатест.bрфa'\n```\n\n### `punycode.toASCII(input)`\n\nConverts a lowercased Unicode string representing a domain name or an email address to Punycode. Only the non-ASCII parts of the input will be converted, i.e. it doesn’t matter if you call it with a domain that’s already in ASCII.\n\n```js\n// encode domain names\npunycode.toASCII('mañana.com');\n// → 'xn--maana-pta.com'\npunycode.toASCII('☃-⌘.com');\n// → 'xn----dqo34k.com'\n\n// encode email addresses\npunycode.toASCII('джумла@джpумлатест.bрфa');\n// → 'джумла@xn--p-8sbkgc5ag7bhce.xn--ba-lmcq'\n```\n\n### `punycode.ucs2`\n\n#### `punycode.ucs2.decode(string)`\n\nCreates an array containing the numeric code point values of each Unicode symbol in the string. While [JavaScript uses UCS-2 internally](https://mathiasbynens.be/notes/javascript-encoding), this function will convert a pair of surrogate halves (each of which UCS-2 exposes as separate characters) into a single code point, matching UTF-16.\n\n```js\npunycode.ucs2.decode('abc');\n// → [0x61, 0x62, 0x63]\n// surrogate pair for U+1D306 TETRAGRAM FOR CENTRE:\npunycode.ucs2.decode('\\uD834\\uDF06');\n// → [0x1D306]\n```\n\n#### `punycode.ucs2.encode(codePoints)`\n\nCreates a string based on an array of numeric code point values.\n\n```js\npunycode.ucs2.encode([0x61, 0x62, 0x63]);\n// → 'abc'\npunycode.ucs2.encode([0x1D306]);\n// → '\\uD834\\uDF06'\n```\n\n### `punycode.version`\n\nA string representing the current Punycode.js version number.\n\n## Author\n\n| [![twitter/mathias](https://gravatar.com/avatar/24e08a9ea84deb17ae121074d0f17125?s=70)](https://twitter.com/mathias \"Follow @mathias on Twitter\") |\n|---|\n| [Mathias Bynens](https://mathiasbynens.be/) |\n\n## License\n\nPunycode.js is available under the [MIT](https://mths.be/mit) license.\n",
                            "readmeFilename": "README.md",
                            "dependencies": {},
                            "optionalDependencies": {},
                            "_dependencies": {},
                            "path": "/home/srikanth/Srikanth/alfresco/adf-components/node_modules/punycode",
                            "error": "[Circular]",
                            "extraneous": false
                          }
                        },
                        "description": "An RFC 3986/3987 compliant, scheme extendable URI/IRI parsing/validating/resolving library for JavaScript.",
                        "devDependencies": {
                          "babel-cli": "^6.26.0",
                          "babel-plugin-external-helpers": "^6.22.0",
                          "babel-preset-latest": "^6.24.1",
                          "mocha": "^3.2.0",
                          "mocha-qunit-ui": "^0.1.3",
                          "rollup": "^0.41.6",
                          "rollup-plugin-babel": "^2.7.1",
                          "rollup-plugin-node-resolve": "^2.0.0",
                          "sorcery": "^0.10.0",
                          "typescript": "^2.8.1",
                          "uglify-js": "^2.8.14"
                        },
                        "directories": {
                          "test": "tests"
                        },
                        "homepage": "https://github.com/garycourt/uri-js",
                        "keywords": [
                          "URI",
                          "IRI",
                          "IDN",
                          "URN",
                          "UUID",
                          "HTTP",
                          "HTTPS",
                          "MAILTO",
                          "RFC3986",
                          "RFC3987",
                          "RFC5891",
                          "RFC2616",
                          "RFC2818",
                          "RFC2141",
                          "RFC4122",
                          "RFC4291",
                          "RFC5952",
                          "RFC6068",
                          "RFC6874"
                        ],
                        "license": "BSD-2-Clause",
                        "main": "dist/es5/uri.all.js",
                        "name": "uri-js",
                        "repository": {
                          "type": "git",
                          "url": "git+ssh://git@github.com/garycourt/uri-js.git"
                        },
                        "scripts": {
                          "build": "npm run build:esnext && npm run build:es5 && npm run build:es5:min",
                          "build:es5": "rollup -c && cp dist/esnext/uri.d.ts dist/es5/uri.all.d.ts && npm run build:es5:fix-sourcemap",
                          "build:es5:fix-sourcemap": "sorcery -i dist/es5/uri.all.js",
                          "build:es5:min": "uglifyjs dist/es5/uri.all.js --support-ie8 --output dist/es5/uri.all.min.js --in-source-map dist/es5/uri.all.js.map --source-map uri.all.min.js.map --comments --compress --mangle --pure-funcs merge subexp  && mv uri.all.min.js.map dist/es5/ && cp dist/es5/uri.all.d.ts dist/es5/uri.all.min.d.ts",
                          "build:esnext": "tsc",
                          "test": "mocha -u mocha-qunit-ui dist/es5/uri.all.js tests/tests.js"
                        },
                        "types": "dist/es5/uri.all.d.ts",
                        "version": "4.2.2",
                        "readme": "# URI.js\n\nURI.js is an [RFC 3986](http://www.ietf.org/rfc/rfc3986.txt) compliant, scheme extendable URI parsing/validating/resolving library for all JavaScript environments (browsers, Node.js, etc).\nIt is also compliant with the IRI ([RFC 3987](http://www.ietf.org/rfc/rfc3987.txt)), IDNA ([RFC 5890](http://www.ietf.org/rfc/rfc5890.txt)), IPv6 Address ([RFC 5952](http://www.ietf.org/rfc/rfc5952.txt)), IPv6 Zone Identifier ([RFC 6874](http://www.ietf.org/rfc/rfc6874.txt)) specifications.\n\nURI.js has an extensive test suite, and works in all (Node.js, web) environments. It weighs in at 6.2kb (gzipped, 16kb deflated).\n\n## API\n\n### Parsing\n\n\tURI.parse(\"uri://user:pass@example.com:123/one/two.three?q1=a1&q2=a2#body\");\n\t//returns:\n\t//{\n\t//  scheme : \"uri\",\n\t//  userinfo : \"user:pass\",\n\t//  host : \"example.com\",\n\t//  port : 123,\n\t//  path : \"/one/two.three\",\n\t//  query : \"q1=a1&q2=a2\",\n\t//  fragment : \"body\"\n\t//}\n\n### Serializing\n\n\tURI.serialize({scheme : \"http\", host : \"example.com\", fragment : \"footer\"}) === \"http://example.com/#footer\"\n\n### Resolving\n\n\tURI.resolve(\"uri://a/b/c/d?q\", \"../../g\") === \"uri://a/g\"\n\n### Normalizing\n\n\tURI.normalize(\"HTTP://ABC.com:80/%7Esmith/home.html\") === \"http://abc.com/~smith/home.html\"\n\n### Comparison\n\n\tURI.equal(\"example://a/b/c/%7Bfoo%7D\", \"eXAMPLE://a/./b/../b/%63/%7bfoo%7d\") === true\n\n### IP Support\n\n\t//IPv4 normalization\n\tURI.normalize(\"//192.068.001.000\") === \"//192.68.1.0\"\n\n\t//IPv6 normalization\n\tURI.normalize(\"//[2001:0:0DB8::0:0001]\") === \"//[2001:0:db8::1]\"\n\n\t//IPv6 zone identifier support\n\tURI.parse(\"//[2001:db8::7%25en1]\");\n\t//returns:\n\t//{\n\t//  host : \"2001:db8::7%en1\"\n\t//}\n\n### IRI Support\n\n\t//convert IRI to URI\n\tURI.serialize(URI.parse(\"http://examplé.org/rosé\")) === \"http://xn--exampl-gva.org/ros%C3%A9\"\n\t//convert URI to IRI\n\tURI.serialize(URI.parse(\"http://xn--exampl-gva.org/ros%C3%A9\"), {iri:true}) === \"http://examplé.org/rosé\"\n\n### Options\n\nAll of the above functions can accept an additional options argument that is an object that can contain one or more of the following properties:\n\n*\t`scheme` (string)\n\n\tIndicates the scheme that the URI should be treated as, overriding the URI's normal scheme parsing behavior.\n\n*\t`reference` (string)\n\n\tIf set to `\"suffix\"`, it indicates that the URI is in the suffix format, and the validator will use the option's `scheme` property to determine the URI's scheme.\n\n*\t`tolerant` (boolean, false)\n\n\tIf set to `true`, the parser will relax URI resolving rules.\n\n*\t`absolutePath` (boolean, false)\n\n\tIf set to `true`, the serializer will not resolve a relative `path` component.\n\n*\t`iri` (boolean, false)\n\n\tIf set to `true`, the serializer will unescape non-ASCII characters as per [RFC 3987](http://www.ietf.org/rfc/rfc3987.txt).\n\n*\t`unicodeSupport` (boolean, false)\n\n\tIf set to `true`, the parser will unescape non-ASCII characters in the parsed output as per [RFC 3987](http://www.ietf.org/rfc/rfc3987.txt).\n\n*\t`domainHost` (boolean, false)\n\n\tIf set to `true`, the library will treat the `host` component as a domain name, and convert IDNs (International Domain Names) as per [RFC 5891](http://www.ietf.org/rfc/rfc5891.txt).\n\n## Scheme Extendable\n\nURI.js supports inserting custom [scheme](http://en.wikipedia.org/wiki/URI_scheme) dependent processing rules. Currently, URI.js has built in support for the following schemes:\n\n*\thttp \\[[RFC 2616](http://www.ietf.org/rfc/rfc2616.txt)\\]\n*\thttps \\[[RFC 2818](http://www.ietf.org/rfc/rfc2818.txt)\\]\n*\tmailto \\[[RFC 6068](http://www.ietf.org/rfc/rfc6068.txt)\\]\n*\turn \\[[RFC 2141](http://www.ietf.org/rfc/rfc2141.txt)\\]\n*\turn:uuid \\[[RFC 4122](http://www.ietf.org/rfc/rfc4122.txt)\\]\n\n### HTTP Support\n\n\tURI.equal(\"HTTP://ABC.COM:80\", \"http://abc.com/\") === true\n\n### Mailto Support\n\n\tURI.parse(\"mailto:alpha@example.com,bravo@example.com?subject=SUBSCRIBE&body=Sign%20me%20up!\");\n\t//returns:\n\t//{\n\t//\tscheme : \"mailto\",\n\t//\tto : [\"alpha@example.com\", \"bravo@example.com\"],\n\t//\tsubject : \"SUBSCRIBE\",\n\t//\tbody : \"Sign me up!\"\n\t//}\n\n\tURI.serialize({\n\t\tscheme : \"mailto\",\n\t\tto : [\"alpha@example.com\"],\n\t\tsubject : \"REMOVE\",\n\t\tbody : \"Please remove me\",\n\t\theaders : {\n\t\t\tcc : \"charlie@example.com\"\n\t\t}\n\t}) === \"mailto:alpha@example.com?cc=charlie@example.com&subject=REMOVE&body=Please%20remove%20me\"\n\n### URN Support\n\n\tURI.parse(\"urn:example:foo\");\n\t//returns:\n\t//{\n\t//\tscheme : \"urn\",\n\t//\tnid : \"example\",\n\t//\tnss : \"foo\",\n\t//}\n\n#### URN UUID Support\n\n\tURI.parse(\"urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6\");\n\t//returns:\n\t//{\n\t//\tscheme : \"urn\",\n\t//\tnid : \"example\",\n\t//\tuuid : \"f81d4fae-7dec-11d0-a765-00a0c91e6bf6\",\n\t//}\n\n## Usage\n\nTo load in a browser, use the following tag:\n\n\t<script type=\"text/javascript\" src=\"uri-js/dist/es5/uri.all.min.js\"></script>\n\nTo load in a CommonJS (Node.js) environment, first install with npm by running on the command line:\n\n\tnpm install uri-js\n\nThen, in your code, load it using:\n\n\tconst URI = require(\"uri-js\");\n\nIf you are writing your code in ES6+ (ESNEXT) or TypeScript, you would load it using:\n\n\timport * as URI from \"uri-js\";\n\nOr you can load just what you need using named exports:\n\n\timport { parse, serialize, resolve, resolveComponents, normalize, equal, removeDotSegments, pctEncChar, pctDecChars, escapeComponent, unescapeComponent } from \"uri-js\";\n\n## Breaking changes\n\n### Breaking changes from 3.x\n\nURN parsing has been completely changed to better align with the specification. Scheme is now always `urn`, but has two new properties: `nid` which contains the Namspace Identifier, and `nss` which contains the Namespace Specific String. The `nss` property will be removed by higher order scheme handlers, such as the UUID URN scheme handler.\n\nThe UUID of a URN can now be found in the `uuid` property.\n\n### Breaking changes from 2.x\n\nURI validation has been removed as it was slow, exposed a vulnerabilty, and was generally not useful.\n\n### Breaking changes from 1.x\n\nThe `errors` array on parsed components is now an `error` string.\n\n## License ([Simplified BSD](http://en.wikipedia.org/wiki/BSD_licenses#2-clause))\n\nCopyright 2011 Gary Court. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n1.\tRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\n2.\tRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY GARY COURT \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL GARY COURT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nThe views and conclusions contained in the software and documentation are those of the authors and should not be interpreted as representing official policies, either expressed or implied, of Gary Court.\n",
                        "readmeFilename": "README.md",
                        "optionalDependencies": {},
                        "_dependencies": {
                          "punycode": "^2.1.0"
                        },
                        "path": "/home/srikanth/Srikanth/alfresco/adf-components/node_modules/uri-js",
                        "error": "[Circular]",
                        "extraneous": false
                      }
                    },
                    "description": "Another JSON Schema Validator",
                    "devDependencies": {
                      "ajv-async": "^1.0.0",
                      "bluebird": "^3.1.5",
                      "brfs": "^2.0.0",
                      "browserify": "^16.2.0",
                      "chai": "^4.0.1",
                      "coveralls": "^3.0.1",
                      "del-cli": "^1.1.0",
                      "dot": "^1.0.3",
                      "eslint": "^5.0.0",
                      "gh-pages-generator": "^0.2.3",
                      "glob": "^7.0.0",
                      "if-node-version": "^1.0.0",
                      "js-beautify": "^1.7.3",
                      "jshint": "^2.9.4",
                      "json-schema-test": "^2.0.0",
                      "karma": "^2.0.2",
                      "karma-chrome-launcher": "^2.0.0",
                      "karma-mocha": "^1.1.1",
                      "karma-phantomjs-launcher": "^1.0.0",
                      "karma-sauce-launcher": "^1.1.0",
                      "mocha": "^5.1.1",
                      "nyc": "^12.0.1",
                      "phantomjs-prebuilt": "^2.1.4",
                      "pre-commit": "^1.1.1",
                      "require-globify": "^1.3.0",
                      "typescript": "^2.8.3",
                      "uglify-js": "^3.3.24",
                      "watch": "^1.0.0"
                    },
                    "files": [
                      "lib/",
                      "dist/",
                      "scripts/",
                      "LICENSE",
                      ".tonic_example.js"
                    ],
                    "homepage": "https://github.com/epoberezkin/ajv",
                    "keywords": [
                      "JSON",
                      "schema",
                      "validator",
                      "validation",
                      "jsonschema",
                      "json-schema",
                      "json-schema-validator",
                      "json-schema-validation"
                    ],
                    "license": "MIT",
                    "main": "lib/ajv.js",
                    "name": "ajv",
                    "nyc": {
                      "exclude": [
                        "**/spec/**",
                        "node_modules"
                      ],
                      "reporter": [
                        "lcov",
                        "text-summary"
                      ]
                    },
                    "repository": {
                      "type": "git",
                      "url": "git+https://github.com/epoberezkin/ajv.git"
                    },
                    "scripts": {
                      "build": "del-cli lib/dotjs/*.js '!lib/dotjs/index.js' && node scripts/compile-dots.js",
                      "bundle": "del-cli dist && node ./scripts/bundle.js . Ajv pure_getters",
                      "bundle-beautify": "node ./scripts/bundle.js js-beautify",
                      "eslint": "eslint lib/*.js lib/compile/*.js spec/*.js scripts",
                      "jshint": "jshint lib/*.js lib/**/*.js --exclude lib/dotjs/**/*",
                      "prepublish": "npm run build && npm run bundle",
                      "test": "npm run jshint && npm run eslint && npm run test-ts && npm run build && npm run test-cov && if-node-version 8 npm run test-browser",
                      "test-browser": "del-cli .browser && npm run bundle && scripts/prepare-tests && npm run test-karma",
                      "test-cov": "nyc npm run test-spec",
                      "test-debug": "mocha spec/*.spec.js --debug-brk -R spec",
                      "test-fast": "AJV_FAST_TEST=true npm run test-spec",
                      "test-karma": "karma start --single-run --browsers PhantomJS",
                      "test-spec": "mocha spec/*.spec.js -R spec",
                      "test-ts": "tsc --target ES5 --noImplicitAny lib/ajv.d.ts",
                      "watch": "watch 'npm run build' ./lib/dot"
                    },
                    "tonicExampleFilename": ".tonic_example.js",
                    "typings": "lib/ajv.d.ts",
                    "version": "6.5.2",
                    "readme": "<img align=\"right\" alt=\"Ajv logo\" width=\"160\" src=\"http://epoberezkin.github.io/ajv/images/ajv_logo.png\">\n\n# Ajv: Another JSON Schema Validator\n\nThe fastest JSON Schema validator for Node.js and browser. Supports draft-04/06/07.\n\n\n[![Build Status](https://travis-ci.org/epoberezkin/ajv.svg?branch=master)](https://travis-ci.org/epoberezkin/ajv)\n[![npm](https://img.shields.io/npm/v/ajv.svg)](https://www.npmjs.com/package/ajv)\n[![npm downloads](https://img.shields.io/npm/dm/ajv.svg)](https://www.npmjs.com/package/ajv)\n[![Coverage Status](https://coveralls.io/repos/epoberezkin/ajv/badge.svg?branch=master&service=github)](https://coveralls.io/github/epoberezkin/ajv?branch=master)\n[![Greenkeeper badge](https://badges.greenkeeper.io/epoberezkin/ajv.svg)](https://greenkeeper.io/)\n[![Gitter](https://img.shields.io/gitter/room/ajv-validator/ajv.svg)](https://gitter.im/ajv-validator/ajv)\n\n\n## Using version 6\n\n[JSON Schema draft-07](http://json-schema.org/latest/json-schema-validation.html) is published.\n\n[Ajv version 6.0.0](https://github.com/epoberezkin/ajv/releases/tag/v6.0.0) that supports draft-07 is released. It may require either migrating your schemas or updating your code (to continue using draft-04 and v5 schemas, draft-06 schemas will be supported without changes).\n\n__Please note__: To use Ajv with draft-06 schemas you need to explicitly add the meta-schema to the validator instance:\n\n```javascript\najv.addMetaSchema(require('ajv/lib/refs/json-schema-draft-06.json'));\n```\n\nTo use Ajv with draft-04 schemas in addition to explicitly adding meta-schema you also need to use option schemaId:\n\n```javascript\nvar ajv = new Ajv({schemaId: 'id'});\n// If you want to use both draft-04 and draft-06/07 schemas:\n// var ajv = new Ajv({schemaId: 'auto'});\najv.addMetaSchema(require('ajv/lib/refs/json-schema-draft-04.json'));\n```\n\n\n## Contents\n\n- [Performance](#performance)\n- [Features](#features)\n- [Getting started](#getting-started)\n- [Frequently Asked Questions](https://github.com/epoberezkin/ajv/blob/master/FAQ.md)\n- [Using in browser](#using-in-browser)\n- [Command line interface](#command-line-interface)\n- Validation\n  - [Keywords](#validation-keywords)\n  - [Annotation keywords](#annotation-keywords)\n  - [Formats](#formats)\n  - [Combining schemas with $ref](#ref)\n  - [$data reference](#data-reference)\n  - NEW: [$merge and $patch keywords](#merge-and-patch-keywords)\n  - [Defining custom keywords](#defining-custom-keywords)\n  - [Asynchronous schema compilation](#asynchronous-schema-compilation)\n  - [Asynchronous validation](#asynchronous-validation)\n- Modifying data during validation\n  - [Filtering data](#filtering-data)\n  - [Assigning defaults](#assigning-defaults)\n  - [Coercing data types](#coercing-data-types)\n- API\n  - [Methods](#api)\n  - [Options](#options)\n  - [Validation errors](#validation-errors)\n- [Plugins](#plugins)\n- [Related packages](#related-packages)\n- [Packages using Ajv](#some-packages-using-ajv)\n- [Tests, Contributing, History, License](#tests)\n\n\n## Performance\n\nAjv generates code using [doT templates](https://github.com/olado/doT) to turn JSON Schemas into super-fast validation functions that are efficient for v8 optimization.\n\nCurrently Ajv is the fastest and the most standard compliant validator according to these benchmarks:\n\n- [json-schema-benchmark](https://github.com/ebdrup/json-schema-benchmark) - 50% faster than the second place\n- [jsck benchmark](https://github.com/pandastrike/jsck#benchmarks) - 20-190% faster\n- [z-schema benchmark](https://rawgit.com/zaggino/z-schema/master/benchmark/results.html)\n- [themis benchmark](https://cdn.rawgit.com/playlyfe/themis/master/benchmark/results.html)\n\n\nPerformance of different validators by [json-schema-benchmark](https://github.com/ebdrup/json-schema-benchmark):\n\n[![performance](https://chart.googleapis.com/chart?chxt=x,y&cht=bhs&chco=76A4FB&chls=2.0&chbh=32,4,1&chs=600x416&chxl=-1:|djv|ajv|json-schema-validator-generator|jsen|is-my-json-valid|themis|z-schema|jsck|skeemas|json-schema-library|tv4&chd=t:100,98,72.1,66.8,50.1,15.1,6.1,3.8,1.2,0.7,0.2)](https://github.com/ebdrup/json-schema-benchmark/blob/master/README.md#performance)\n\n\n## Features\n\n- Ajv implements full JSON Schema [draft-06/07](http://json-schema.org/) and draft-04 standards:\n  - all validation keywords (see [JSON Schema validation keywords](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md))\n  - full support of remote refs (remote schemas have to be added with `addSchema` or compiled to be available)\n  - support of circular references between schemas\n  - correct string lengths for strings with unicode pairs (can be turned off)\n  - [formats](#formats) defined by JSON Schema draft-07 standard and custom formats (can be turned off)\n  - [validates schemas against meta-schema](#api-validateschema)\n- supports [browsers](#using-in-browser) and Node.js 0.10-8.x\n- [asynchronous loading](#asynchronous-schema-compilation) of referenced schemas during compilation\n- \"All errors\" validation mode with [option allErrors](#options)\n- [error messages with parameters](#validation-errors) describing error reasons to allow creating custom error messages\n- i18n error messages support with [ajv-i18n](https://github.com/epoberezkin/ajv-i18n) package\n- [filtering data](#filtering-data) from additional properties\n- [assigning defaults](#assigning-defaults) to missing properties and items\n- [coercing data](#coercing-data-types) to the types specified in `type` keywords\n- [custom keywords](#defining-custom-keywords)\n- draft-06/07 keywords `const`, `contains`, `propertyNames` and `if/then/else`\n- draft-06 boolean schemas (`true`/`false` as a schema to always pass/fail).\n- keywords `switch`, `patternRequired`, `formatMaximum` / `formatMinimum` and `formatExclusiveMaximum` / `formatExclusiveMinimum` from [JSON Schema extension proposals](https://github.com/json-schema/json-schema/wiki/v5-Proposals) with [ajv-keywords](https://github.com/epoberezkin/ajv-keywords) package\n- [$data reference](#data-reference) to use values from the validated data as values for the schema keywords\n- [asynchronous validation](#asynchronous-validation) of custom formats and keywords\n\nCurrently Ajv is the only validator that passes all the tests from [JSON Schema Test Suite](https://github.com/json-schema/JSON-Schema-Test-Suite) (according to [json-schema-benchmark](https://github.com/ebdrup/json-schema-benchmark), apart from the test that requires that `1.0` is not an integer that is impossible to satisfy in JavaScript).\n\n\n## Install\n\n```\nnpm install ajv\n```\n\n\n## <a name=\"usage\"></a>Getting started\n\nTry it in the Node.js REPL: https://tonicdev.com/npm/ajv\n\n\nThe fastest validation call:\n\n```javascript\nvar Ajv = require('ajv');\nvar ajv = new Ajv(); // options can be passed, e.g. {allErrors: true}\nvar validate = ajv.compile(schema);\nvar valid = validate(data);\nif (!valid) console.log(validate.errors);\n```\n\nor with less code\n\n```javascript\n// ...\nvar valid = ajv.validate(schema, data);\nif (!valid) console.log(ajv.errors);\n// ...\n```\n\nor\n\n```javascript\n// ...\nvar valid = ajv.addSchema(schema, 'mySchema')\n               .validate('mySchema', data);\nif (!valid) console.log(ajv.errorsText());\n// ...\n```\n\nSee [API](#api) and [Options](#options) for more details.\n\nAjv compiles schemas to functions and caches them in all cases (using schema serialized with [fast-json-stable-stringify](https://github.com/epoberezkin/fast-json-stable-stringify) or a custom function as a key), so that the next time the same schema is used (not necessarily the same object instance) it won't be compiled again.\n\nThe best performance is achieved when using compiled functions returned by `compile` or `getSchema` methods (there is no additional function call).\n\n__Please note__: every time a validation function or `ajv.validate` are called `errors` property is overwritten. You need to copy `errors` array reference to another variable if you want to use it later (e.g., in the callback). See [Validation errors](#validation-errors)\n\n\n## Using in browser\n\nYou can require Ajv directly from the code you browserify - in this case Ajv will be a part of your bundle.\n\nIf you need to use Ajv in several bundles you can create a separate UMD bundle using `npm run bundle` script (thanks to [siddo420](https://github.com/siddo420)).\n\nThen you need to load Ajv in the browser:\n```html\n<script src=\"ajv.min.js\"></script>\n```\n\nThis bundle can be used with different module systems; it creates global `Ajv` if no module system is found.\n\nThe browser bundle is available on [cdnjs](https://cdnjs.com/libraries/ajv).\n\nAjv is tested with these browsers:\n\n[![Sauce Test Status](https://saucelabs.com/browser-matrix/epoberezkin.svg)](https://saucelabs.com/u/epoberezkin)\n\n__Please note__: some frameworks, e.g. Dojo, may redefine global require in such way that is not compatible with CommonJS module format. In such case Ajv bundle has to be loaded before the framework and then you can use global Ajv (see issue [#234](https://github.com/epoberezkin/ajv/issues/234)).\n\n\n## Command line interface\n\nCLI is available as a separate npm package [ajv-cli](https://github.com/jessedc/ajv-cli). It supports:\n\n- compiling JSON Schemas to test their validity\n- BETA: generating standalone module exporting a validation function to be used without Ajv (using [ajv-pack](https://github.com/epoberezkin/ajv-pack))\n- migrate schemas to draft-07 (using [json-schema-migrate](https://github.com/epoberezkin/json-schema-migrate))\n- validating data file(s) against JSON Schema\n- testing expected validity of data against JSON Schema\n- referenced schemas\n- custom meta-schemas\n- files in JSON and JavaScript format\n- all Ajv options\n- reporting changes in data after validation in [JSON-patch](https://tools.ietf.org/html/rfc6902) format\n\n\n## Validation keywords\n\nAjv supports all validation keywords from draft-07 of JSON Schema standard:\n\n- [type](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md#type)\n- [for numbers](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md#keywords-for-numbers) - maximum, minimum, exclusiveMaximum, exclusiveMinimum, multipleOf\n- [for strings](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md#keywords-for-strings) - maxLength, minLength, pattern, format\n- [for arrays](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md#keywords-for-arrays) - maxItems, minItems, uniqueItems, items, additionalItems, [contains](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md#contains)\n- [for objects](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md#keywords-for-objects) - maxProperties, minProperties, required, properties, patternProperties, additionalProperties, dependencies, [propertyNames](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md#propertynames)\n- [for all types](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md#keywords-for-all-types) - enum, [const](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md#const)\n- [compound keywords](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md#compound-keywords) - not, oneOf, anyOf, allOf, [if/then/else](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md#ifthenelse)\n\nWith [ajv-keywords](https://github.com/epoberezkin/ajv-keywords) package Ajv also supports validation keywords from [JSON Schema extension proposals](https://github.com/json-schema/json-schema/wiki/v5-Proposals) for JSON Schema standard:\n\n- [patternRequired](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md#patternrequired-proposed) - like `required` but with patterns that some property should match.\n- [formatMaximum, formatMinimum, formatExclusiveMaximum, formatExclusiveMinimum](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md#formatmaximum--formatminimum-and-exclusiveformatmaximum--exclusiveformatminimum-proposed) - setting limits for date, time, etc.\n\nSee [JSON Schema validation keywords](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md) for more details.\n\n\n## Annotation keywords\n\nJSON Schema specification defines several annotation keywords that describe schema itself but do not perform any validation.\n\n- `title` and `description`: information about the data represented by that schema\n- `$comment` (NEW in draft-07): information for developers. With option `$comment` Ajv logs or passes the comment string to the user-supplied function. See [Options](#options).\n- `default`: a default value of the data instance, see [Assigning defaults](#assigning-defaults).\n- `examples` (NEW in draft-07): an array of data instances. Ajv does not check the validity of these instances against the schema.\n- `readOnly` and `writeOnly` (NEW in draft-07): marks data-instance as read-only or write-only in relation to the source of the data (database, api, etc.).\n- `contentEncoding`: [RFC 2045](https://tools.ietf.org/html/rfc2045#section-6.1 ), e.g., \"base64\".\n- `contentMediaType`: [RFC 2046](https://tools.ietf.org/html/rfc2046), e.g., \"image/png\".\n\n__Please note__:  Ajv does not implement validation of the keywords `examples`, `contentEncoding` and `contentMediaType` but it reserves them. If you want to create a plugin that implements some of them, it should remove these keywords from the instance.\n\n\n## Formats\n\nThe following formats are supported for string validation with \"format\" keyword:\n\n- _date_: full-date according to [RFC3339](http://tools.ietf.org/html/rfc3339#section-5.6).\n- _time_: time with optional time-zone.\n- _date-time_: date-time from the same source (time-zone is mandatory). `date`, `time` and `date-time` validate ranges in `full` mode and only regexp in `fast` mode (see [options](#options)).\n- _uri_: full URI.\n- _uri-reference_: URI reference, including full and relative URIs.\n- _uri-template_: URI template according to [RFC6570](https://tools.ietf.org/html/rfc6570)\n- _url_: [URL record](https://url.spec.whatwg.org/#concept-url).\n- _email_: email address.\n- _hostname_: host name according to [RFC1034](http://tools.ietf.org/html/rfc1034#section-3.5).\n- _ipv4_: IP address v4.\n- _ipv6_: IP address v6.\n- _regex_: tests whether a string is a valid regular expression by passing it to RegExp constructor.\n- _uuid_: Universally Unique IDentifier according to [RFC4122](http://tools.ietf.org/html/rfc4122).\n- _json-pointer_: JSON-pointer according to [RFC6901](https://tools.ietf.org/html/rfc6901).\n- _relative-json-pointer_: relative JSON-pointer according to [this draft](http://tools.ietf.org/html/draft-luff-relative-json-pointer-00).\n\n__Please note__: JSON Schema draft-07 also defines formats `iri`, `iri-reference`, `idn-hostname` and `idn-email` for URLs, hostnames and emails with international characters. Ajv does not implement these formats. If you create Ajv plugin that implements them please make a PR to mention this plugin here.\n\nThere are two modes of format validation: `fast` and `full`. This mode affects formats `date`, `time`, `date-time`, `uri`, `uri-reference`, `email`, and `hostname`. See [Options](#options) for details.\n\nYou can add additional formats and replace any of the formats above using [addFormat](#api-addformat) method.\n\nThe option `unknownFormats` allows changing the default behaviour when an unknown format is encountered. In this case Ajv can either fail schema compilation (default) or ignore it (default in versions before 5.0.0). You also can whitelist specific format(s) to be ignored. See [Options](#options) for details.\n\nYou can find patterns used for format validation and the sources that were used in [formats.js](https://github.com/epoberezkin/ajv/blob/master/lib/compile/formats.js).\n\n\n## <a name=\"ref\"></a>Combining schemas with $ref\n\nYou can structure your validation logic across multiple schema files and have schemas reference each other using `$ref` keyword.\n\nExample:\n\n```javascript\nvar schema = {\n  \"$id\": \"http://example.com/schemas/schema.json\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"foo\": { \"$ref\": \"defs.json#/definitions/int\" },\n    \"bar\": { \"$ref\": \"defs.json#/definitions/str\" }\n  }\n};\n\nvar defsSchema = {\n  \"$id\": \"http://example.com/schemas/defs.json\",\n  \"definitions\": {\n    \"int\": { \"type\": \"integer\" },\n    \"str\": { \"type\": \"string\" }\n  }\n};\n```\n\nNow to compile your schema you can either pass all schemas to Ajv instance:\n\n```javascript\nvar ajv = new Ajv({schemas: [schema, defsSchema]});\nvar validate = ajv.getSchema('http://example.com/schemas/schema.json');\n```\n\nor use `addSchema` method:\n\n```javascript\nvar ajv = new Ajv;\nvar validate = ajv.addSchema(defsSchema)\n                  .compile(schema);\n```\n\nSee [Options](#options) and [addSchema](#api) method.\n\n__Please note__:\n- `$ref` is resolved as the uri-reference using schema $id as the base URI (see the example).\n- References can be recursive (and mutually recursive) to implement the schemas for different data structures (such as linked lists, trees, graphs, etc.).\n- You don't have to host your schema files at the URIs that you use as schema $id. These URIs are only used to identify the schemas, and according to JSON Schema specification validators should not expect to be able to download the schemas from these URIs.\n- The actual location of the schema file in the file system is not used.\n- You can pass the identifier of the schema as the second parameter of `addSchema` method or as a property name in `schemas` option. This identifier can be used instead of (or in addition to) schema $id.\n- You cannot have the same $id (or the schema identifier) used for more than one schema - the exception will be thrown.\n- You can implement dynamic resolution of the referenced schemas using `compileAsync` method. In this way you can store schemas in any system (files, web, database, etc.) and reference them without explicitly adding to Ajv instance. See [Asynchronous schema compilation](#asynchronous-schema-compilation).\n\n\n## $data reference\n\nWith `$data` option you can use values from the validated data as the values for the schema keywords. See [proposal](https://github.com/json-schema/json-schema/wiki/$data-(v5-proposal)) for more information about how it works.\n\n`$data` reference is supported in the keywords: const, enum, format, maximum/minimum, exclusiveMaximum / exclusiveMinimum, maxLength / minLength, maxItems / minItems, maxProperties / minProperties, formatMaximum / formatMinimum, formatExclusiveMaximum / formatExclusiveMinimum, multipleOf, pattern, required, uniqueItems.\n\nThe value of \"$data\" should be a [JSON-pointer](https://tools.ietf.org/html/rfc6901) to the data (the root is always the top level data object, even if the $data reference is inside a referenced subschema) or a [relative JSON-pointer](http://tools.ietf.org/html/draft-luff-relative-json-pointer-00) (it is relative to the current point in data; if the $data reference is inside a referenced subschema it cannot point to the data outside of the root level for this subschema).\n\nExamples.\n\nThis schema requires that the value in property `smaller` is less or equal than the value in the property larger:\n\n```javascript\nvar ajv = new Ajv({$data: true});\n\nvar schema = {\n  \"properties\": {\n    \"smaller\": {\n      \"type\": \"number\",\n      \"maximum\": { \"$data\": \"1/larger\" }\n    },\n    \"larger\": { \"type\": \"number\" }\n  }\n};\n\nvar validData = {\n  smaller: 5,\n  larger: 7\n};\n\najv.validate(schema, validData); // true\n```\n\nThis schema requires that the properties have the same format as their field names:\n\n```javascript\nvar schema = {\n  \"additionalProperties\": {\n    \"type\": \"string\",\n    \"format\": { \"$data\": \"0#\" }\n  }\n};\n\nvar validData = {\n  'date-time': '1963-06-19T08:30:06.283185Z',\n  email: 'joe.bloggs@example.com'\n}\n```\n\n`$data` reference is resolved safely - it won't throw even if some property is undefined. If `$data` resolves to `undefined` the validation succeeds (with the exclusion of `const` keyword). If `$data` resolves to incorrect type (e.g. not \"number\" for maximum keyword) the validation fails.\n\n\n## $merge and $patch keywords\n\nWith the package [ajv-merge-patch](https://github.com/epoberezkin/ajv-merge-patch) you can use the keywords `$merge` and `$patch` that allow extending JSON Schemas with patches using formats [JSON Merge Patch (RFC 7396)](https://tools.ietf.org/html/rfc7396) and [JSON Patch (RFC 6902)](https://tools.ietf.org/html/rfc6902).\n\nTo add keywords `$merge` and `$patch` to Ajv instance use this code:\n\n```javascript\nrequire('ajv-merge-patch')(ajv);\n```\n\nExamples.\n\nUsing `$merge`:\n\n```json\n{\n  \"$merge\": {\n    \"source\": {\n      \"type\": \"object\",\n      \"properties\": { \"p\": { \"type\": \"string\" } },\n      \"additionalProperties\": false\n    },\n    \"with\": {\n      \"properties\": { \"q\": { \"type\": \"number\" } }\n    }\n  }\n}\n```\n\nUsing `$patch`:\n\n```json\n{\n  \"$patch\": {\n    \"source\": {\n      \"type\": \"object\",\n      \"properties\": { \"p\": { \"type\": \"string\" } },\n      \"additionalProperties\": false\n    },\n    \"with\": [\n      { \"op\": \"add\", \"path\": \"/properties/q\", \"value\": { \"type\": \"number\" } }\n    ]\n  }\n}\n```\n\nThe schemas above are equivalent to this schema:\n\n```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"p\": { \"type\": \"string\" },\n    \"q\": { \"type\": \"number\" }\n  },\n  \"additionalProperties\": false\n}\n```\n\nThe properties `source` and `with` in the keywords `$merge` and `$patch` can use absolute or relative `$ref` to point to other schemas previously added to the Ajv instance or to the fragments of the current schema.\n\nSee the package [ajv-merge-patch](https://github.com/epoberezkin/ajv-merge-patch) for more information.\n\n\n## Defining custom keywords\n\nThe advantages of using custom keywords are:\n\n- allow creating validation scenarios that cannot be expressed using JSON Schema\n- simplify your schemas\n- help bringing a bigger part of the validation logic to your schemas\n- make your schemas more expressive, less verbose and closer to your application domain\n- implement custom data processors that modify your data (`modifying` option MUST be used in keyword definition) and/or create side effects while the data is being validated\n\nIf a keyword is used only for side-effects and its validation result is pre-defined, use option `valid: true/false` in keyword definition to simplify both generated code (no error handling in case of `valid: true`) and your keyword functions (no need to return any validation result).\n\nThe concerns you have to be aware of when extending JSON Schema standard with custom keywords are the portability and understanding of your schemas. You will have to support these custom keywords on other platforms and to properly document these keywords so that everybody can understand them in your schemas.\n\nYou can define custom keywords with [addKeyword](#api-addkeyword) method. Keywords are defined on the `ajv` instance level - new instances will not have previously defined keywords.\n\nAjv allows defining keywords with:\n- validation function\n- compilation function\n- macro function\n- inline compilation function that should return code (as string) that will be inlined in the currently compiled schema.\n\nExample. `range` and `exclusiveRange` keywords using compiled schema:\n\n```javascript\najv.addKeyword('range', {\n  type: 'number',\n  compile: function (sch, parentSchema) {\n    var min = sch[0];\n    var max = sch[1];\n\n    return parentSchema.exclusiveRange === true\n            ? function (data) { return data > min && data < max; }\n            : function (data) { return data >= min && data <= max; }\n  }\n});\n\nvar schema = { \"range\": [2, 4], \"exclusiveRange\": true };\nvar validate = ajv.compile(schema);\nconsole.log(validate(2.01)); // true\nconsole.log(validate(3.99)); // true\nconsole.log(validate(2)); // false\nconsole.log(validate(4)); // false\n```\n\nSeveral custom keywords (typeof, instanceof, range and propertyNames) are defined in [ajv-keywords](https://github.com/epoberezkin/ajv-keywords) package - they can be used for your schemas and as a starting point for your own custom keywords.\n\nSee [Defining custom keywords](https://github.com/epoberezkin/ajv/blob/master/CUSTOM.md) for more details.\n\n\n## Asynchronous schema compilation\n\nDuring asynchronous compilation remote references are loaded using supplied function. See `compileAsync` [method](#api-compileAsync) and `loadSchema` [option](#options).\n\nExample:\n\n```javascript\nvar ajv = new Ajv({ loadSchema: loadSchema });\n\najv.compileAsync(schema).then(function (validate) {\n  var valid = validate(data);\n  // ...\n});\n\nfunction loadSchema(uri) {\n  return request.json(uri).then(function (res) {\n    if (res.statusCode >= 400)\n      throw new Error('Loading error: ' + res.statusCode);\n    return res.body;\n  });\n}\n```\n\n__Please note__: [Option](#options) `missingRefs` should NOT be set to `\"ignore\"` or `\"fail\"` for asynchronous compilation to work.\n\n\n## Asynchronous validation\n\nExample in Node.js REPL: https://tonicdev.com/esp/ajv-asynchronous-validation\n\nYou can define custom formats and keywords that perform validation asynchronously by accessing database or some other service. You should add `async: true` in the keyword or format definition (see [addFormat](#api-addformat), [addKeyword](#api-addkeyword) and [Defining custom keywords](#defining-custom-keywords)).\n\nIf your schema uses asynchronous formats/keywords or refers to some schema that contains them it should have `\"$async\": true` keyword so that Ajv can compile it correctly. If asynchronous format/keyword or reference to asynchronous schema is used in the schema without `$async` keyword Ajv will throw an exception during schema compilation.\n\n__Please note__: all asynchronous subschemas that are referenced from the current or other schemas should have `\"$async\": true` keyword as well, otherwise the schema compilation will fail.\n\nValidation function for an asynchronous custom format/keyword should return a promise that resolves with `true` or `false` (or rejects with `new Ajv.ValidationError(errors)` if you want to return custom errors from the keyword function).\n\nAjv compiles asynchronous schemas to [es7 async functions](http://tc39.github.io/ecmascript-asyncawait/) that can optionally be transpiled with [nodent](https://github.com/MatAtBread/nodent). Async functions are supported in Node.js 7+ and all modern browsers. You can also supply any other transpiler as a function via `processCode` option. See [Options](#options).\n\nThe compiled validation function has `$async: true` property (if the schema is asynchronous), so you can differentiate these functions if you are using both synchronous and asynchronous schemas.\n\nValidation result will be a promise that resolves with validated data or rejects with an exception `Ajv.ValidationError` that contains the array of validation errors in `errors` property.\n\n\nExample:\n\n```javascript\nvar ajv = new Ajv;\n// require('ajv-async')(ajv);\n\najv.addKeyword('idExists', {\n  async: true,\n  type: 'number',\n  validate: checkIdExists\n});\n\n\nfunction checkIdExists(schema, data) {\n  return knex(schema.table)\n  .select('id')\n  .where('id', data)\n  .then(function (rows) {\n    return !!rows.length; // true if record is found\n  });\n}\n\nvar schema = {\n  \"$async\": true,\n  \"properties\": {\n    \"userId\": {\n      \"type\": \"integer\",\n      \"idExists\": { \"table\": \"users\" }\n    },\n    \"postId\": {\n      \"type\": \"integer\",\n      \"idExists\": { \"table\": \"posts\" }\n    }\n  }\n};\n\nvar validate = ajv.compile(schema);\n\nvalidate({ userId: 1, postId: 19 })\n.then(function (data) {\n  console.log('Data is valid', data); // { userId: 1, postId: 19 }\n})\n.catch(function (err) {\n  if (!(err instanceof Ajv.ValidationError)) throw err;\n  // data is invalid\n  console.log('Validation errors:', err.errors);\n});\n```\n\n### Using transpilers with asynchronous validation functions.\n\n[ajv-async](https://github.com/epoberezkin/ajv-async) uses [nodent](https://github.com/MatAtBread/nodent) to transpile async functions. To use another transpiler you should separately install it (or load its bundle in the browser).\n\n\n#### Using nodent\n\n```javascript\nvar ajv = new Ajv;\nrequire('ajv-async')(ajv);\n// in the browser if you want to load ajv-async bundle separately you can:\n// window.ajvAsync(ajv);\nvar validate = ajv.compile(schema); // transpiled es7 async function\nvalidate(data).then(successFunc).catch(errorFunc);\n```\n\n\n#### Using other transpilers\n\n```javascript\nvar ajv = new Ajv({ processCode: transpileFunc });\nvar validate = ajv.compile(schema); // transpiled es7 async function\nvalidate(data).then(successFunc).catch(errorFunc);\n```\n\nSee [Options](#options).\n\n\n## Filtering data\n\nWith [option `removeAdditional`](#options) (added by [andyscott](https://github.com/andyscott)) you can filter data during the validation.\n\nThis option modifies original data.\n\nExample:\n\n```javascript\nvar ajv = new Ajv({ removeAdditional: true });\nvar schema = {\n  \"additionalProperties\": false,\n  \"properties\": {\n    \"foo\": { \"type\": \"number\" },\n    \"bar\": {\n      \"additionalProperties\": { \"type\": \"number\" },\n      \"properties\": {\n        \"baz\": { \"type\": \"string\" }\n      }\n    }\n  }\n}\n\nvar data = {\n  \"foo\": 0,\n  \"additional1\": 1, // will be removed; `additionalProperties` == false\n  \"bar\": {\n    \"baz\": \"abc\",\n    \"additional2\": 2 // will NOT be removed; `additionalProperties` != false\n  },\n}\n\nvar validate = ajv.compile(schema);\n\nconsole.log(validate(data)); // true\nconsole.log(data); // { \"foo\": 0, \"bar\": { \"baz\": \"abc\", \"additional2\": 2 }\n```\n\nIf `removeAdditional` option in the example above were `\"all\"` then both `additional1` and `additional2` properties would have been removed.\n\nIf the option were `\"failing\"` then property `additional1` would have been removed regardless of its value and property `additional2` would have been removed only if its value were failing the schema in the inner `additionalProperties` (so in the example above it would have stayed because it passes the schema, but any non-number would have been removed).\n\n__Please note__: If you use `removeAdditional` option with `additionalProperties` keyword inside `anyOf`/`oneOf` keywords your validation can fail with this schema, for example:\n\n```json\n{\n  \"type\": \"object\",\n  \"oneOf\": [\n    {\n      \"properties\": {\n        \"foo\": { \"type\": \"string\" }\n      },\n      \"required\": [ \"foo\" ],\n      \"additionalProperties\": false\n    },\n    {\n      \"properties\": {\n        \"bar\": { \"type\": \"integer\" }\n      },\n      \"required\": [ \"bar\" ],\n      \"additionalProperties\": false\n    }\n  ]\n}\n```\n\nThe intention of the schema above is to allow objects with either the string property \"foo\" or the integer property \"bar\", but not with both and not with any other properties.\n\nWith the option `removeAdditional: true` the validation will pass for the object `{ \"foo\": \"abc\"}` but will fail for the object `{\"bar\": 1}`. It happens because while the first subschema in `oneOf` is validated, the property `bar` is removed because it is an additional property according to the standard (because it is not included in `properties` keyword in the same schema).\n\nWhile this behaviour is unexpected (issues [#129](https://github.com/epoberezkin/ajv/issues/129), [#134](https://github.com/epoberezkin/ajv/issues/134)), it is correct. To have the expected behaviour (both objects are allowed and additional properties are removed) the schema has to be refactored in this way:\n\n```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"foo\": { \"type\": \"string\" },\n    \"bar\": { \"type\": \"integer\" }\n  },\n  \"additionalProperties\": false,\n  \"oneOf\": [\n    { \"required\": [ \"foo\" ] },\n    { \"required\": [ \"bar\" ] }\n  ]\n}\n```\n\nThe schema above is also more efficient - it will compile into a faster function.\n\n\n## Assigning defaults\n\nWith [option `useDefaults`](#options) Ajv will assign values from `default` keyword in the schemas of `properties` and `items` (when it is the array of schemas) to the missing properties and items.\n\nThis option modifies original data.\n\n__Please note__: by default the default value is inserted in the generated validation code as a literal (starting from v4.0), so the value inserted in the data will be the deep clone of the default in the schema.\n\nIf you need to insert the default value in the data by reference pass the option `useDefaults: \"shared\"`.\n\nInserting defaults by reference can be faster (in case you have an object in `default`) and it allows to have dynamic values in defaults, e.g. timestamp, without recompiling the schema. The side effect is that modifying the default value in any validated data instance will change the default in the schema and in other validated data instances. See example 3 below.\n\n\nExample 1 (`default` in `properties`):\n\n```javascript\nvar ajv = new Ajv({ useDefaults: true });\nvar schema = {\n  \"type\": \"object\",\n  \"properties\": {\n    \"foo\": { \"type\": \"number\" },\n    \"bar\": { \"type\": \"string\", \"default\": \"baz\" }\n  },\n  \"required\": [ \"foo\", \"bar\" ]\n};\n\nvar data = { \"foo\": 1 };\n\nvar validate = ajv.compile(schema);\n\nconsole.log(validate(data)); // true\nconsole.log(data); // { \"foo\": 1, \"bar\": \"baz\" }\n```\n\nExample 2 (`default` in `items`):\n\n```javascript\nvar schema = {\n  \"type\": \"array\",\n  \"items\": [\n    { \"type\": \"number\" },\n    { \"type\": \"string\", \"default\": \"foo\" }\n  ]\n}\n\nvar data = [ 1 ];\n\nvar validate = ajv.compile(schema);\n\nconsole.log(validate(data)); // true\nconsole.log(data); // [ 1, \"foo\" ]\n```\n\nExample 3 (inserting \"defaults\" by reference):\n\n```javascript\nvar ajv = new Ajv({ useDefaults: 'shared' });\n\nvar schema = {\n  properties: {\n    foo: {\n      default: { bar: 1 }\n    }\n  }\n}\n\nvar validate = ajv.compile(schema);\n\nvar data = {};\nconsole.log(validate(data)); // true\nconsole.log(data); // { foo: { bar: 1 } }\n\ndata.foo.bar = 2;\n\nvar data2 = {};\nconsole.log(validate(data2)); // true\nconsole.log(data2); // { foo: { bar: 2 } }\n```\n\n`default` keywords in other cases are ignored:\n\n- not in `properties` or `items` subschemas\n- in schemas inside `anyOf`, `oneOf` and `not` (see [#42](https://github.com/epoberezkin/ajv/issues/42))\n- in `if` subschema of `switch` keyword\n- in schemas generated by custom macro keywords\n\n\n## Coercing data types\n\nWhen you are validating user inputs all your data properties are usually strings. The option `coerceTypes` allows you to have your data types coerced to the types specified in your schema `type` keywords, both to pass the validation and to use the correctly typed data afterwards.\n\nThis option modifies original data.\n\n__Please note__: if you pass a scalar value to the validating function its type will be coerced and it will pass the validation, but the value of the variable you pass won't be updated because scalars are passed by value.\n\n\nExample 1:\n\n```javascript\nvar ajv = new Ajv({ coerceTypes: true });\nvar schema = {\n  \"type\": \"object\",\n  \"properties\": {\n    \"foo\": { \"type\": \"number\" },\n    \"bar\": { \"type\": \"boolean\" }\n  },\n  \"required\": [ \"foo\", \"bar\" ]\n};\n\nvar data = { \"foo\": \"1\", \"bar\": \"false\" };\n\nvar validate = ajv.compile(schema);\n\nconsole.log(validate(data)); // true\nconsole.log(data); // { \"foo\": 1, \"bar\": false }\n```\n\nExample 2 (array coercions):\n\n```javascript\nvar ajv = new Ajv({ coerceTypes: 'array' });\nvar schema = {\n  \"properties\": {\n    \"foo\": { \"type\": \"array\", \"items\": { \"type\": \"number\" } },\n    \"bar\": { \"type\": \"boolean\" }\n  }\n};\n\nvar data = { \"foo\": \"1\", \"bar\": [\"false\"] };\n\nvar validate = ajv.compile(schema);\n\nconsole.log(validate(data)); // true\nconsole.log(data); // { \"foo\": [1], \"bar\": false }\n```\n\nThe coercion rules, as you can see from the example, are different from JavaScript both to validate user input as expected and to have the coercion reversible (to correctly validate cases where different types are defined in subschemas of \"anyOf\" and other compound keywords).\n\nSee [Coercion rules](https://github.com/epoberezkin/ajv/blob/master/COERCION.md) for details.\n\n\n## API\n\n##### new Ajv(Object options) -&gt; Object\n\nCreate Ajv instance.\n\n\n##### .compile(Object schema) -&gt; Function&lt;Object data&gt;\n\nGenerate validating function and cache the compiled schema for future use.\n\nValidating function returns a boolean value. This function has properties `errors` and `schema`. Errors encountered during the last validation are assigned to `errors` property (it is assigned `null` if there was no errors). `schema` property contains the reference to the original schema.\n\nThe schema passed to this method will be validated against meta-schema unless `validateSchema` option is false. If schema is invalid, an error will be thrown. See [options](#options).\n\n\n##### <a name=\"api-compileAsync\"></a>.compileAsync(Object schema [, Boolean meta] [, Function callback]) -&gt; Promise\n\nAsynchronous version of `compile` method that loads missing remote schemas using asynchronous function in `options.loadSchema`. This function returns a Promise that resolves to a validation function. An optional callback passed to `compileAsync` will be called with 2 parameters: error (or null) and validating function. The returned promise will reject (and the callback will be called with an error) when:\n\n- missing schema can't be loaded (`loadSchema` returns a Promise that rejects).\n- a schema containing a missing reference is loaded, but the reference cannot be resolved.\n- schema (or some loaded/referenced schema) is invalid.\n\nThe function compiles schema and loads the first missing schema (or meta-schema) until all missing schemas are loaded.\n\nYou can asynchronously compile meta-schema by passing `true` as the second parameter.\n\nSee example in [Asynchronous compilation](#asynchronous-schema-compilation).\n\n\n##### .validate(Object schema|String key|String ref, data) -&gt; Boolean\n\nValidate data using passed schema (it will be compiled and cached).\n\nInstead of the schema you can use the key that was previously passed to `addSchema`, the schema id if it was present in the schema or any previously resolved reference.\n\nValidation errors will be available in the `errors` property of Ajv instance (`null` if there were no errors).\n\n__Please note__: every time this method is called the errors are overwritten so you need to copy them to another variable if you want to use them later.\n\nIf the schema is asynchronous (has `$async` keyword on the top level) this method returns a Promise. See [Asynchronous validation](#asynchronous-validation).\n\n\n##### .addSchema(Array&lt;Object&gt;|Object schema [, String key]) -&gt; Ajv\n\nAdd schema(s) to validator instance. This method does not compile schemas (but it still validates them). Because of that dependencies can be added in any order and circular dependencies are supported. It also prevents unnecessary compilation of schemas that are containers for other schemas but not used as a whole.\n\nArray of schemas can be passed (schemas should have ids), the second parameter will be ignored.\n\nKey can be passed that can be used to reference the schema and will be used as the schema id if there is no id inside the schema. If the key is not passed, the schema id will be used as the key.\n\n\nOnce the schema is added, it (and all the references inside it) can be referenced in other schemas and used to validate data.\n\nAlthough `addSchema` does not compile schemas, explicit compilation is not required - the schema will be compiled when it is used first time.\n\nBy default the schema is validated against meta-schema before it is added, and if the schema does not pass validation the exception is thrown. This behaviour is controlled by `validateSchema` option.\n\n__Please note__: Ajv uses the [method chaining syntax](https://en.wikipedia.org/wiki/Method_chaining) for all methods with the prefix `add*` and `remove*`.\nThis allows you to do nice things like the following.\n\n```javascript\nvar validate = new Ajv().addSchema(schema).addFormat(name, regex).getSchema(uri);\n```\n\n##### .addMetaSchema(Array&lt;Object&gt;|Object schema [, String key]) -&gt; Ajv\n\nAdds meta schema(s) that can be used to validate other schemas. That function should be used instead of `addSchema` because there may be instance options that would compile a meta schema incorrectly (at the moment it is `removeAdditional` option).\n\nThere is no need to explicitly add draft-07 meta schema (http://json-schema.org/draft-07/schema) - it is added by default, unless option `meta` is set to `false`. You only need to use it if you have a changed meta-schema that you want to use to validate your schemas. See `validateSchema`.\n\n\n##### <a name=\"api-validateschema\"></a>.validateSchema(Object schema) -&gt; Boolean\n\nValidates schema. This method should be used to validate schemas rather than `validate` due to the inconsistency of `uri` format in JSON Schema standard.\n\nBy default this method is called automatically when the schema is added, so you rarely need to use it directly.\n\nIf schema doesn't have `$schema` property, it is validated against draft 6 meta-schema (option `meta` should not be false).\n\nIf schema has `$schema` property, then the schema with this id (that should be previously added) is used to validate passed schema.\n\nErrors will be available at `ajv.errors`.\n\n\n##### .getSchema(String key) -&gt; Function&lt;Object data&gt;\n\nRetrieve compiled schema previously added with `addSchema` by the key passed to `addSchema` or by its full reference (id). The returned validating function has `schema` property with the reference to the original schema.\n\n\n##### .removeSchema([Object schema|String key|String ref|RegExp pattern]) -&gt; Ajv\n\nRemove added/cached schema. Even if schema is referenced by other schemas it can be safely removed as dependent schemas have local references.\n\nSchema can be removed using:\n- key passed to `addSchema`\n- it's full reference (id)\n- RegExp that should match schema id or key (meta-schemas won't be removed)\n- actual schema object that will be stable-stringified to remove schema from cache\n\nIf no parameter is passed all schemas but meta-schemas will be removed and the cache will be cleared.\n\n\n##### <a name=\"api-addformat\"></a>.addFormat(String name, String|RegExp|Function|Object format) -&gt; Ajv\n\nAdd custom format to validate strings or numbers. It can also be used to replace pre-defined formats for Ajv instance.\n\nStrings are converted to RegExp.\n\nFunction should return validation result as `true` or `false`.\n\nIf object is passed it should have properties `validate`, `compare` and `async`:\n\n- _validate_: a string, RegExp or a function as described above.\n- _compare_: an optional comparison function that accepts two strings and compares them according to the format meaning. This function is used with keywords `formatMaximum`/`formatMinimum` (defined in [ajv-keywords](https://github.com/epoberezkin/ajv-keywords) package). It should return `1` if the first value is bigger than the second value, `-1` if it is smaller and `0` if it is equal.\n- _async_: an optional `true` value if `validate` is an asynchronous function; in this case it should return a promise that resolves with a value `true` or `false`.\n- _type_: an optional type of data that the format applies to. It can be `\"string\"` (default) or `\"number\"` (see https://github.com/epoberezkin/ajv/issues/291#issuecomment-259923858). If the type of data is different, the validation will pass.\n\nCustom formats can be also added via `formats` option.\n\n\n##### <a name=\"api-addkeyword\"></a>.addKeyword(String keyword, Object definition) -&gt; Ajv\n\nAdd custom validation keyword to Ajv instance.\n\nKeyword should be different from all standard JSON Schema keywords and different from previously defined keywords. There is no way to redefine keywords or to remove keyword definition from the instance.\n\nKeyword must start with a letter, `_` or `$`, and may continue with letters, numbers, `_`, `$`, or `-`.\nIt is recommended to use an application-specific prefix for keywords to avoid current and future name collisions.\n\nExample Keywords:\n- `\"xyz-example\"`: valid, and uses prefix for the xyz project to avoid name collisions.\n- `\"example\"`: valid, but not recommended as it could collide with future versions of JSON Schema etc.\n- `\"3-example\"`: invalid as numbers are not allowed to be the first character in a keyword\n\nKeyword definition is an object with the following properties:\n\n- _type_: optional string or array of strings with data type(s) that the keyword applies to. If not present, the keyword will apply to all types.\n- _validate_: validating function\n- _compile_: compiling function\n- _macro_: macro function\n- _inline_: compiling function that returns code (as string)\n- _schema_: an optional `false` value used with \"validate\" keyword to not pass schema\n- _metaSchema_: an optional meta-schema for keyword schema\n- _modifying_: `true` MUST be passed if keyword modifies data\n- _valid_: pass `true`/`false` to pre-define validation result, the result returned from validation function will be ignored. This option cannot be used with macro keywords.\n- _$data_: an optional `true` value to support [$data reference](#data-reference) as the value of custom keyword. The reference will be resolved at validation time. If the keyword has meta-schema it would be extended to allow $data and it will be used to validate the resolved value. Supporting $data reference requires that keyword has validating function (as the only option or in addition to compile, macro or inline function).\n- _async_: an optional `true` value if the validation function is asynchronous (whether it is compiled or passed in _validate_ property); in this case it should return a promise that resolves with a value `true` or `false`. This option is ignored in case of \"macro\" and \"inline\" keywords.\n- _errors_: an optional boolean indicating whether keyword returns errors. If this property is not set Ajv will determine if the errors were set in case of failed validation.\n\n_compile_, _macro_ and _inline_ are mutually exclusive, only one should be used at a time. _validate_ can be used separately or in addition to them to support $data reference.\n\n__Please note__: If the keyword is validating data type that is different from the type(s) in its definition, the validation function will not be called (and expanded macro will not be used), so there is no need to check for data type inside validation function or inside schema returned by macro function (unless you want to enforce a specific type and for some reason do not want to use a separate `type` keyword for that). In the same way as standard keywords work, if the keyword does not apply to the data type being validated, the validation of this keyword will succeed.\n\nSee [Defining custom keywords](#defining-custom-keywords) for more details.\n\n\n##### .getKeyword(String keyword) -&gt; Object|Boolean\n\nReturns custom keyword definition, `true` for pre-defined keywords and `false` if the keyword is unknown.\n\n\n##### .removeKeyword(String keyword) -&gt; Ajv\n\nRemoves custom or pre-defined keyword so you can redefine them.\n\nWhile this method can be used to extend pre-defined keywords, it can also be used to completely change their meaning - it may lead to unexpected results.\n\n__Please note__: schemas compiled before the keyword is removed will continue to work without changes. To recompile schemas use `removeSchema` method and compile them again.\n\n\n##### .errorsText([Array&lt;Object&gt; errors [, Object options]]) -&gt; String\n\nReturns the text with all errors in a String.\n\nOptions can have properties `separator` (string used to separate errors, \", \" by default) and `dataVar` (the variable name that dataPaths are prefixed with, \"data\" by default).\n\n\n## Options\n\nDefaults:\n\n```javascript\n{\n  // validation and reporting options:\n  $data:            false,\n  allErrors:        false,\n  verbose:          false,\n  $comment:         false, // NEW in Ajv version 6.0\n  jsonPointers:     false,\n  uniqueItems:      true,\n  unicode:          true,\n  format:           'fast',\n  formats:          {},\n  unknownFormats:   true,\n  schemas:          {},\n  logger:           undefined,\n  // referenced schema options:\n  schemaId:         '$id',\n  missingRefs:      true,\n  extendRefs:       'ignore', // recommended 'fail'\n  loadSchema:       undefined, // function(uri: string): Promise {}\n  // options to modify validated data:\n  removeAdditional: false,\n  useDefaults:      false,\n  coerceTypes:      false,\n  // asynchronous validation options:\n  transpile:        undefined, // requires ajv-async package\n  // advanced options:\n  meta:             true,\n  validateSchema:   true,\n  addUsedSchema:    true,\n  inlineRefs:       true,\n  passContext:      false,\n  loopRequired:     Infinity,\n  ownProperties:    false,\n  multipleOfPrecision: false,\n  errorDataPath:    'object', // deprecated\n  messages:         true,\n  sourceCode:       false,\n  processCode:      undefined, // function (str: string): string {}\n  cache:            new Cache,\n  serialize:        undefined\n}\n```\n\n##### Validation and reporting options\n\n- _$data_: support [$data references](#data-reference). Draft 6 meta-schema that is added by default will be extended to allow them. If you want to use another meta-schema you need to use $dataMetaSchema method to add support for $data reference. See [API](#api).\n- _allErrors_: check all rules collecting all errors. Default is to return after the first error.\n- _verbose_: include the reference to the part of the schema (`schema` and `parentSchema`) and validated data in errors (false by default).\n- _$comment_ (NEW in Ajv version 6.0): log or pass the value of `$comment` keyword to a function. Option values:\n  - `false` (default): ignore $comment keyword.\n  - `true`: log the keyword value to console.\n  - function: pass the keyword value, its schema path and root schema to the specified function\n- _jsonPointers_: set `dataPath` property of errors using [JSON Pointers](https://tools.ietf.org/html/rfc6901) instead of JavaScript property access notation.\n- _uniqueItems_: validate `uniqueItems` keyword (true by default).\n- _unicode_: calculate correct length of strings with unicode pairs (true by default). Pass `false` to use `.length` of strings that is faster, but gives \"incorrect\" lengths of strings with unicode pairs - each unicode pair is counted as two characters.\n- _format_: formats validation mode ('fast' by default). Pass 'full' for more correct and slow validation or `false` not to validate formats at all. E.g., 25:00:00 and 2015/14/33 will be invalid time and date in 'full' mode but it will be valid in 'fast' mode.\n- _formats_: an object with custom formats. Keys and values will be passed to `addFormat` method.\n- _unknownFormats_: handling of unknown formats. Option values:\n  - `true` (default) - if an unknown format is encountered the exception is thrown during schema compilation. If `format` keyword value is [$data reference](#data-reference) and it is unknown the validation will fail.\n  - `[String]` - an array of unknown format names that will be ignored. This option can be used to allow usage of third party schemas with format(s) for which you don't have definitions, but still fail if another unknown format is used. If `format` keyword value is [$data reference](#data-reference) and it is not in this array the validation will fail.\n  - `\"ignore\"` - to log warning during schema compilation and always pass validation (the default behaviour in versions before 5.0.0). This option is not recommended, as it allows to mistype format name and it won't be validated without any error message. This behaviour is required by JSON Schema specification.\n- _schemas_: an array or object of schemas that will be added to the instance. In case you pass the array the schemas must have IDs in them. When the object is passed the method `addSchema(value, key)` will be called for each schema in this object.\n- _logger_: sets the logging method. Default is the global `console` object that should have methods `log`, `warn` and `error`. Option values:\n  - custom logger - it should have methods `log`, `warn` and `error`. If any of these methods is missing an exception will be thrown.\n  - `false` - logging is disabled.\n\n\n##### Referenced schema options\n\n- _schemaId_: this option defines which keywords are used as schema URI. Option value:\n  - `\"$id\"` (default) - only use `$id` keyword as schema URI (as specified in JSON Schema draft-06/07), ignore `id` keyword (if it is present a warning will be logged).\n  - `\"id\"` - only use `id` keyword as schema URI (as specified in JSON Schema draft-04), ignore `$id` keyword (if it is present a warning will be logged).\n  - `\"auto\"` - use both `$id` and `id` keywords as schema URI. If both are present (in the same schema object) and different the exception will be thrown during schema compilation.\n- _missingRefs_: handling of missing referenced schemas. Option values:\n  - `true` (default) - if the reference cannot be resolved during compilation the exception is thrown. The thrown error has properties `missingRef` (with hash fragment) and `missingSchema` (without it). Both properties are resolved relative to the current base id (usually schema id, unless it was substituted).\n  - `\"ignore\"` - to log error during compilation and always pass validation.\n  - `\"fail\"` - to log error and successfully compile schema but fail validation if this rule is checked.\n- _extendRefs_: validation of other keywords when `$ref` is present in the schema. Option values:\n  - `\"ignore\"` (default) - when `$ref` is used other keywords are ignored (as per [JSON Reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03#section-3) standard). A warning will be logged during the schema compilation.\n  - `\"fail\"` (recommended) - if other validation keywords are used together with `$ref` the exception will be thrown when the schema is compiled. This option is recommended to make sure schema has no keywords that are ignored, which can be confusing.\n  - `true` - validate all keywords in the schemas with `$ref` (the default behaviour in versions before 5.0.0).\n- _loadSchema_: asynchronous function that will be used to load remote schemas when `compileAsync` [method](#api-compileAsync) is used and some reference is missing (option `missingRefs` should NOT be 'fail' or 'ignore'). This function should accept remote schema uri as a parameter and return a Promise that resolves to a schema. See example in [Asynchronous compilation](#asynchronous-schema-compilation).\n\n\n##### Options to modify validated data\n\n- _removeAdditional_: remove additional properties - see example in [Filtering data](#filtering-data). This option is not used if schema is added with `addMetaSchema` method. Option values:\n  - `false` (default) - not to remove additional properties\n  - `\"all\"` - all additional properties are removed, regardless of `additionalProperties` keyword in schema (and no validation is made for them).\n  - `true` - only additional properties with `additionalProperties` keyword equal to `false` are removed.\n  - `\"failing\"` - additional properties that fail schema validation will be removed (where `additionalProperties` keyword is `false` or schema).\n- _useDefaults_: replace missing properties and items with the values from corresponding `default` keywords. Default behaviour is to ignore `default` keywords. This option is not used if schema is added with `addMetaSchema` method. See examples in [Assigning defaults](#assigning-defaults). Option values:\n  - `false` (default) - do not use defaults\n  - `true` - insert defaults by value (safer and slower, object literal is used).\n  - `\"shared\"` - insert defaults by reference (faster). If the default is an object, it will be shared by all instances of validated data. If you modify the inserted default in the validated data, it will be modified in the schema as well.\n- _coerceTypes_: change data type of data to match `type` keyword. See the example in [Coercing data types](#coercing-data-types) and [coercion rules](https://github.com/epoberezkin/ajv/blob/master/COERCION.md). Option values:\n  - `false` (default) - no type coercion.\n  - `true` - coerce scalar data types.\n  - `\"array\"` - in addition to coercions between scalar types, coerce scalar data to an array with one element and vice versa (as required by the schema).\n\n\n##### Asynchronous validation options\n\n- _transpile_: Requires [ajv-async](https://github.com/epoberezkin/ajv-async) package. It determines whether Ajv transpiles compiled asynchronous validation function. Option values:\n  - `undefined` (default) - transpile with [nodent](https://github.com/MatAtBread/nodent) if async functions are not supported.\n  - `true` - always transpile with nodent.\n  - `false` - do not transpile; if async functions are not supported an exception will be thrown.\n\n\n##### Advanced options\n\n- _meta_: add [meta-schema](http://json-schema.org/documentation.html) so it can be used by other schemas (true by default). If an object is passed, it will be used as the default meta-schema for schemas that have no `$schema` keyword. This default meta-schema MUST have `$schema` keyword.\n- _validateSchema_: validate added/compiled schemas against meta-schema (true by default). `$schema` property in the schema can be http://json-schema.org/draft-07/schema or absent (draft-07 meta-schema will be used) or can be a reference to the schema previously added with `addMetaSchema` method. Option values:\n  - `true` (default) -  if the validation fails, throw the exception.\n  - `\"log\"` - if the validation fails, log error.\n  - `false` - skip schema validation.\n- _addUsedSchema_: by default methods `compile` and `validate` add schemas to the instance if they have `$id` (or `id`) property that doesn't start with \"#\". If `$id` is present and it is not unique the exception will be thrown. Set this option to `false` to skip adding schemas to the instance and the `$id` uniqueness check when these methods are used. This option does not affect `addSchema` method.\n- _inlineRefs_: Affects compilation of referenced schemas. Option values:\n  - `true` (default) - the referenced schemas that don't have refs in them are inlined, regardless of their size - that substantially improves performance at the cost of the bigger size of compiled schema functions.\n  - `false` - to not inline referenced schemas (they will be compiled as separate functions).\n  - integer number - to limit the maximum number of keywords of the schema that will be inlined.\n- _passContext_: pass validation context to custom keyword functions. If this option is `true` and you pass some context to the compiled validation function with `validate.call(context, data)`, the `context` will be available as `this` in your custom keywords. By default `this` is Ajv instance.\n- _loopRequired_: by default `required` keyword is compiled into a single expression (or a sequence of statements in `allErrors` mode). In case of a very large number of properties in this keyword it may result in a very big validation function. Pass integer to set the number of properties above which `required` keyword will be validated in a loop - smaller validation function size but also worse performance.\n- _ownProperties_: by default Ajv iterates over all enumerable object properties; when this option is `true` only own enumerable object properties (i.e. found directly on the object rather than on its prototype) are iterated. Contributed by @mbroadst.\n- _multipleOfPrecision_: by default `multipleOf` keyword is validated by comparing the result of division with parseInt() of that result. It works for dividers that are bigger than 1. For small dividers such as 0.01 the result of the division is usually not integer (even when it should be integer, see issue [#84](https://github.com/epoberezkin/ajv/issues/84)). If you need to use fractional dividers set this option to some positive integer N to have `multipleOf` validated using this formula: `Math.abs(Math.round(division) - division) < 1e-N` (it is slower but allows for float arithmetics deviations).\n- _errorDataPath_ (deprecated): set `dataPath` to point to 'object' (default) or to 'property' when validating keywords `required`, `additionalProperties` and `dependencies`.\n- _messages_: Include human-readable messages in errors. `true` by default. `false` can be passed when custom messages are used (e.g. with [ajv-i18n](https://github.com/epoberezkin/ajv-i18n)).\n- _sourceCode_: add `sourceCode` property to validating function (for debugging; this code can be different from the result of toString call).\n- _processCode_: an optional function to process generated code before it is passed to Function constructor. It can be used to either beautify (the validating function is generated without line-breaks) or to transpile code. Starting from version 5.0.0 this option replaced options:\n  - `beautify` that formatted the generated function using [js-beautify](https://github.com/beautify-web/js-beautify). If you want to beautify the generated code pass `require('js-beautify').js_beautify`.\n  - `transpile` that transpiled asynchronous validation function. You can still use `transpile` option with [ajv-async](https://github.com/epoberezkin/ajv-async) package. See [Asynchronous validation](#asynchronous-validation) for more information.\n- _cache_: an optional instance of cache to store compiled schemas using stable-stringified schema as a key. For example, set-associative cache [sacjs](https://github.com/epoberezkin/sacjs) can be used. If not passed then a simple hash is used which is good enough for the common use case (a limited number of statically defined schemas). Cache should have methods `put(key, value)`, `get(key)`, `del(key)` and `clear()`.\n- _serialize_: an optional function to serialize schema to cache key. Pass `false` to use schema itself as a key (e.g., if WeakMap used as a cache). By default [fast-json-stable-stringify](https://github.com/epoberezkin/fast-json-stable-stringify) is used.\n\n\n## Validation errors\n\nIn case of validation failure, Ajv assigns the array of errors to `errors` property of validation function (or to `errors` property of Ajv instance when `validate` or `validateSchema` methods were called). In case of [asynchronous validation](#asynchronous-validation), the returned promise is rejected with exception `Ajv.ValidationError` that has `errors` property.\n\n\n### Error objects\n\nEach error is an object with the following properties:\n\n- _keyword_: validation keyword.\n- _dataPath_: the path to the part of the data that was validated. By default `dataPath` uses JavaScript property access notation (e.g., `\".prop[1].subProp\"`). When the option `jsonPointers` is true (see [Options](#options)) `dataPath` will be set using JSON pointer standard (e.g., `\"/prop/1/subProp\"`).\n- _schemaPath_: the path (JSON-pointer as a URI fragment) to the schema of the keyword that failed validation.\n- _params_: the object with the additional information about error that can be used to create custom error messages (e.g., using [ajv-i18n](https://github.com/epoberezkin/ajv-i18n) package). See below for parameters set by all keywords.\n- _message_: the standard error message (can be excluded with option `messages` set to false).\n- _schema_: the schema of the keyword (added with `verbose` option).\n- _parentSchema_: the schema containing the keyword (added with `verbose` option)\n- _data_: the data validated by the keyword (added with `verbose` option).\n\n__Please note__: `propertyNames` keyword schema validation errors have an additional property `propertyName`, `dataPath` points to the object. After schema validation for each property name, if it is invalid an additional error is added with the property `keyword` equal to `\"propertyNames\"`.\n\n\n### Error parameters\n\nProperties of `params` object in errors depend on the keyword that failed validation.\n\n- `maxItems`, `minItems`, `maxLength`, `minLength`, `maxProperties`, `minProperties` - property `limit` (number, the schema of the keyword).\n- `additionalItems` - property `limit` (the maximum number of allowed items in case when `items` keyword is an array of schemas and `additionalItems` is false).\n- `additionalProperties` - property `additionalProperty` (the property not used in `properties` and `patternProperties` keywords).\n- `dependencies` - properties:\n  - `property` (dependent property),\n  - `missingProperty` (required missing dependency - only the first one is reported currently)\n  - `deps` (required dependencies, comma separated list as a string),\n  - `depsCount` (the number of required dependencies).\n- `format` - property `format` (the schema of the keyword).\n- `maximum`, `minimum` - properties:\n  - `limit` (number, the schema of the keyword),\n  - `exclusive` (boolean, the schema of `exclusiveMaximum` or `exclusiveMinimum`),\n  - `comparison` (string, comparison operation to compare the data to the limit, with the data on the left and the limit on the right; can be \"<\", \"<=\", \">\", \">=\")\n- `multipleOf` - property `multipleOf` (the schema of the keyword)\n- `pattern` - property `pattern` (the schema of the keyword)\n- `required` - property `missingProperty` (required property that is missing).\n- `propertyNames` - property `propertyName` (an invalid property name).\n- `patternRequired` (in ajv-keywords) - property `missingPattern` (required pattern that did not match any property).\n- `type` - property `type` (required type(s), a string, can be a comma-separated list)\n- `uniqueItems` - properties `i` and `j` (indices of duplicate items).\n- `const` - property `allowedValue` pointing to the value (the schema of the keyword).\n- `enum` - property `allowedValues` pointing to the array of values (the schema of the keyword).\n- `$ref` - property `ref` with the referenced schema URI.\n- `oneOf` - property `passingSchemas` (array of indices of passing schemas, null if no schema passes).\n- custom keywords (in case keyword definition doesn't create errors) - property `keyword` (the keyword name).\n\n\n## Plugins\n\nAjv can be extended with plugins that add custom keywords, formats or functions to process generated code. When such plugin is published as npm package it is recommended that it follows these conventions:\n\n- it exports a function\n- this function accepts ajv instance as the first parameter and returns the same instance to allow chaining\n- this function can accept an optional configuration as the second parameter\n\nIf you have published a useful plugin please submit a PR to add it to the next section.\n\n\n## Related packages\n\n- [ajv-async](https://github.com/epoberezkin/ajv-async) - plugin to configure async validation mode\n- [ajv-cli](https://github.com/jessedc/ajv-cli) - command line interface\n- [ajv-errors](https://github.com/epoberezkin/ajv-errors) - plugin for custom error messages\n- [ajv-i18n](https://github.com/epoberezkin/ajv-i18n) - internationalised error messages\n- [ajv-istanbul](https://github.com/epoberezkin/ajv-istanbul) - plugin to instrument generated validation code to measure test coverage of your schemas\n- [ajv-keywords](https://github.com/epoberezkin/ajv-keywords) - plugin with custom validation keywords (if/then/else, select, typeof, etc.)\n- [ajv-merge-patch](https://github.com/epoberezkin/ajv-merge-patch) - plugin with keywords $merge and $patch\n- [ajv-pack](https://github.com/epoberezkin/ajv-pack) - produces a compact module exporting validation functions\n\n\n## Some packages using Ajv\n\n- [webpack](https://github.com/webpack/webpack) - a module bundler. Its main purpose is to bundle JavaScript files for usage in a browser\n- [jsonscript-js](https://github.com/JSONScript/jsonscript-js) - the interpreter for [JSONScript](http://www.jsonscript.org) - scripted processing of existing endpoints and services\n- [osprey-method-handler](https://github.com/mulesoft-labs/osprey-method-handler) - Express middleware for validating requests and responses based on a RAML method object, used in [osprey](https://github.com/mulesoft/osprey) - validating API proxy generated from a RAML definition\n- [har-validator](https://github.com/ahmadnassri/har-validator) - HTTP Archive (HAR) validator\n- [jsoneditor](https://github.com/josdejong/jsoneditor) - a web-based tool to view, edit, format, and validate JSON http://jsoneditoronline.org\n- [JSON Schema Lint](https://github.com/nickcmaynard/jsonschemalint) - a web tool to validate JSON/YAML document against a single JSON Schema http://jsonschemalint.com\n- [objection](https://github.com/vincit/objection.js) - SQL-friendly ORM for Node.js\n- [table](https://github.com/gajus/table) - formats data into a string table\n- [ripple-lib](https://github.com/ripple/ripple-lib) - a JavaScript API for interacting with [Ripple](https://ripple.com) in Node.js and the browser\n- [restbase](https://github.com/wikimedia/restbase) - distributed storage with REST API & dispatcher for backend services built to provide a low-latency & high-throughput API for Wikipedia / Wikimedia content\n- [hippie-swagger](https://github.com/CacheControl/hippie-swagger) - [Hippie](https://github.com/vesln/hippie) wrapper that provides end to end API testing with swagger validation\n- [react-form-controlled](https://github.com/seeden/react-form-controlled) - React controlled form components with validation\n- [rabbitmq-schema](https://github.com/tjmehta/rabbitmq-schema) - a schema definition module for RabbitMQ graphs and messages\n- [@query/schema](https://www.npmjs.com/package/@query/schema) - stream filtering with a URI-safe query syntax parsing to JSON Schema\n- [chai-ajv-json-schema](https://github.com/peon374/chai-ajv-json-schema) - chai plugin to us JSON Schema with expect in mocha tests\n- [grunt-jsonschema-ajv](https://github.com/SignpostMarv/grunt-jsonschema-ajv) - Grunt plugin for validating files against JSON Schema\n- [extract-text-webpack-plugin](https://github.com/webpack-contrib/extract-text-webpack-plugin) - extract text from bundle into a file\n- [electron-builder](https://github.com/electron-userland/electron-builder) - a solution to package and build a ready for distribution Electron app\n- [addons-linter](https://github.com/mozilla/addons-linter) - Mozilla Add-ons Linter\n- [gh-pages-generator](https://github.com/epoberezkin/gh-pages-generator) - multi-page site generator converting markdown files to GitHub pages\n- [ESLint](https://github.com/eslint/eslint) - the pluggable linting utility for JavaScript and JSX\n\n\n## Tests\n\n```\nnpm install\ngit submodule update --init\nnpm test\n```\n\n## Contributing\n\nAll validation functions are generated using doT templates in [dot](https://github.com/epoberezkin/ajv/tree/master/lib/dot) folder. Templates are precompiled so doT is not a run-time dependency.\n\n`npm run build` - compiles templates to [dotjs](https://github.com/epoberezkin/ajv/tree/master/lib/dotjs) folder.\n\n`npm run watch` - automatically compiles templates when files in dot folder change\n\nPlease see [Contributing guidelines](https://github.com/epoberezkin/ajv/blob/master/CONTRIBUTING.md)\n\n\n## Changes history\n\nSee https://github.com/epoberezkin/ajv/releases\n\n__Please note__: [Changes in version 6.0.0](https://github.com/epoberezkin/ajv/releases/tag/v6.0.0).\n\n[Version 5.0.0](https://github.com/epoberezkin/ajv/releases/tag/5.0.0).\n\n[Version 4.0.0](https://github.com/epoberezkin/ajv/releases/tag/4.0.0).\n\n[Version 3.0.0](https://github.com/epoberezkin/ajv/releases/tag/3.0.0).\n\n[Version 2.0.0](https://github.com/epoberezkin/ajv/releases/tag/2.0.0).\n\n\n## License\n\n[MIT](https://github.com/epoberezkin/ajv/blob/master/LICENSE)\n",
                    "readmeFilename": "README.md",
                    "optionalDependencies": {},
                    "_dependencies": {
                      "fast-deep-equal": "^2.0.1",
                      "fast-json-stable-stringify": "^2.0.0",
                      "json-schema-traverse": "^0.4.1",
                      "uri-js": "^4.2.1"
                    },
                    "path": "/home/srikanth/Srikanth/alfresco/adf-components/node_modules/ajv",
                    "error": "[Circular]",
                    "extraneous": false
                  },
                  "ajv-keywords": {
                    "_args": [
                      [
                        "ajv-keywords@3.2.0",
                        "/home/srikanth/Downloads/alfresco-content-app-master"
                      ],
                      [
                        "ajv-keywords@3.2.0",
                        "/home/srikanth/Srikanth/alfresco/adf-components"
                      ]
                    ],
                    "_from": "ajv-keywords@3.2.0",
                    "_id": "ajv-keywords@3.2.0",
                    "_integrity": "sha1-6GuBnGAs+IIa1jdBNpjx3sAhhHo=",
                    "_location": "/ajv-keywords",
                    "_phantomChildren": {},
                    "_requested": {
                      "type": "version",
                      "registry": true,
                      "raw": "ajv-keywords@3.2.0",
                      "name": "ajv-keywords",
                      "escapedName": "ajv-keywords",
                      "rawSpec": "3.2.0",
                      "saveSpec": "[Circular]",
                      "fetchSpec": "3.2.0"
                    },
                    "_requiredBy": [
                      "/mini-css-extract-plugin/schema-utils",
                      "/schema-utils",
                      "/url-loader/schema-utils",
                      "/webpack",
                      "/webpack-dev-server/schema-utils"
                    ],
                    "_resolved": "https://registry.npmjs.org/ajv-keywords/-/ajv-keywords-3.2.0.tgz",
                    "_spec": "3.2.0",
                    "_where": "/home/srikanth/Srikanth/alfresco/adf-components",
                    "author": {
                      "name": "Evgeny Poberezkin"
                    },
                    "bugs": {
                      "url": "https://github.com/epoberezkin/ajv-keywords/issues"
                    },
                    "description": "Custom JSON-Schema keywords for Ajv validator",
                    "devDependencies": {
                      "ajv": "^6.0.0",
                      "ajv-pack": "^0.3.0",
                      "chai": "^4.0.2",
                      "coveralls": "^3.0.0",
                      "dot": "^1.1.1",
                      "eslint": "^4.9.0",
                      "glob": "^7.1.1",
                      "istanbul": "^0.4.3",
                      "js-beautify": "^1.7.4",
                      "json-schema-test": "^2.0.0",
                      "mocha": "^5.0.0",
                      "pre-commit": "^1.1.3",
                      "uuid": "^3.0.1"
                    },
                    "files": [
                      "index.js",
                      "keywords"
                    ],
                    "homepage": "https://github.com/epoberezkin/ajv-keywords#readme",
                    "keywords": [
                      "JSON-Schema",
                      "ajv",
                      "keywords"
                    ],
                    "license": "MIT",
                    "main": "index.js",
                    "name": "ajv-keywords",
                    "peerDependencies": {
                      "ajv": "^6.0.0"
                    },
                    "repository": {
                      "type": "git",
                      "url": "git+https://github.com/epoberezkin/ajv-keywords.git"
                    },
                    "scripts": {
                      "build": "node node_modules/ajv/scripts/compile-dots.js node_modules/ajv/lib keywords",
                      "eslint": "eslint index.js keywords/*.js",
                      "prepublish": "npm run build",
                      "test": "npm run build && npm run eslint && npm run test-cov",
                      "test-cov": "istanbul cover -x 'spec/**' node_modules/mocha/bin/_mocha -- spec/*.spec.js -R spec",
                      "test-spec": "mocha spec/*.spec.js -R spec"
                    },
                    "version": "3.2.0",
                    "readme": "# ajv-keywords\n\nCustom JSON-Schema keywords for [Ajv](https://github.com/epoberezkin/ajv) validator\n\n[![Build Status](https://travis-ci.org/epoberezkin/ajv-keywords.svg?branch=master)](https://travis-ci.org/epoberezkin/ajv-keywords)\n[![npm](https://img.shields.io/npm/v/ajv-keywords.svg)](https://www.npmjs.com/package/ajv-keywords)\n[![npm downloads](https://img.shields.io/npm/dm/ajv-keywords.svg)](https://www.npmjs.com/package/ajv-keywords)\n[![Coverage Status](https://coveralls.io/repos/github/epoberezkin/ajv-keywords/badge.svg?branch=master)](https://coveralls.io/github/epoberezkin/ajv-keywords?branch=master)\n[![Greenkeeper badge](https://badges.greenkeeper.io/epoberezkin/ajv-keywords.svg)](https://greenkeeper.io/)\n[![Gitter](https://img.shields.io/gitter/room/ajv-validator/ajv.svg)](https://gitter.im/ajv-validator/ajv)\n\n\n## Contents\n\n- [Install](#install)\n- [Usage](#usage)\n- [Keywords](#keywords)\n  - [typeof](#typeof)\n  - [instanceof](#instanceof)\n  - [range and exclusiveRange](#range-and-exclusiverange)\n  - [switch](#switch)\n  - [select/selectCases/selectDefault](#selectselectcasesselectdefault) (BETA)\n  - [patternRequired](#patternrequired)\n  - [prohibited](#prohibited)\n  - [deepProperties](#deepproperties)\n  - [deepRequired](#deeprequired)\n  - [uniqueItemProperties](#uniqueitemproperties)\n  - [regexp](#regexp)\n  - [formatMaximum / formatMinimum and formatExclusiveMaximum / formatExclusiveMinimum](#formatmaximum--formatminimum-and-formatexclusivemaximum--formatexclusiveminimum)\n  - [dynamicDefaults](#dynamicdefaults)\n  - [transform](#transform)\n- [License](#license)\n\n\n## Install\n\n```\nnpm install ajv-keywords\n```\n\n\n## Usage\n\nTo add all available keywords:\n\n```javascript\nvar Ajv = require('ajv');\nvar ajv = new Ajv;\nrequire('ajv-keywords')(ajv);\n\najv.validate({ instanceof: 'RegExp' }, /.*/); // true\najv.validate({ instanceof: 'RegExp' }, '.*'); // false\n```\n\nTo add a single keyword:\n\n```javascript\nrequire('ajv-keywords')(ajv, 'instanceof');\n```\n\nTo add multiple keywords:\n\n```javascript\nrequire('ajv-keywords')(ajv, ['typeof', 'instanceof']);\n```\n\nTo add a single keyword in browser (to avoid adding unused code):\n\n```javascript\nrequire('ajv-keywords/keywords/instanceof')(ajv);\n```\n\n\n## Keywords\n\n### `typeof`\n\nBased on JavaScript `typeof` operation.\n\nThe value of the keyword should be a string (`\"undefined\"`, `\"string\"`, `\"number\"`, `\"object\"`, `\"function\"`, `\"boolean\"` or `\"symbol\"`) or array of strings.\n\nTo pass validation the result of `typeof` operation on the value should be equal to the string (or one of the strings in the array).\n\n```\najv.validate({ typeof: 'undefined' }, undefined); // true\najv.validate({ typeof: 'undefined' }, null); // false\najv.validate({ typeof: ['undefined', 'object'] }, null); // true\n```\n\n\n### `instanceof`\n\nBased on JavaScript `instanceof` operation.\n\nThe value of the keyword should be a string (`\"Object\"`, `\"Array\"`, `\"Function\"`, `\"Number\"`, `\"String\"`, `\"Date\"`, `\"RegExp\"`, `\"Promise\"` or `\"Buffer\"`) or array of strings.\n\nTo pass validation the result of `data instanceof ...` operation on the value should be true:\n\n```\najv.validate({ instanceof: 'Array' }, []); // true\najv.validate({ instanceof: 'Array' }, {}); // false\najv.validate({ instanceof: ['Array', 'Function'] }, function(){}); // true\n```\n\nYou can add your own constructor function to be recognised by this keyword:\n\n```javascript\nfunction MyClass() {}\nvar instanceofDefinition = require('ajv-keywords').get('instanceof').definition;\n// or require('ajv-keywords/keywords/instanceof').definition;\ninstanceofDefinition.CONSTRUCTORS.MyClass = MyClass;\n\najv.validate({ instanceof: 'MyClass' }, new MyClass); // true\n```\n\n\n### `range` and `exclusiveRange`\n\nSyntax sugar for the combination of minimum and maximum keywords, also fails schema compilation if there are no numbers in the range.\n\nThe value of this keyword must be the array consisting of two numbers, the second must be greater or equal than the first one.\n\nIf the validated value is not a number the validation passes, otherwise to pass validation the value should be greater (or equal) than the first number and smaller (or equal) than the second number in the array. If `exclusiveRange` keyword is present in the same schema and its value is true, the validated value must not be equal to the range boundaries.\n\n```javascript\nvar schema = { range: [1, 3] };\najv.validate(schema, 1); // true\najv.validate(schema, 2); // true\najv.validate(schema, 3); // true\najv.validate(schema, 0.99); // false\najv.validate(schema, 3.01); // false\n\nvar schema = { range: [1, 3], exclusiveRange: true };\najv.validate(schema, 1.01); // true\najv.validate(schema, 2); // true\najv.validate(schema, 2.99); // true\najv.validate(schema, 1); // false\najv.validate(schema, 3); // false\n```\n\n\n### `switch`\n\nThis keyword allows to perform advanced conditional validation.\n\nThe value of the keyword is the array of if/then clauses. Each clause is the object with the following properties:\n\n- `if` (optional) - the value is JSON-schema\n- `then` (required) - the value is JSON-schema or boolean\n- `continue` (optional) - the value is boolean\n\nThe validation process is dynamic; all clauses are executed sequentially in the following way:\n\n1. `if`:\n    1.  `if` property is JSON-schema according to which the data is:\n        1.  valid => go to step 2.\n        2.  invalid => go to the NEXT clause, if this was the last clause the validation of `switch` SUCCEEDS.\n    2.  `if` property is absent => go to step 2.\n2. `then`:\n    1.  `then` property is `true` or it is JSON-schema according to which the data is valid => go to step 3.\n    2.  `then` property is `false` or it is JSON-schema according to which the data is invalid => the validation of `switch` FAILS.\n3. `continue`:\n    1.  `continue` property is `true` => go to the NEXT clause, if this was the last clause the validation of `switch` SUCCEEDS.\n    2.  `continue` property is `false` or absent => validation of `switch` SUCCEEDS.\n\n```javascript\nrequire('ajv-keywords')(ajv, 'switch');\n\nvar schema = {\n  type: 'array',\n  items: {\n    type: 'integer',\n    'switch': [\n      { if: { not: { minimum: 1 } }, then: false },\n      { if: { maximum: 10 }, then: true },\n      { if: { maximum: 100 }, then: { multipleOf: 10 } },\n      { if: { maximum: 1000 }, then: { multipleOf: 100 } },\n      { then: false }\n    ]\n  }\n};\n\nvar validItems = [1, 5, 10, 20, 50, 100, 200, 500, 1000];\n\nvar invalidItems = [1, 0, 2000, 11, 57, 123, 'foo'];\n```\n\n__Please note__: this keyword is moved here from Ajv, mainly to preserve backward compatibility. It is unlikely to become a standard. It's preferable to use `if`/`then`/`else` keywords if possible, as they are likely to be added to the standard. The above schema is equivalent to (for example):\n\n```javascript\n{\n  type: 'array',\n  items: {\n    type: 'integer',\n    if: { minimum: 1, maximum: 10 },\n    then: true,\n    else: {\n      if: { maximum: 100 },\n      then: { multipleOf: 10 },\n      else: {\n        if: { maximum: 1000 },\n        then: { multipleOf: 100 },\n        else: false\n      }\n    }\n  }\n}\n```\n\n\n### `select`/`selectCases`/`selectDefault`\n\nThese keywords allow to choose the schema to validate the data based on the value of some property in the validated data.\n\nThese keywords must be present in the same schema object (`selectDefault` is optional).\n\nThe value of `select` keyword should be a [$data reference](https://github.com/epoberezkin/ajv/tree/5.0.2-beta.0#data-reference) that points to any primitive JSON type (string, number, boolean or null) in the data that is validated. You can also use a constant of primitive type as the value of this keyword (e.g., for debugging purposes).\n\nThe value of `selectCases` keyword must be an object where each property name is a possible string representation of the value of `select` keyword and each property value is a corresponding schema (from draft-06 it can be boolean) that must be used to validate the data.\n\nThe value of `selectDefault` keyword is a schema (from draft-06 it can be boolean) that must be used to validate the data in case `selectCases` has no key equal to the stringified value of `select` keyword.\n\nThe validation succeeds in one of the following cases:\n- the validation of data using selected schema succeeds,\n- none of the schemas is selected for validation,\n- the value of select is undefined (no property in the data that the data reference points to).\n\nIf `select` value (in data) is not a primitive type the validation fails.\n\n__Please note__: these keywords require Ajv `$data` option to support [$data reference](https://github.com/epoberezkin/ajv/tree/5.0.2-beta.0#data-reference).\n\n\n```javascript\nrequire('ajv-keywords')(ajv, 'select');\n\nvar schema = {\n  type: object,\n  required: ['kind'],\n  properties: {\n    kind: { type: 'string' }\n  },\n  select: { $data: '0/kind' },\n  selectCases: {\n    foo: {\n      required: ['foo'],\n      properties: {\n        kind: {},\n        foo: { type: 'string' }\n      },\n      additionalProperties: false\n    },\n    bar: {\n      required: ['bar'],\n      properties: {\n        kind: {},\n        bar: { type: 'number' }\n      },\n      additionalProperties: false\n    }\n  },\n  selectDefault: {\n    propertyNames: {\n      not: { enum: ['foo', 'bar'] }\n    }\n  }\n};\n\nvar validDataList = [\n  { kind: 'foo', foo: 'any' },\n  { kind: 'bar', bar: 1 },\n  { kind: 'anything_else', not_bar_or_foo: 'any value' }\n];\n\nvar invalidDataList = [\n  { kind: 'foo' }, // no propery foo\n  { kind: 'bar' }, // no propery bar\n  { kind: 'foo', foo: 'any', another: 'any value' }, // additional property\n  { kind: 'bar', bar: 1, another: 'any value' }, // additional property\n  { kind: 'anything_else', foo: 'any' } // property foo not allowed\n  { kind: 'anything_else', bar: 1 } // property bar not allowed\n];\n```\n\n__Please note__: the current implementation is BETA. It does not allow using relative URIs in $ref keywords in schemas in `selectCases` and `selectDefault` that point outside of these schemas. The workaround is to use absolute URIs (that can point to any (sub-)schema added to Ajv, including those inside the current root schema where `select` is used). See [tests](https://github.com/epoberezkin/ajv-keywords/blob/v2.0.0/spec/tests/select.json#L314).\n\n\n### `patternRequired`\n\nThis keyword allows to require the presence of properties that match some pattern(s).\n\nThis keyword applies only to objects. If the data is not an object, the validation succeeds.\n\nThe value of this keyword should be an array of strings, each string being a regular expression. For data object to be valid each regular expression in this array should match at least one property name in the data object.\n\nIf the array contains multiple regular expressions, more than one expression can match the same property name.\n\n```javascript\nvar schema = { patternRequired: [ 'f.*o', 'b.*r' ] };\n\nvar validData = { foo: 1, bar: 2 };\nvar alsoValidData = { foobar: 3 };\n\nvar invalidDataList = [ {}, { foo: 1 }, { bar: 2 } ];\n```\n\n\n### `prohibited`\n\nThis keyword allows to prohibit that any of the properties in the list is present in the object.\n\nThis keyword applies only to objects. If the data is not an object, the validation succeeds.\n\nThe value of this keyword should be an array of strings, each string being a property name. For data object to be valid none of the properties in this array should be present in the object.\n\n```\nvar schema = { prohibited: ['foo', 'bar']};\n\nvar validData = { baz: 1 };\nvar alsoValidData = {};\n\nvar invalidDataList = [\n  { foo: 1 },\n  { bar: 2 },\n  { foo: 1, bar: 2}\n];\n```\n\n\n### `deepProperties`\n\nThis keyword allows to validate deep properties (identified by JSON pointers).\n\nThis keyword applies only to objects. If the data is not an object, the validation succeeds.\n\nThe value should be an object, where keys are JSON pointers to the data, starting from the current position in data, and the values are JSON schemas. For data object to be valid the value of each JSON pointer should be valid according to the corresponding schema.\n\n```javascript\nvar schema = {\n  type: 'object',\n  deepProperties: {\n    \"/users/1/role\": { \"enum\": [\"admin\"] }\n  }\n};\n\nvar validData = {\n  users: [\n    {},\n    {\n      id: 123,\n      role: 'admin'\n    }\n  ]\n};\n\nvar alsoValidData = {\n  users: {\n    \"1\": {\n      id: 123,\n      role: 'admin'\n    }\n  }\n};\n\nvar invalidData = {\n  users: [\n    {},\n    {\n      id: 123,\n      role: 'user'\n    }\n  ]\n};\n\nvar alsoInvalidData = {\n  users: {\n    \"1\": {\n      id: 123,\n      role: 'user'\n    }\n  }\n};\n```\n\n\n### `deepRequired`\n\nThis keyword allows to check that some deep properties (identified by JSON pointers) are available.\n\nThis keyword applies only to objects. If the data is not an object, the validation succeeds.\n\nThe value should be an array of JSON pointers to the data, starting from the current position in data. For data object to be valid each JSON pointer should be some existing part of the data.\n\n```javascript\nvar schema = {\n  type: 'object',\n  deepRequired: [\"/users/1/role\"]\n};\n\nvar validData = {\n  users: [\n    {},\n    {\n      id: 123,\n      role: 'admin'\n    }\n  ]\n};\n\nvar invalidData = {\n  users: [\n    {},\n    {\n      id: 123\n    }\n  ]\n};\n```\n\nSee [json-schema-org/json-schema-spec#203](https://github.com/json-schema-org/json-schema-spec/issues/203#issue-197211916) for an example of the equivalent schema without `deepRequired` keyword.\n\n\n### `uniqueItemProperties`\n\nThe keyword allows to check that some properties in array items are unique.\n\nThis keyword applies only to arrays. If the data is not an array, the validation succeeds.\n\nThe value of this keyword must be an array of strings - property names that should have unique values across all items.\n\n```javascript\nvar schema = { uniqueItemProperties: [ \"id\", \"name\" ] };\n\nvar validData = [\n  { id: 1 },\n  { id: 2 },\n  { id: 3 }\n];\n\nvar invalidData1 = [\n  { id: 1 },\n  { id: 1 },\n  { id: 3 }\n];\n\nvar invalidData2 = [\n  { id: 1, name: \"taco\" },\n  { id: 2, name: \"taco\" }, // duplicate \"name\"\n  { id: 3, name: \"salsa\" }\n];\n```\n\nThis keyword is contributed by [@blainesch](https://github.com/blainesch).\n\n\n### `regexp`\n\nThis keyword allows to use regular expressions with flags in schemas (the standard `pattern` keyword does not support flags).\n\nThis keyword applies only to strings. If the data is not a string, the validation succeeds.\n\nThe value of this keyword can be either a string (the result of `regexp.toString()`) or an object with the properties `pattern` and `flags` (the same strings that should be passed to RegExp constructor).\n\n```javascript\nvar schema = {\n  type: 'object',\n  properties: {\n    foo: { regexp: '/foo/i' },\n    bar: { regexp: { pattern: 'bar', flags: 'i' } }\n  }\n};\n\nvar validData = {\n  foo: 'Food',\n  bar: 'Barmen'\n};\n\nvar invalidData = {\n  foo: 'fog',\n  bar: 'bad'\n};\n```\n\n\n### `formatMaximum` / `formatMinimum` and `formatExclusiveMaximum` / `formatExclusiveMinimum`\n\nThese keywords allow to define minimum/maximum constraints when the format keyword defines ordering.\n\nThese keywords apply only to strings. If the data is not a string, the validation succeeds.\n\nThe value of keyword `formatMaximum` (`formatMinimum`) should be a string. This value is the maximum (minimum) allowed value for the data to be valid as determined by `format` keyword.\n\nWhen this keyword is added, it defines comparison rules for formats `\"date\"`, `\"time\"` and `\"date-time\". Custom formats also can have comparison rules. See [addFormat](https://github.com/epoberezkin/ajv#api-addformat) method.\n\nThe value of keyword `formatExclusiveMaximum` (`formatExclusiveMinimum`) should be a boolean value. These keyword cannot be used without `formatMaximum` (`formatMinimum`). If this keyword value is equal to `true`, the data to be valid should not be equal to the value in `formatMaximum` (`formatMinimum`) keyword.\n\n```javascript\nrequire('ajv-keywords')(ajv, ['formatMinimum', 'formatMaximum']);\n\nvar schema = {\n  format: 'date',\n  formatMinimum: '2016-02-06',\n  formatMaximum: '2016-12-27',\n  formatExclusiveMaximum: true\n}\n\nvar validDataList = ['2016-02-06', '2016-12-26', 1];\n\nvar invalidDataList = ['2016-02-05', '2016-12-27', 'abc'];\n```\n\n\n### `dynamicDefaults`\n\nThis keyword allows to assign dynamic defaults to properties, such as timestamps, unique IDs etc.\n\nThis keyword only works if `useDefaults` options is used and not inside `anyOf` keywrods etc., in the same way as [default keyword treated by Ajv](https://github.com/epoberezkin/ajv#assigning-defaults).\n\nThe keyword should be added on the object level. Its value should be an object with each property corresponding to a property name, in the same way as in standard `properties` keyword. The value of each property can be:\n\n- an identifier of default function (a string)\n- an object with properties `func` (an identifier) and `args` (an object with parameters that will be passed to this function during schema compilation - see examples).\n\nThe properties used in `dynamicDefaults` should not be added to `required` keyword (or validation will fail), because unlike `default` this keyword is processed after validation.\n\nThere are several predefined dynamic default functions:\n\n- `\"timestamp\"` - current timestamp in milliseconds\n- `\"datetime\"` - current date and time as string (ISO, valid according to `date-time` format)\n- `\"date\"` - current date as string (ISO, valid according to `date` format)\n- `\"time\"` - current time as string (ISO, valid according to `time` format)\n- `\"random\"` - pseudo-random number in [0, 1) interval\n- `\"randomint\"` - pseudo-random integer number. If string is used as a property value, the function will randomly return 0 or 1. If object `{func: 'randomint', max: N}` is used then the default will be an integer number in [0, N) interval.\n- `\"seq\"` - sequential integer number starting from 0. If string is used as a property value, the default sequence will be used. If object `{func: 'seq', name: 'foo'}` is used then the sequence with name `\"foo\"` will be used. Sequences are global, even if different ajv instances are used.\n\n```javascript\nvar schema = {\n  type: 'object',\n  dynamicDefaults: {\n    ts: 'datetime',\n    r: { func: 'randomint', max: 100 },\n    id: { func: 'seq', name: 'id' }\n  },\n  properties: {\n    ts: {\n      type: 'string',\n      format: 'datetime'\n    },\n    r: {\n      type: 'integer',\n      minimum: 0,\n      maximum: 100,\n      exclusiveMaximum: true\n    },\n    id: {\n      type: 'integer',\n      minimum: 0\n    }\n  }\n};\n\nvar data = {};\najv.validate(data); // true\ndata; // { ts: '2016-12-01T22:07:28.829Z', r: 25, id: 0 }\n\nvar data1 = {};\najv.validate(data1); // true\ndata1; // { ts: '2016-12-01T22:07:29.832Z', r: 68, id: 1 }\n\najv.validate(data1); // true\ndata1; // didn't change, as all properties were defined\n```\n\nYou can add your own dynamic default function to be recognised by this keyword:\n\n```javascript\nvar uuid = require('uuid');\n\nfunction uuidV4() { return uuid.v4(); }\n\nvar definition = require('ajv-keywords').get('dynamicDefaults').definition;\n// or require('ajv-keywords/keywords/dynamicDefaults').definition;\ndefinition.DEFAULTS.uuid = uuidV4;\n\nvar schema = {\n  dynamicDefaults: { id: 'uuid' },\n  properties: { id: { type: 'string', format: 'uuid' } }\n};\n\nvar data = {};\najv.validate(schema, data); // true\ndata; // { id: 'a1183fbe-697b-4030-9bcc-cfeb282a9150' };\n\nvar data1 = {};\najv.validate(schema, data1); // true\ndata1; // { id: '5b008de7-1669-467a-a5c6-70fa244d7209' }\n```\n\nYou also can define dynamic default that accepts parameters, e.g. version of uuid:\n\n```javascript\nvar uuid = require('uuid');\n\nfunction getUuid(args) {\n  var version = 'v' + (arvs && args.v || 4);\n  return function() {\n    return uuid[version]();\n  };\n}\n\nvar definition = require('ajv-keywords').get('dynamicDefaults').definition;\ndefinition.DEFAULTS.uuid = getUuid;\n\nvar schema = {\n  dynamicDefaults: {\n    id1: 'uuid', // v4\n    id2: { func: 'uuid', v: 4 }, // v4\n    id3: { func: 'uuid', v: 1 } // v1\n  }\n};\n```\n\n### `transform`\n\nThis keyword allows a string to be modified before validation. \n\nThese keywords apply only to strings. If the data is not a string, the transform is skipped.\n\nThere are limitation due to how ajv is written:\n- a stand alone string cannot be transformed. ie `data = 'a'; ajv.validate(schema, data);`\n- currently cannot work with `ajv-pack`\n\n**Supported options:**\n- `trim`: remove whitespace from start and end\n- `trimLeft`: remove whitespace from start\n- `trimRight`: remove whitespace from end\n- `toLowerCase`: case string to all lower case\n- `toUpperCase`: case string to all upper case\n- `toEnumCase`: case string to match case in schema\n\nOptions are applied in the order they are listed.\n\nNote: `toEnumCase` requires that all allowed values are unique when case insensitive.\n\n**Example: multiple options**\n```javascript\nrequire('ajv-keywords')(ajv, ['transform']);\n\nvar schema = {\n  type: 'array',\n  items: {\n    type:'string',\n    transform:['trim','lowercase']\n  }\n};\n\nvar data = ['  MixCase  '];\navj.validate(schema, data);\nconsole.log(data); // ['mixcase']\n\n```\n\n**Example: `enumcase`**\n```javascript\nrequire('ajv-keywords')(ajv, ['transform']);\n\nvar schema = {\n  type: 'array',\n  items: {\n    type:'string',\n    transform:['trim','enumcase'],\n    enum:['pH']\n  }\n};\n\nvar data = ['ph',' Ph','PH','pH '];\navj.validate(schema, data);\nconsole.log(data); // ['pH','pH','pH','pH']\n```\n\n\n## License\n\n[MIT](https://github.com/epoberezkin/ajv-keywords/blob/master/LICENSE)\n",
                    "readmeFilename": "README.md",
                    "dependencies": {},
                    "optionalDependencies": {},
                    "_dependencies": {},
                    "path": "/home/srikanth/Srikanth/alfresco/adf-components/node_modules/ajv-keywords",
                    "error": "[Circular]",
                    "extraneous": false
                  }
                },
                "description": "Webpack Schema Validation Utilities",
                "devDependencies": {
                  "@commitlint/cli": "^5.2.8",
                  "@commitlint/config-angular": "^5.1.1",
                  "@webpack-contrib/eslint-config-webpack": "^2.0.2",
                  "babel-cli": "^6.26.0",
                  "babel-jest": "^22.2.2",
                  "babel-plugin-transform-object-rest-spread": "^6.26.0",
                  "babel-polyfill": "^6.26.0",
                  "babel-preset-env": "^1.6.1",
                  "conventional-github-releaser": "^2.0.0",
                  "cross-env": "^5.1.3",
                  "del": "^3.0.0",
                  "del-cli": "^1.1.0",
                  "eslint": "^4.17.0",
                  "eslint-plugin-import": "^2.8.0",
                  "eslint-plugin-prettier": "^2.6.0",
                  "husky": "^0.14.3",
                  "jest": "^22.2.2",
                  "lint-staged": "^6.1.0",
                  "memory-fs": "^0.4.1",
                  "nsp": "^3.1.0",
                  "pre-commit": "^1.2.2",
                  "prettier": "^1.10.2",
                  "standard-version": "^4.3.0",
                  "webpack": "^3.11.0",
                  "webpack-defaults": "^2.0.0-rc.4"
                },
                "engines": {
                  "node": ">= 4.8.0 || >= 6.9.0 || >= 8.9.0"
                },
                "files": [
                  "dist"
                ],
                "homepage": "https://github.com/webpack-contrib/schema-utils",
                "license": "MIT",
                "lint-staged": {
                  "*.js": [
                    "eslint --fix",
                    "git add"
                  ]
                },
                "main": "dist/cjs.js",
                "name": "schema-utils",
                "peerDependencies": {
                  "webpack": "^2.0.0 || ^3.0.0 || ^4.0.0"
                },
                "pre-commit": "lint-staged",
                "repository": {
                  "type": "git",
                  "url": "git+https://github.com/webpack-contrib/schema-utils.git"
                },
                "scripts": {
                  "build": "cross-env NODE_ENV=production babel src -d dist --ignore 'src/**/*.test.js' --copy-files",
                  "ci:coverage": "npm run test:coverage -- --runInBand",
                  "ci:lint": "npm run lint && npm run security",
                  "ci:lint:commits": "commitlint --from=${CIRCLE_BRANCH} --to=${CIRCLE_SHA1}",
                  "ci:test": "npm run test -- --runInBand",
                  "clean": "del-cli dist",
                  "commitlint": "commitlint",
                  "commitmsg": "commitlint -e $GIT_PARAMS",
                  "defaults": "webpack-defaults",
                  "lint": "eslint --cache src test",
                  "lint-staged": "lint-staged",
                  "prebuild": "npm run clean",
                  "prepare": "npm run build",
                  "release": "standard-version",
                  "release:ci": "conventional-github-releaser -p angular",
                  "release:validate": "commitlint --from=$(git describe --tags --abbrev=0) --to=$(git rev-parse HEAD)",
                  "security": "nsp check",
                  "start": "npm run build -- -w",
                  "test": "jest",
                  "test:coverage": "jest --collectCoverageFrom='src/**/*.js' --coverage",
                  "test:watch": "jest --watch"
                },
                "version": "0.4.5",
                "readme": "[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![deps][deps]][deps-url]\n[![test][test]][test-url]\n[![coverage][cover]][cover-url]\n[![chat][chat]][chat-url]\n\n<div align=\"center\">\n  <a href=\"http://json-schema.org\">\n    <img width=\"160\" height=\"160\"\n      src=\"https://raw.githubusercontent.com/webpack-contrib/schema-utils/master/logo.png\">\n  </a>\n  <a href=\"https://github.com/webpack/webpack\">\n    <img width=\"200\" height=\"200\"\n      src=\"https://webpack.js.org/assets/icon-square-big.svg\">\n  </a>\n  <h1>Schema Utils</h1>\n</div>\n\n<h2 align=\"center\">Install</h2>\n\n```bash\nnpm i schema-utils\n```\n\n<h2 align=\"center\">Usage</h2>\n\n### `validateOptions`\n\n**schema.json**\n```js\n{\n  \"type\": \"object\",\n  \"properties\": {\n    // Options...\n  },\n  \"additionalProperties\": false\n}\n```\n\n```js\nimport schema from 'path/to/schema.json'\nimport validateOptions from 'schema-utils'\n\nvalidateOptions(schema, options, 'Loader/Plugin Name')\n```\n\n<h2 align=\"center\">Examples</h2>\n\n**schema.json**\n```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\"\n    },\n    \"test\": {\n      \"anyOf\": [\n        { \"type\": \"array\" },\n        { \"type\": \"string\" },\n        { \"instanceof\": \"RegExp\" }\n      ]\n    },\n    \"transform\": {\n      \"instanceof\": \"Function\"\n    },\n    \"sourceMap\": {\n      \"type\": \"boolean\"\n    }\n  },\n  \"additionalProperties\": false\n}\n```\n\n### `Loader`\n\n```js\nimport { getOptions } from 'loader-utils'\nimport validateOptions from 'schema-utils'\n\nimport schema from 'path/to/schema.json'\n\nfunction loader (src, map) {\n  const options = getOptions(this) || {}\n\n  validateOptions(schema, options, 'Loader Name')\n\n  // Code...\n}\n```\n\n### `Plugin`\n\n```js\nimport validateOptions from 'schema-utils'\n\nimport schema from 'path/to/schema.json'\n\nclass Plugin {\n  constructor (options) {\n    validateOptions(schema, options, 'Plugin Name')\n\n    this.options = options\n  }\n\n  apply (compiler) {\n    // Code...\n  }\n}\n```\n\n<h2 align=\"center\">Maintainers</h2>\n\n<table>\n  <tbody>\n    <tr>\n      <td align=\"center\">\n        <img width=\"150\" height=\"150\"\n        src=\"https://github.com/bebraw.png?v=3&s=150\">\n        </br>\n        <a href=\"https://github.com/bebraw\">Juho Vepsäläinen</a>\n      </td>\n      <td align=\"center\">\n        <img width=\"150\" height=\"150\"\n        src=\"https://github.com/d3viant0ne.png?v=3&s=150\">\n        </br>\n        <a href=\"https://github.com/d3viant0ne\">Joshua Wiens</a>\n      </td>\n      <td align=\"center\">\n        <img width=\"150\" height=\"150\"\n        src=\"https://github.com/michael-ciniawsky.png?v=3&s=150\">\n        </br>\n        <a href=\"https://github.com/michael-ciniawsky\">Michael Ciniawsky</a>\n      </td>\n    </tr>\n  <tbody>\n</table>\n\n\n[npm]: https://img.shields.io/npm/v/schema-utils.svg\n[npm-url]: https://npmjs.com/package/schema-utils\n\n[node]: https://img.shields.io/node/v/schema-utils.svg\n[node-url]: https://nodejs.org\n\n[deps]: https://david-dm.org/webpack-contrib/schema-utils.svg\n[deps-url]: https://david-dm.org/webpack-contrib/schema-utils\n\n[test]: http://img.shields.io/travis/webpack-contrib/schema-utils.svg\n[test-url]: https://travis-ci.org/webpack-contrib/schema-utils\n\n[cover]: https://codecov.io/gh/webpack-contrib/schema-utils/branch/master/graph/badge.svg\n[cover-url]: https://codecov.io/gh/webpack-contrib/schema-utils\n\n[chat]: https://img.shields.io/badge/gitter-webpack%2Fwebpack-brightgreen.svg\n[chat-url]: https://gitter.im/webpack/webpack\n",
                "readmeFilename": "README.md",
                "optionalDependencies": {},
                "_dependencies": {
                  "ajv": "^6.1.0",
                  "ajv-keywords": "^3.1.0"
                },
                "path": "/home/srikanth/Srikanth/alfresco/adf-components/node_modules/schema-utils",
                "error": "[Circular]",
                "extraneous": false
              }
            },
            "description": "worker loader module for webpack",
            "devDependencies": {
              "babel-cli": "^6.0.0",
              "babel-jest": "^21.0.0",
              "babel-plugin-transform-object-rest-spread": "^6.0.0",
              "babel-polyfill": "^6.0.0",
              "babel-preset-env": "^1.0.0",
              "cross-env": "^5.0.0",
              "del": "^3.0.0",
              "del-cli": "^1.0.0",
              "eslint": "^4.0.0",
              "eslint-config-webpack": "^1.0.0",
              "eslint-plugin-import": "^2.2.0",
              "jest": "^21.0.0",
              "lint-staged": "^4.0.0",
              "nsp": "^2.6.0",
              "pre-commit": "^1.0.0",
              "standard-version": "^4.0.0",
              "webpack": "^3.0.0",
              "webpack-defaults": "^1.6.0"
            },
            "engines": {
              "node": ">= 4.8 < 5.0.0 || >= 5.10"
            },
            "files": [
              "dist"
            ],
            "homepage": "https://github.com/webpack-contrib/html-loader",
            "license": "MIT",
            "lint-staged": {
              "*.js": [
                "eslint --fix",
                "git add"
              ]
            },
            "main": "dist/cjs.js",
            "name": "worker-loader",
            "peerDependencies": {
              "webpack": "^2.0.0 || ^3.0.0 || ^4.0.0"
            },
            "pre-commit": "lint-staged",
            "repository": {
              "type": "git",
              "url": "git+https://github.com/webpack-contrib/worker-loader.git"
            },
            "scripts": {
              "appveyor:test": "npm run test",
              "build": "cross-env NODE_ENV=production babel src -d dist --ignore 'src/**/*.test.js' --copy-files",
              "clean": "del-cli dist",
              "defaults": "webpack-defaults",
              "lint": "eslint --cache src test",
              "lint-staged": "lint-staged",
              "prebuild": "npm run clean",
              "prepare": "npm run build",
              "release": "standard-version",
              "security": "nsp check",
              "start": "npm run build -- -w",
              "test": "jest",
              "test:coverage": "jest --collectCoverageFrom='src/**/*.js' --coverage",
              "test:watch": "jest --watch",
              "travis:coverage": "npm run test:coverage -- --runInBand",
              "travis:lint": "npm run lint && npm run security",
              "travis:test": "npm run test -- --runInBand"
            },
            "version": "1.1.1",
            "readme": "[![npm][npm]][npm-url]\r\n[![node][node]][node-url]\r\n[![deps][deps]][deps-url]\r\n[![test][test]][test-url]\r\n[![coverage][cover]][cover-url]\r\n[![chat][chat]][chat-url]\r\n\r\n<div align=\"center\">\r\n  <a href=\"https://github.com/webpack/webpack\">\r\n    <img width=\"200\" height=\"200\" src=\"https://cdn.rawgit.com/webpack/media/e7485eb2/logo/icon.svg\">\r\n  </a>\r\n  <h1>Worker Loader</h1>\r\n  <p>This loader registers the script as <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API\">Web Worker</a><p>\r\n</div>\r\n\r\n\r\n<h2 align=\"center\">Install</h2>\r\n\r\n```bash\r\nnpm i -D worker-loader\r\n```\r\n\r\n<h2 align=\"center\"><a href=\"https://webpack.js.org/concepts/loaders\">Usage</a></h2>\r\n\r\n### `Inlined`\r\n\r\n**App.js**\r\n```js\r\nimport Worker from 'worker-loader!./Worker.js';\r\n```\r\n\r\n### `Config`\r\n\r\n**webpack.config.js**\r\n```js\r\n{\r\n  module: {\r\n    rules: [\r\n      {\r\n        test: /\\.worker\\.js$/,\r\n        use: { loader: 'worker-loader' }\r\n      }\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\n**App.js**\r\n```js\r\nimport Worker from './file.worker.js';\r\n\r\nconst worker = new Worker();\r\n\r\nworker.postMessage({ a: 1 });\r\nworker.onmessage = function (event) {};\r\n\r\nworker.addEventListener(\"message\", function (event) {});\r\n```\r\n\r\n<h2 align=\"center\">Options</h2>\r\n\r\n|Name|Type|Default|Description|\r\n|:--:|:--:|:-----:|:----------|\r\n|[**`name`**](#name)|`{String}`|`[hash].worker.js`|Set a custom name for the output script|\r\n|[**`inline`**](#inline)|`{Boolean}`|`false`|Inline the worker as a BLOB|\r\n|[**`fallback`**](#fallback)|`{Boolean}`|`false`|Require a fallback for non-worker supporting environments|\r\n|[**`publicPath`**](#publicPath)|`{String}`|`null`|Override the path from which worker scripts are downloaded|\r\n\r\n### `name`\r\n\r\nTo set a custom name for the output script, use the `name` parameter. The name may contain the string `[hash]`, which will be replaced with a content dependent hash for caching purposes\r\n\r\n*webpack.config.js**\r\n```js\r\n{\r\n  loader: 'worker-loader',\r\n  options: { name: 'WorkerName.[hash].js' }\r\n}\r\n```\r\n\r\n### `inline`\r\n\r\nYou can also inline the worker as a BLOB with the `inline` parameter\r\n\r\n**webpack.config.js**\r\n```js\r\n{\r\n  loader: 'worker-loader',\r\n  options: { inline: true }\r\n}\r\n```\r\n\r\n> ℹ️  Inline mode will also create chunks for browsers without support for inline workers, to disable this behavior just set `fallback` parameter as `false`\r\n\r\n**webpack.config.js**\r\n```js\r\n{\r\n  loader: 'worker-loader'\r\n  options: { inline: true, fallback: false }\r\n}\r\n```\r\n\r\n### `fallback`\r\n\r\nRequire a fallback for non-worker supporting environments\r\n\r\n**webpack.config.js**\r\n```js\r\n{\r\n  loader: 'worker-loader'\r\n  options: { fallback: false }\r\n}\r\n```\r\n\r\n### `publicPath`\r\n\r\nOverrides the path from which worker scripts are downloaded. If not specified, the same public path used for other\r\nwebpack assets is used\r\n\r\n**webpack.config.js**\r\n```js\r\n{\r\n  loader: 'worker-loader'\r\n  options: { publicPath: '/scripts/workers/' }\r\n}\r\n```\r\n\r\n<h2 align=\"center\">Examples</h2>\r\n\r\nThe worker file can import dependencies just like any other file\r\n\r\n**Worker.js**\r\n```js\r\nconst _ = require('lodash')\r\n\r\nconst obj = { foo: 'foo' }\r\n\r\n_.has(obj, 'foo')\r\n\r\n// Post data to parent thread\r\nself.postMessage({ foo: 'foo' })\r\n\r\n// Respond to message from parent thread\r\nself.addEventListener('message', (event) => console.log(event))  \r\n```\r\n\r\n### `Integrating with ES2015 Modules`\r\n\r\n> ℹ️  You can even use ES2015 Modules if you have the [`babel-loader`](https://github.com/babel/babel-loader) configured.\r\n\r\n**Worker.js**\r\n```js\r\nimport _ from 'lodash'\r\n\r\nconst obj = { foo: 'foo' }\r\n\r\n_.has(obj, 'foo')\r\n\r\n// Post data to parent thread\r\nself.postMessage({ foo: 'foo' })\r\n\r\n// Respond to message from parent thread\r\nself.addEventListener('message', (event) => console.log(event))\r\n```\r\n\r\n### `Integrating with TypeScript`\r\n\r\nTo integrate with TypeScript, you will need to define a custom module for the exports of your worker\r\n\r\n**typings/custom.d.ts**\r\n```typescript\r\ndeclare module \"worker-loader!*\" {\r\n  class WebpackWorker extends Worker {\r\n    constructor();\r\n  }\r\n\r\n  export = WebpackWorker;\r\n}\r\n```\r\n\r\n**Worker.ts**\r\n```typescript\r\nconst ctx: Worker = self as any;\r\n\r\n// Post data to parent thread\r\nctx.postMessage({ foo: \"foo\" });\r\n\r\n// Respond to message from parent thread\r\nctx.addEventListener(\"message\", (event) => console.log(event));\r\n```\r\n\r\n**App.ts**\r\n```typescript\r\nimport Worker = require(\"worker-loader!./Worker\");\r\n\r\nconst worker = new Worker();\r\n\r\nworker.postMessage({ a: 1 });\r\nworker.onmessage = (event) => {};\r\n\r\nworker.addEventListener(\"message\", (event) => {});\r\n```\r\n\r\n### `Cross-Origin Policy`\r\n\r\n[`WebWorkers`](https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API) are restricted by a [same-origin policy](https://en.wikipedia.org/wiki/Same-origin_policy), so if your `webpack` assets are not being served from the same origin as your application, their download may be blocked by your browser. This scenario can commonly occur if you are hosting your assets under a CDN domain. Even downloads from the `webpack-dev-server` could be blocked. There are two workarounds\r\n\r\nFirstly, you can inline the worker as a blob instead of downloading it as an external script via the [`inline`](#inline) parameter\r\n\r\n**App.js**\r\n```js\r\nimport Worker from './file.worker.js';\r\n```\r\n\r\n**webpack.config.js**\r\n```js\r\n{\r\n  loader: 'worker-loader'\r\n  options: { inline: true }\r\n}\r\n```\r\n\r\nSecondly, you may override the base download URL for your worker script via the [`publicPath`](#publicpath) option\r\n\r\n**App.js**\r\n```js\r\n// This will cause the worker to be downloaded from `/workers/file.worker.js`\r\nimport Worker from './file.worker.js';\r\n```\r\n\r\n**webpack.config.js**\r\n```js\r\n{\r\n  loader: 'worker-loader'\r\n  options: { publicPath: '/workers/' }\r\n}\r\n```\r\n\r\n<h2 align=\"center\">Maintainers</h2>\r\n\r\n<table>\r\n  <tbody>\r\n    <tr>\r\n      <td align=\"center\">\r\n        <a href=\"https://github.com/TrySound\">\r\n          <img width=\"150\" height=\"150\" src=\"https://avatars3.githubusercontent.com/u/5635476?v=3&s=150\">\r\n        </a>\r\n        <br />\r\n        <a href=\"https://github.com/TrySound\">Bogdan Chadkin</a>\r\n      </td>\r\n      <td align=\"center\">\r\n        <a href=\"https://github.com/bebraw\">\r\n          <img width=\"150\" height=\"150\" src=\"https://github.com/bebraw.png?v=3&s=150\">\r\n          </br>\r\n          Juho Vepsäläinen\r\n        </a>\r\n      </td>\r\n      <td align=\"center\">\r\n        <a href=\"https://github.com/d3viant0ne\">\r\n          <img width=\"150\" height=\"150\" src=\"https://github.com/d3viant0ne.png?v=3&s=150\">\r\n          </br>\r\n          Joshua Wiens\r\n        </a>\r\n      </td>\r\n      <td align=\"center\">\r\n        <a href=\"https://github.com/michael-ciniawsky\">\r\n          <img width=\"150\" height=\"150\" src=\"https://github.com/michael-ciniawsky.png?v=3&s=150\">\r\n          </br>\r\n          Michael Ciniawsky\r\n        </a>\r\n      </td>\r\n      <td align=\"center\">\r\n        <a href=\"https://github.com/evilebottnawi\">\r\n          <img width=\"150\" height=\"150\" src=\"https://github.com/evilebottnawi.png?v=3&s=150\">\r\n          </br>\r\n          Alexander Krasnoyarov\r\n        </a>\r\n      </td>\r\n    </tr>\r\n  <tbody>\r\n</table>\r\n\r\n\r\n[npm]: https://img.shields.io/npm/v/worker-loader.svg\r\n[npm-url]: https://npmjs.com/package/worker-loader\r\n\r\n[node]: https://img.shields.io/node/v/cache-loader.svg\r\n[node-url]: https://nodejs.org\r\n\r\n[deps]: https://david-dm.org/webpack-contrib/worker-loader.svg\r\n[deps-url]: https://david-dm.org/webpack-contrib/worker-loader\r\n\r\n[test]: http://img.shields.io/travis/webpack-contrib/worker-loader.svg\r\n[test-url]: https://travis-ci.org/webpack-contrib/worker-loader\r\n\r\n[cover]: https://codecov.io/gh/webpack-contrib/cache-loader/branch/master/graph/badge.svg\r\n[cover-url]: https://codecov.io/gh/webpack-contrib/cache-loader\r\n\r\n[chat]: https://img.shields.io/badge/gitter-webpack%2Fwebpack-brightgreen.svg\r\n[chat-url]: https://gitter.im/webpack/webpack\r\n",
            "readmeFilename": "README.md",
            "optionalDependencies": {},
            "_dependencies": {
              "loader-utils": "^1.0.0",
              "schema-utils": "^0.4.0"
            },
            "path": "/home/srikanth/Srikanth/alfresco/adf-components/node_modules/worker-loader",
            "error": "[Circular]",
            "extraneous": false
          }
        },
        "description": "Generic build of Mozilla's PDF.js library.",
        "format": "amd",
        "homepage": "http://mozilla.github.io/pdf.js/",
        "keywords": [
          "Mozilla",
          "pdf",
          "pdf.js"
        ],
        "license": "Apache-2.0",
        "main": "build/pdf.js",
        "name": "pdfjs-dist",
        "peerDependencies": {
          "webpack": "^2.0.0 || ^3.0.0"
        },
        "repository": {
          "type": "git",
          "url": "git+https://github.com/mozilla/pdfjs-dist.git"
        },
        "version": "2.0.489",
        "readme": "# PDF.js\n\nPDF.js is a Portable Document Format (PDF) library that is built with HTML5.\nOur goal is to create a general-purpose, web standards-based platform for\nparsing and rendering PDFs.\n\nThis is a pre-built version of the PDF.js source code. It is automatically\ngenerated by the build scripts.\n\nSee https://github.com/mozilla/pdf.js for learning and contributing.\n",
        "readmeFilename": "README.md",
        "devDependencies": {},
        "optionalDependencies": {},
        "_dependencies": {
          "node-ensure": "^0.0.0",
          "worker-loader": "^1.1.1"
        },
        "path": "/home/srikanth/Srikanth/alfresco/adf-components/node_modules/pdfjs-dist",
        "error": "[Circular]",
        "extraneous": false,
        "peerMissing": [
          {
            "requiredBy": "@alfresco/adf-core@2.6.0",
            "requires": "pdfjs-dist@2.0.303"
          }
        ]
      },
      "peerMissing": true
    },
    "rxjs": {
      "version": "6.3.3",
      "from": "rxjs@6.3.3",
      "resolved": "https://registry.npmjs.org/rxjs/-/rxjs-6.3.3.tgz"
    },
    "zone.js": {
      "version": "0.8.26",
      "from": "zone.js@0.8.26",
      "resolved": "https://registry.npmjs.org/zone.js/-/zone.js-0.8.26.tgz"
    }
  }
}
